# Copyright (c) Forward Email LLC
# SPDX-License-Identifier: BUSL-1.1

---
- hosts: imap:pop3:smtp:http:bree:sqlite:mx1:mx2:mail
  name: Security
  become: true
  become_user: root
  vars:
    copy_local_key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"
    copy_local_key_2: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa_2.pub') }}"
  handlers:
    - name: Restart SSH
      service:
        name: ssh
        state: restarted
  tasks:
    - name: Delete Digital Ocean Networking Configuration
      ansible.builtin.file:
        state: absent
        path: /etc/systemd/resolved.conf.d/DigitalOcean.conf

    - name: Remove Ubuntu Advantage Tools
      apt:
        pkg: ubuntu-advantage-tools
        state: absent

    - name: Purge Ubuntu Advantage Tools
      apt:
        autoremove: yes
        purge: true
        name:
          - ubuntu-advantage-tools

    - name: Insert/Update disable core dumps
      blockinfile:
        path: /etc/security/limits.conf
        state: present
        block: |
          * hard core 0
          * soft core 0

    # https://www.mongodb.com/docs/manual/tutorial/transparent-huge-pages/
    # https://unix.stackexchange.com/questions/99154/disable-transparent-hugepages
    # https://stackoverflow.com/questions/51246128/disabling-thp-transparent-hugepages-with-ansible-role
    - name: "Disable Transparent Huge Pages (THP)"
      template:
        src: "{{ playbook_dir }}/templates/thp.j2"
        dest: /etc/systemd/system/disable-transparent-huge-pages.service
        owner: root
        mode: "0644"

    - name: "Enable Disabled THP Systemd Service"
      service:
        daemon_reload: yes
        name: disable-transparent-huge-pages
        enabled: true
        state: started

    - name: Ensure fs.suid_dumpable is set to 0 and added in sysctl
      sysctl:
        name: fs.suid_dumpable
        value: "0"
        sysctl_set: true

    - name: Insert/Update disable core dumps
      blockinfile:
        path: /etc/profile
        state: present
        block: |
          ulimit -S -c 0 > /dev/null 2>&1

    # Disable swap entirely (we also set swappiness to 0 below)
    # https://unix.stackexchange.com/a/636526
    - name: Disable swap for current session
      command: swapoff -a
    - name: Disable swap permanently, persist reboots
      replace:
        path: /etc/fstab
        regexp: '^(\s*)([^#\n]+\s+)(\w+\s+)swap(\s+.*)$'
        replace: '#\1\2\3swap\4'
        backup: yes
    - name: Disable swap on boot via systemd
      template:
        src: "{{ playbook_dir }}/templates/noswap.j2"
        dest: /etc/systemd/system/noswap.service
        owner: root
        mode: "0644"
    - name: Enable noswap service via systemd
      systemd:
        daemon_reload: yes
        name: noswap
        enabled: true
        state: started

    # Disable Modprobe Loading of USB Storage Driver
    # https://docs.datadoghq.com/security/default_rules/xccdf-org-ssgproject-content-rule-kernel-module-usb-storage-disabled/
    - name: Ensure kernel module 'usb-storage' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/usb-storage.conf
        regexp: install\s+usb-storage
        line: install usb-storage /bin/true

    - name: Update initramfs
      shell: |
        sudo update-initramfs -u

    # TODO: Disable Accepting ICMP Redirects for All IPv4 Interfaces
    #       https://docs.datadoghq.com/security/default_rules/xccdf-org-ssgproject-content-rule-sysctl-net-ipv4-conf-all-accept-redirects/#ansible-playbook

    # Disable Apport Service
    # https://docs.datadoghq.com/security/default_rules/xccdf-org-ssgproject-content-rule-service-apport-disabled/#ansible-playbook
    - name: Disable service apport
      systemd:
        name: apport.service
        enabled: 'no'
        state: stopped
        masked: 'yes'
    # NOTE: this does not seem necessary since apport.socket does not exist
    #- name: Disable socket apport
    #  systemd:
    #    name: apport.socket
    #    enabled: 'no'
    #    state: stopped
    #    masked: 'yes'
    - name: Disable apport via config
      block:
        - name: Deduplicate values from /etc/default/apport
          lineinfile:
            path: /etc/default/apport
            create: false
            line: enabled=1
            state: absent
        - name: Insert correct line to /etc/default/apport
          lineinfile:
            path: /etc/default/apport
            create: false
            line: enabled=0
            state: present

    #
    # Disable coredump backtraces
    # https://docs.datadoghq.com/security/default_rules/xccdf-org-ssgproject-content-rule-coredump-disable-backtraces/
    #
    - name: Disable core dump backtraces
      block:
        - name: Check for duplicate values
          lineinfile:
            path: /etc/systemd/coredump.conf
            create: true
            regexp: ^\s\*ProcessSizeMax\s\*=\s\*
            state: absent
          check_mode: true
          changed_when: false
          register: dupes
        - name: Deduplicate values from /etc/systemd/coredump.conf
          lineinfile:
            path: /etc/systemd/coredump.conf
            create: true
            regexp: ^\s\*ProcessSizeMax\s\*=\s\*
            state: absent
          when: dupes.found is defined and dupes.found > 1
        - name: Insert correct line to /etc/systemd/coredump.conf
          lineinfile:
            path: /etc/systemd/coredump.conf
            create: true
            regexp: ^\s\*ProcessSizeMax\s\*=\s\*
            line: ProcessSizeMax=0
            state: present

    # update deps
    - name: Update apt
      apt:
        update_cache: true

    # upgrade deps
    - name: Upgrade deps
      apt:
        upgrade: safe
        update_cache: true

    # install deps
    - name: Install deps
      apt:
        name:
          - iptables
          - ipset
          - build-essential
          - curl
          - git
          - vim
          - wget
          - libtool
          - automake
          - autoconf
          - nasm
          - ripgrep
          - redis-tools
        update_cache: true

    # prevents port scanning
    # https://github.com/forwardemail/portscan-protection
    # (we maintain our own fork since it has an auto-update in place)
    # https://unix.stackexchange.com/a/580520
    - name: Prevent port scanning
      shell: |
        curl -s https://raw.githubusercontent.com/forwardemail/portscan-protection/master/portscan-protection.sh | sudo bash /dev/stdin -i
      register: port_scan
      failed_when: port_scan.rc != 1

    # create devops group
    - name: Create devops group
      group:
        name: devops
        state: present

    - name: Set devops group to have sudo access
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: ^%devops
        line: "%devops ALL=(ALL) NOPASSWD: ALL"
        validate: /usr/sbin/visudo -cf %s

    # create devops user (with sudo)
    - name: Create a devops user with sudo privileges
      user:
        name: devops
        password: "!"
        state: present
        groups: devops
        append: true
        create_home: true
        shell: /bin/bash

    - name: Set authorized key for devops user
      authorized_key:
        user: devops
        state: present
        key: "{{ copy_local_key }}"

    - name: Set authorized key 2 for devops user
      authorized_key:
        user: devops
        state: present
        key: "{{ copy_local_key_2 }}"

    # create deploy user
    - name: Create a deploy user
      user:
        name: deploy
        password: "!"
        state: present
        append: true
        create_home: true
        shell: /bin/bash
        generate_ssh_key: true
        ssh_key_bits: 4096

    - name: Set authorized key for deploy user
      authorized_key:
        user: deploy
        state: present
        key: "{{ copy_local_key }}"

    - name: Set authorized key 2 for deploy user
      authorized_key:
        user: deploy
        state: present
        key: "{{ copy_local_key_2 }}"

    - name: Remove non-interactive from deploy bashrc
      ansible.builtin.replace:
        path: /home/deploy/.bashrc
        regexp: "{{ '      *) return;;' | regex_escape() }}"
        replace: "      *) :;"
      tags:
        - bash

    # disable root login
    - name: Disable root login
      lineinfile:
        path: /etc/ssh/sshd_config
        line: "{{ item.key }} {{ item.value }}"
        state: "{{ item.state }}"
      loop:
        - { key: PermitRootLogin, value: "yes", state: absent }
        - { key: PasswordAuthentication, value: "yes", state: absent }
        - { key: PermitRootLogin, value: "no", state: present }
        - { key: PasswordAuthentication, value: "no", state: present }

    # https://superuser.com/a/1578266
    - name: Disable root password
      user:
        name: root
        password_lock: true
      notify: Restart SSH

    # modify ulimit for devops and deploy
    # https://gist.github.com/visualskyrim/8d93a8be0a3ef6dd6598ec8550f6eadd#file-modify_ulimit-yml-L7
    - name: Configure system settings, file descriptors and number of threads
      pam_limits:
        domain: "*"
        limit_type: "{{ item.limit_type }}"
        limit_item: "{{ item.limit_item }}"
        value: "{{ item.value }}"
      with_items:
        - { limit_type: "-", limit_item: nofile, value: 65536 }
        - { limit_type: "-", limit_item: nproc, value: 65536 }
        - { limit_type: soft, limit_item: memlock, value: unlimited }
        - { limit_type: hard, limit_item: memlock, value: unlimited }
    - name: Reload settings from all system configuration files
      shell: sysctl --system

    # Silence dubious ownership git warning
    - name: Silence git safe dir warning
      become: true
      become_user: deploy
      shell: git config --global --add safe.directory '*'

- hosts: imap:pop3:smtp:http:bree:sqlite:mx1:mx2
  name: Mongo Shell
  become: true
  become_user: root
  tasks:
    - name: Setup keys
      shell: |
        wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | sudo apt-key add -
        echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $(lsb_release -c -s)/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
    - name: Install package
      apt:
        name:
          - mongodb-mongosh
        update_cache: true

- hosts: imap:pop3:smtp:http:bree:sqlite:mx1:mx2
  name: Sysctl
  become: true
  become_user: root
  vars:
    #
    # kernel tuning and performance optimizations
    #
    # https://medium.com/@k1d_bl4ck/a-quick-story-about-node-js-socket-io-and-the-linux-tcp-stack-bf1e8318b20e
    # https://gist.github.com/vongosling/9929680
    # https://wiki.mikejung.biz/Sysctl_tweaks
    # https://docs.continuent.com/tungsten-clustering-6.1/performance-networking.html
    # https://www.vpndada.com/how-to-setup-a-shadowsocks-server-on-digitalocean/
    #
    # TODO: we should research more configuration settings from these links:
    #       https://udgwebdev.github.io/tunning-em-servidor-linux/
    #       https://gist.github.com/voluntas/bc54c60aaa7ad6856e6f6a928b79ab6c
    #       https://serverdiary.com/linux/how-to-mitigate-tcp-syn-flood-attack-and-resolve-it-on-linux/
    #
    sysctl_settings:
      # disable coredump
      - name: fs.suid_dumpable
        value: 0
      - name: kernel.core_pattern
        value: "|/bin/false"

      # Enable Randomized Layout of Virtual Address Space
      # https://docs.datadoghq.com/security/default_rules/xccdf-org-ssgproject-content-rule-sysctl-kernel-randomize-va-space/
      - name: kernel.randomize_va_space
        value: 2

      #
      # socat has IPv6 issues and is hard to configure
      # authbind et all also have their own issues and configuration pains
      # this is an extremely simple and straightforward way to allow port binding
      #
      # <https://ar.al/2022/08/30/dear-linux-privileged-ports-must-die/>
      # <https://stackoverflow.com/a/51439516>
      # <https://github.com/moby/moby/pull/41030/files#diff-9f91bff23e0bd70d6429b63d9db2d8180d2e89cdb64db4fb3e10a96f74d36271R792>
      #
      - name: net.ipv4.ip_unprivileged_port_start
        value: 25

      #
      # handle ufw forwarding
      #
      - name: net.ipv4.ip_forward
        value: 0
      - name: net.ipv6.conf.default.forwarding
        value: 0
      - name: net.ipv6.conf.all.forwarding
        value: 0

      # handle swapping idle processes to disk
      # https://medium.com/@sauravomar01/linux-kernel-tuning-and-performance-tweaks-d7848178aaa2
      - name: vm.swappiness
        value: 0
      - name: vm.dirty_ratio
        value: 60
      - name: vm.dirty_background_ratio
        value: 2
      - name: vm.vfs_cache_pressure
        value: 50

      # allow local port range
      - name: net.ipv4.ip_local_port_range
        value: 1024 65535

      # increase amount of option memory buffers
      - name: net.core.optmem_max
        value: 25165824

      # max number of concurrently open files
      - name: fs.file-max
        value: 2097152

      # increase the max number of "backlogged sockets" (default: 128)
      # (max number of connections that can be queued for acceptance)
      - name: net.core.somaxconn
        value: 1024

      # length of time orphaned (unreferenced) connection will wait (default: 60)
      - name: net.ipv4.tcp_fin_timeout
        value: 30

      #
      # allow more aggressive network throughput
      # https://en.wikipedia.org/wiki/TCP_window_scale_option
      #
      - name: net.ipv4.tcp_window_scaling
        value: 1

      #
      # configure tcp keepalive
      # https://webhostinggeeks.com/howto/configure-linux-tcp-keepalive-setting/
      #
      - name: net.ipv4.tcp_keepalive_time
        value: 60
      - name: net.ipv4.tcp_keepalive_intvl
        value: 10
      #
      # NOTE: it seems like this was removed in newer kernels
      # `sysctl: cannot stat /proc/sys/net/ipv4/tcp_tw_recycle: No such file or directory`
      #
      # - name: net.ipv4.tcp_keepalive_probe
      # - value: 6

      # max remembered connection requests which did not yet receive ACK (default: 1024)
      # (how many half-open connections can be kept in the queue)
      - name: net.ipv4.tcp_max_syn_backlog
        value: 4096

      # increase system ip port limts to allow for more connections
      - name: net.ipv4.ip_local_port_range
        value: 1024 65535

      # number of packets queued on INPUT (default: 1000)
      - name: net.core.netdev_max_backlog
        value: 4096

      #
      # enable BBR congestion control and make HTTP/2 work reliably
      # https://blog.cloudflare.com/http-2-prioritization-with-nginx/#comment-4147796381
      #
      - name: net.core.default_qdisc
        value: fq
      - name: net.ipv4.tcp_congestion_control
        value: bbr
      - name: net.ipv4.tcp_notsent_lowat
        value: 16384

      # protect against tcp time-wait
      - name: net.ipv4.tcp_rfc1337
        value: 1

      #
      # number of sockets in the "time-wait" state allowed to exist (prevents simple DOS attacks)
      # https://easyengine.io/tutorials/linux/sysctl-conf/
      # https://docs.continuent.com/tungsten-clustering-5.4/performance-networking.html
      #
      - name: net.ipv4.tcp_max_tw_buckets
        value: 1440000

      #
      # we do not use this because it does not work well with load balancers
      # and it also was removed from linux in v4.12
      # https://stackoverflow.com/questions/6426253/tcp-tw-reuse-vs-tcp-tw-recycle-which-to-use-or-both
      #
      # NOTE: this was removed/deprecated in newer kernels
      # `sysctl: cannot stat /proc/sys/net/ipv4/tcp_tw_recycle: No such file or directory`
      #
      # - name: net.ipv4.tcp_tw_recycle
      #   value: 0

      # allow to reuse TIME_WAIT sockets for new connections when safe from protocol
      - name: net.ipv4.tcp_tw_reuse
        value: 1

      # increasing tcp receiving buffer memory size will help large file uploads
      - name: net.ipv4.tcp_rmem
        value: 4096 12582912 16777216

      # increase tcp receiving memory to 16MB per socket
      - name: net.core.rmem_max
        value: 16777216

      # increasing tcp send buffers will increase performance (if and only if) sending large files
      - name: net.ipv4.tcp_wmem
        value: 4096 12582912 16777216

      # increase tcp receiving memory to 16MB per socket
      - name: net.core.wmem_max
        value: 16777216

      # provide RFC 2861 behavior and time out congestion window after an idle period
      # many suggest to disable it to improve performance in some cases
      - name: net.ipv4.tcp_slow_start_after_idle
        value: 0

      # disable caching of TCP congestion state
      - name: net.ipv4.tcp_no_metrics_save
        value: 1

      # set number of retries for for TCP 3 way handshake (default is 5)
      # https://www.justsomestuff.co.uk/wiki/doku.php/linux/syn_tcp_timeout
      - name: net.ipv4.tcp_syn_retries
        value: 3

      #
      # number of times SYNACKS for passive TCP connection are tried
      # https://blog.cloudflare.com/syn-packet-handling-in-the-wild/
      #
      - name: net.ipv4.tcp_synack_retries
        value: 2

      #
      # TODO: node.js does not yet support tcp fastopen
      #
      # https://www.keycdn.com/support/tcp-fast-open
      # https://github.com/nodejs/node/issues/8066
      #
      # - name: net.ipv4.tcp_fastopen
      #   value: 3

      #
      # tune ICMP black holes and adjust path MTU in a smart way
      # https://blog.cloudflare.com/path-mtu-discovery-in-practice/
      #
      - name: net.ipv4.tcp_mtu_probing
        value: 1
      - name: net.ipv4.tcp_base_mss
        value: 1024

      #
      # make the system resistant to out of memory scenarios
      # https://www.linbit.com/kernel-min_free_kbytes/
      #
      # (e.g. 8GB ram = 128MB = 131072)
      # (e.g. 4GB ram = 64MB = 65536)
      #
      - name: vm.min_free_kbytes
        value: 65536

      # control syncookies
      - name: net.ipv4.tcp_syncookies
        value: 1

      # enable timestamps as defined in RFC1323
      - name: net.ipv4.tcp_timestamps
        value: 1

      # tells the kernal how many TCP sockets not attached to any user file handle
      # to maintain. if the number is exceeded, orphaned connections are reset and warning printed
      - name: net.ipv4.tcp_max_orphans
        value: 262144

  roles:
    # https://github.com/Oefenweb/ansible-sysctl
    - role: sysctl

    # https://github.com/Oefenweb/ansible-dns
    - role: dns
      dns_nameservers:
        # cloudflare and google (ipv4/ipv6 and rotated)
        - 1.1.1.1
        - 2606:4700:4700::1111
        - 1.0.0.1
        - 2606:4700:4700::1001
        - 8.8.8.8
        - 2001:4860:4860::8888
        - 8.8.4.4
        - 2001:4860:4860::8844

    # https://github.com/Oefenweb/ansible-ntp
    - role: ntp
      ntp_servers:
        - time.cloudflare.com

    # https://github.com/Oefenweb/ansible-timezone
    #- role: timezone
    #  timezone_zone: 'XYZ'

    # https://github.com/Oefenweb/ansible-fail2ban
    - role: fail2ban
      fail2ban_maxretry: 2
      fail2ban_bantime: -1
      # dbpurgeage is ignored if bantime is -1 (?)
      fail2ban_dbpurgeage: 365d
      fail2ban_findtime: 365d

      # TODO: add IMAP, POP3, and SMTP with pm2 error log output
      # https://www.teaparty.net/technotes/fail2ban.html#:~:text=I%20added%20the%20following%20to%20my%20jail.conf%3A

    # https://github.com/jnv/ansible-role-unattended-upgrades
    - role: unattended-upgrades
      unattended_automatic_reboot_time: "02:00"
