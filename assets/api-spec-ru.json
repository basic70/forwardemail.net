{
  "openapi": "3.0.0",
  "info": {
    "title": "Forward Email API",
    "description": "<img src=\"/img/articles/email-api.webp\" alt=\"\"/><br />Добро пожаловать в подробную документацию API для пересылки электронной почты. Этот API позволяет вам программно управлять пересылкой электронной почты, доменами, псевдонимами, исходящими электронными письмами и многим другим.\n\n## Основные функции\n* **Управление доменами:** Создание, извлечение, обновление, удаление и проверка доменов.\n* **Управление псевдонимами:** Управление псевдонимами электронной почты, включая создание, обновление и управление получателями.\n* **Исходящий SMTP:** Отправка писем через SMTP, управление ограничениями и отслеживание отправленных писем.\n* **Учетная запись и журналы:** Управление данными вашей учетной записи и загрузка журналов активности.\n* **Безопасность:** Шифрование записей TXT и управление участниками/приглашениями домена.\n* **Скоро:** Планируются такие функции, как контакты CardDAV, календари CalDAV и управление сообщениями/папками IMAP/POP3.\n\n## Аутентификация\nДля большинства конечных точек требуется аутентификация с использованием вашего **ключа API**. Укажите ключ API как `username` в заголовке базовой аутентификации, оставив пароль пустым.\n\n```http\nАвторизация: Базовая QVBJX1RPS0VOOg==\n```\n(Замените `API_TOKEN` на ваш фактический ключ перед кодировкой Base64)\n\nКонечные точки, связанные с **псевдонимами контактов, календарей, сообщений и папок** (в настоящее время помечены как «Скоро»), будут использовать сгенерированный псевдоним имени пользователя и пароля для базовой аутентификации.\n\n## Ошибки\nAPI использует стандартные коды статуса HTTP для указания успеха или неудачи. Ответы об ошибках включают тело JSON с полем `message`, описывающим ошибку.\n\n| Код статуса | Значение |\n|-------------|---------------------|\n| 200 | OK |\n| 400 | Неверный запрос |\n| 401 | Неавторизованный |\n| 403 | Запрещено |\n| 404 | Не найдено |\n| 429 | Слишком много запросов |\n| 500 | Внутренняя ошибка сервера |\n| 501 | Не реализовано |\n| 502 | Неверный шлюз |\n| 503 | Служба недоступна |\n| 504 | Истекло время ожидания шлюза |\n\n*Если вы столкнулись с ошибкой `5xx`, свяжитесь с [api@forwardemail.net](mailto:api@forwardemail.net).*\n\n## Локализация\nОтветы API переводятся на основе обнаруженной локали пользователя или заголовка `Accept-Language`. Поддерживается более 25 языков.\n\n## Пагинация\nКонечные точки, возвращающие списки, поддерживают пагинацию через параметры запроса.\n\n| Параметр | Тип | Необязательно | Описание | По умолчанию | Ограничения |\n|-------------|----------|-----------|----------------------------------------------------------------------------|----------|---------------------|\n| `page` | Целое число | Да | Номер страницы для извлечения. | 1 | `>= 1` |\n| `limit` | Целое число | Да | Количество результатов на странице. | 10 | `>= 1`, `<= 50` |\n| `pagination` | Логическое значение | Да | Включение поведения пагинации (требуется до 1 ноября 2024 г. для некоторых конечных точек). | false | |\n\n**Заголовки пагинации:**\n* `X-Page-Count`: Общее количество страниц.\n* `X-Page-Current`: Текущий номер страницы.\n* `X-Page-Size`: Количество элементов на текущей странице.\n* `X-Item-Count`: Общее количество элементов на всех страницах.\n* `Link`: Ссылки навигации (предыдущая, следующая, первая, последняя).\n\n**Пример:**\n```bash\ncurl \"https://api.forwardemail.net/v1/domains?page=2&limit=20&pagination=true\" \\\n-u API_TOKEN:\n```\n\n## Рекомендуемые библиотеки\n* **Ruby:** [Faraday](https://github.com/lostisland/faraday)\n* **Python:** [requests](https://requests.readthedocs.io/en/latest/)\n* **Java:** [OkHttp](https://square.github.io/okhttp/)\n* **PHP:** [Guzzle](https://docs.guzzlephp.org/en/stable/)\n* **JavaScript/Node.js:** [superagent](https://github.com/visionmedia/superagent) (Поддерживается Forward Email)\n* **Go:** `net/http`\n* **.NET:** [RestSharp](https://restsharp.dev/)",
    "version": "1.0.0",
    "contact": {
      "name": "Forward Email Support",
      "url": "https://forwardemail.net",
      "email": "api@forwardemail.net"
    }
  },
  "servers": [
    {
      "url": "https://api.forwardemail.net",
      "description": "API-сервер пересылки электронной почты"
    }
  ],
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "http",
        "scheme": "basic",
        "description": "\nИспользуйте свой API Key в качестве **имени пользователя** для базовой аутентификации. Оставьте поле пароля пустым.\n\n**Пример:**\nЕсли ваш API Key — `YOUR_API_KEY`, то значение в кодировке Base64 для заголовка `Authorization` будет `echo -n \"YOUR_API_KEY:\" | base64`.\n\n```http\nAuthorization: Basic WU9VUl9BUElfS0VZOg==\n```\n"
      },
      "AliasAuth": {
        "type": "http",
        "scheme": "basic",
        "description": "\nИспользуйте сгенерированные **псевдоним имени пользователя и пароля** для базовой аутентификации. Это применимо к конечным точкам в:\n* Псевдонимы контактов (CardDAV)\n* Псевдонимы календарей (CalDAV)\n* Псевдонимы сообщений (IMAP/POP3)\n* Псевдонимы папок (IMAP/POP3)\n\n*(Примечание: эти функции в настоящее время помечены как «Скоро»)*\n\n**Пример:**\nЕсли псевдоним имени пользователя - `alias@domain.com`, а пароль - `GENERATED_PASSWORD`, то значение в кодировке Base64 будет `echo -n \"alias@domain.com:GENERATED_PASSWORD\" | base64`.\n\n```http\nАвторизация: Базовая YWxpYXNAZG9tYWluLmNvbTpHRU5FUkFURURfUEFTU1dPUkQ=\n```\n"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "type": "string",
            "description": "Сообщение об ошибке"
          }
        }
      },
      "Account": {
        "type": "object",
        "required": [
          "id",
          "email",
          "plan",
          "object"
        ],
        "properties": {
          "sessions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "has_newsletter": {
            "type": "boolean"
          },
          "plan": {
            "type": "string",
            "example": "free"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "max_quota_per_alias": {
            "type": "integer",
            "format": "int64"
          },
          "full_email": {
            "type": "string",
            "format": "email"
          },
          "display_name": {
            "type": "string"
          },
          "otp_enabled": {
            "type": "boolean"
          },
          "last_locale": {
            "type": "string"
          },
          "address_country": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "example": "user"
          },
          "locale": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "address_html": {
            "type": "string"
          },
          "api_token": {
            "type": "string",
            "format": "uuid"
          }
        },
        "example": {
          "sessions": [],
          "has_newsletter": true,
          "plan": "free",
          "email": "test1@test1.com",
          "max_quota_per_alias": 10737418240,
          "full_email": "test1@test1.com",
          "display_name": "test1@test1.com",
          "otp_enabled": false,
          "last_locale": "en",
          "address_country": "None",
          "id": "683fb2e81cc5d449a0d4cd9d",
          "object": "user",
          "locale": "en",
          "created_at": "2025-06-04T02:43:52.646Z",
          "updated_at": "2025-06-04T02:43:55.350Z",
          "address_html": "",
          "api_token": "15ac16ae21784aa2cb4d5508"
        }
      },
      "Email": {
        "type": "object",
        "required": [
          "id",
          "object",
          "status",
          "alias",
          "domain",
          "user"
        ],
        "properties": {
          "is_redacted": {
            "type": "boolean"
          },
          "hard_bounces": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "soft_bounces": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "is_bounce": {
            "type": "boolean"
          },
          "alias": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "example": "sent"
          },
          "is_locked": {
            "type": "boolean"
          },
          "envelope": {
            "type": "object",
            "properties": {
              "from": {
                "type": "string",
                "format": "email"
              },
              "to": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            }
          },
          "messageId": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "subject": {
            "type": "string"
          },
          "accepted": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "example": "email"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "link": {
            "type": "string",
            "format": "uri"
          }
        },
        "example": {
          "is_redacted": true,
          "hard_bounces": [],
          "soft_bounces": [],
          "is_bounce": false,
          "alias": "67a180fxxxxxxxe46a3f0edf",
          "domain": "5efae85dxxxxxxxf4bb53c7a",
          "user": "5efabd3907xxxxxxx12890b8",
          "status": "sent",
          "is_locked": false,
          "envelope": {
            "from": "test@test.com",
            "to": [
              "test@test1.com"
            ]
          },
          "messageId": "1a04fee3-5230-4a85-9111-a2c376835885@shaunwarman.com",
          "date": "2025-06-04T03:32:19.000Z",
          "subject": "testing",
          "accepted": [
            "test@test1.com"
          ],
          "id": "683fbe4d5baef1b583a1xxxx",
          "object": "email",
          "created_at": "2025-06-04T03:32:29.138Z",
          "updated_at": "2025-06-04T03:32:33.847Z",
          "link": "https://forwardemail.net/my-account/emails/683fbe4d5baef1b583a11e54"
        }
      },
      "EmailList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Email"
        }
      },
      "SMTP": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "email",
            "description": "Адрес электронной почты отправителя (должен существовать как псевдоним домена)."
          },
          "to": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "Список получателей, разделенных запятыми, или массив получателей для заголовка «Кому»."
          },
          "cc": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "Список получателей, разделенных запятыми, или массив для заголовка «Копия»."
          },
          "bcc": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "Список получателей, разделенных запятыми, или массив для заголовка «СК»."
          },
          "subject": {
            "type": "string",
            "description": "Тема письма."
          },
          "text": {
            "type": "string",
            "description": "Текстовая версия сообщения."
          },
          "html": {
            "type": "string",
            "description": "HTML-версия сообщения."
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Массив объектов вложений (см. общие поля Nodemailer)."
          },
          "sender": {
            "type": "string",
            "format": "email",
            "description": "Адрес электронной почты для заголовка «Отправитель»."
          },
          "replyTo": {
            "type": "string",
            "format": "email",
            "description": "Адрес электронной почты для заголовка «Ответить»."
          },
          "inReplyTo": {
            "type": "string",
            "description": "Идентификатор сообщения, на которое отправлено сообщение."
          },
          "references": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "description": "Список, разделенный пробелами, или массив идентификаторов сообщений."
          },
          "attachDataUrls": {
            "type": "boolean",
            "description": "Если true, преобразует данные: изображения в HTML-контенте во встроенные вложения."
          },
          "watchHtml": {
            "type": "string",
            "description": "HTML-версия сообщения для Apple Watch."
          },
          "amp": {
            "type": "string",
            "description": "Специфическая HTML-версия сообщения AMP4EMAIL."
          },
          "icalEvent": {
            "type": "object",
            "description": "Событие iCalendar как альтернативное содержимое сообщения."
          },
          "alternatives": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Массив альтернативного содержания сообщений."
          },
          "encoding": {
            "type": "string",
            "description": "Кодировка текста и HTML-строк (например, «utf-8», «hex», «base64»)."
          },
          "raw": {
            "type": "string",
            "description": "Пользовательское сообщение в формате RFC822 (вместо использования генерации Nodemailer)."
          },
          "textEncoding": {
            "type": "string",
            "enum": [
              "quoted-printable",
              "base64"
            ],
            "description": "Для текстовых значений принудительно используется кодировка."
          },
          "priority": {
            "type": "string",
            "enum": [
              "high",
              "normal",
              "low"
            ],
            "description": "Уровень приоритета для электронного письма."
          },
          "headers": {
            "oneOf": [
              {
                "type": "object",
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            ],
            "description": "Объект или массив дополнительных полей заголовка."
          },
          "messageId": {
            "type": "string",
            "description": "Необязательный Message-ID для заголовка «Message-ID»."
          },
          "date": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "description": "Необязательный заголовок даты. Не может быть более 30 дней в будущем."
          },
          "list": {
            "type": "object",
            "description": "Необязательный объект заголовков List-*."
          }
        }
      },
      "Domain": {
        "type": "object",
        "properties": {
          "has_newsletter": {
            "type": "boolean"
          },
          "ignore_mx_check": {
            "type": "boolean"
          },
          "retention_days": {
            "type": "integer"
          },
          "has_regex": {
            "type": "boolean"
          },
          "has_catchall": {
            "type": "boolean"
          },
          "allowlist": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "denylist": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "restricted_alias_names": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "has_adult_content_protection": {
            "type": "boolean"
          },
          "has_phishing_protection": {
            "type": "boolean"
          },
          "has_executable_protection": {
            "type": "boolean"
          },
          "has_virus_protection": {
            "type": "boolean"
          },
          "is_catchall_regex_disabled": {
            "type": "boolean"
          },
          "has_smtp": {
            "type": "boolean"
          },
          "is_smtp_suspended": {
            "type": "boolean"
          },
          "plan": {
            "type": "string"
          },
          "max_recipients_per_alias": {
            "type": "integer"
          },
          "smtp_port": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "has_mx_record": {
            "type": "boolean"
          },
          "has_txt_record": {
            "type": "boolean"
          },
          "has_dkim_record": {
            "type": "boolean"
          },
          "has_return_path_record": {
            "type": "boolean"
          },
          "has_dmarc_record": {
            "type": "boolean"
          },
          "has_recipient_verification": {
            "type": "boolean"
          },
          "has_custom_verification": {
            "type": "boolean"
          },
          "verification_record": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "enum": [
              "domain"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "storage_used": {
            "type": "integer"
          },
          "storage_used_by_aliases": {
            "type": "integer"
          },
          "storage_quota": {
            "type": "integer"
          },
          "smtp_dns_records": {
            "type": "object",
            "properties": {
              "dkim": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              },
              "return_path": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              },
              "dmarc": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "link": {
            "type": "string",
            "format": "uri"
          }
        },
        "example": [
          {
            "has_newsletter": false,
            "ignore_mx_check": false,
            "retention_days": 0,
            "has_regex": false,
            "has_catchall": true,
            "allowlist": [],
            "denylist": [],
            "restricted_alias_names": [],
            "has_adult_content_protection": true,
            "has_phishing_protection": true,
            "has_executable_protection": true,
            "has_virus_protection": true,
            "is_catchall_regex_disabled": false,
            "has_smtp": false,
            "is_smtp_suspended": false,
            "plan": "team",
            "max_recipients_per_alias": 10,
            "smtp_port": "25",
            "name": "test.com",
            "has_mx_record": false,
            "has_txt_record": false,
            "has_dkim_record": false,
            "has_return_path_record": false,
            "has_dmarc_record": false,
            "has_recipient_verification": false,
            "has_custom_verification": false,
            "verification_record": "kcjg6vrO8Q",
            "id": "683f1172c4bad2524410b857",
            "object": "domain",
            "created_at": "2025-06-03T15:14:59.000Z",
            "updated_at": "2025-06-03T15:14:59.254Z",
            "storage_used": 0,
            "storage_used_by_aliases": 0,
            "storage_quota": 10737418240,
            "smtp_dns_records": {
              "dkim": {
                "name": "fe-ebf3212716._domainkey",
                "value": "v=DKIM1; k=rsa; p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCcG+YBDPhyH8bLmyflmU9w1klYDeWpEufIlVqyWqly9lC+J/ntkKn4gum28EeE6vR+55x4JFCR8qSaw0YO1eCRwBgpFB0kKzbELHh2i2TKKwrqB3gPLXp4q4lbcGX2eD6fPCRwckTHqmiOzMhX8GD60zVlEvabok4LJ1i/BOyh6wIDAQAB;"
              },
              "return_path": {
                "name": "fe-bounces",
                "value": "forwardemail.net"
              },
              "dmarc": {
                "name": "_dmarc",
                "value": "v=DMARC1; p=reject; pct=100; rua=mailto:dmarc-683f1172c4bad2524410b857@localhost;"
              }
            },
            "link": "http://localhost:3000/my-account/domains/test.com"
          }
        ]
      },
      "CreateDomainInput": {
        "type": "object",
        "required": [
          "domain"
        ],
        "properties": {
          "domain": {
            "type": "string",
            "description": "Полное доменное имя (FQDN) или IP-адрес"
          },
          "team_domain": {
            "type": "string",
            "nullable": true,
            "description": "Назначить той же команде из другого домена; может быть идентификатором домена или полным доменным именем. Используйте \"none\" для явного отключения."
          },
          "plan": {
            "type": "string",
            "enum": [
              "free",
              "enhanced_protection",
              "team"
            ],
            "description": "Тип плана (по умолчанию «бесплатный» или текущий платный план пользователя)"
          },
          "catchall": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "type": "string",
                "description": "Список адресов электронной почты с разделителями (через запятую, пробел или новую строку)"
              }
            ],
            "description": "Создать универсальный псевдоним по умолчанию (по умолчанию true)"
          },
          "has_adult_content_protection": {
            "type": "boolean",
            "description": "Включить защиту от контента для взрослых с помощью Spam Scanner"
          },
          "has_phishing_protection": {
            "type": "boolean",
            "description": "Включить защиту от фишинга Spam Scanner"
          },
          "has_executable_protection": {
            "type": "boolean",
            "description": "Включить защиту исполняемого файла Spam Scanner"
          },
          "has_virus_protection": {
            "type": "boolean",
            "description": "Включить защиту от вирусов Spam Scanner"
          },
          "has_recipient_verification": {
            "type": "boolean",
            "description": "Требовать от получателей псевдонимов нажатия ссылки подтверждения адреса электронной почты"
          },
          "ignore_mx_check": {
            "type": "boolean",
            "description": "Игнорировать проверку записи MX для расширенных настроек маршрутизации почты"
          },
          "retention_days": {
            "type": "integer",
            "minimum": 0,
            "maximum": 30,
            "description": "Количество дней для хранения исходящих журналов SMTP (0–30, по умолчанию: 0)"
          },
          "bounce_webhook": {
            "oneOf": [
              {
                "type": "string",
                "format": "uri",
                "description": "URL-адрес веб-перехватчика для получения событий отказа"
              },
              {
                "type": "boolean",
                "enum": [
                  false
                ],
                "description": "Отключить вебхук Bounce"
              }
            ]
          },
          "max_quota_per_alias": {
            "type": "string",
            "description": "Максимальная квота хранения на псевдоним (например, «1 ГБ»)"
          }
        }
      },
      "UpdateDomainInput": {
        "type": "object",
        "properties": {
          "smtp_port": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ],
            "description": "Пользовательский порт для настройки пересылки SMTP (по умолчанию «25»)"
          },
          "has_adult_content_protection": {
            "type": "boolean",
            "description": "Включать ли Spam Scanner защиту от контента для взрослых на этом домене"
          },
          "has_phishing_protection": {
            "type": "boolean",
            "description": "Включать ли защиту от фишинга Spam Scanner на этом домене"
          },
          "has_executable_protection": {
            "type": "boolean",
            "description": "Включать ли защиту исполняемого файла Spam Scanner на этом домене"
          },
          "has_virus_protection": {
            "type": "boolean",
            "description": "Включать ли антивирусную защиту Spam Scanner на этом домене"
          },
          "has_recipient_verification": {
            "type": "boolean",
            "description": "Глобальное значение по умолчанию для домена, определяющее, требуется ли получателям псевдонимов нажимать ссылку для проверки адреса электронной почты, чтобы электронные письма проходили через него"
          },
          "ignore_mx_check": {
            "type": "boolean",
            "description": "Игнорировать ли проверку записи MX в домене для подтверждения (в основном для расширенных настроек маршрутизации MX)"
          },
          "retention_days": {
            "type": "integer",
            "minimum": 0,
            "maximum": 30,
            "description": "Количество дней хранения исходящих писем SMTP (0 = очистить немедленно)"
          },
          "bounce_webhook": {
            "oneOf": [
              {
                "type": "string",
                "format": "uri"
              },
              {
                "type": "boolean",
                "enum": [
                  false
                ]
              }
            ],
            "description": "URL-адрес веб-перехватчика для получения уведомлений о недоставке или false для отключения"
          },
          "max_quota_per_alias": {
            "type": "string",
            "description": "Квота хранения на псевдоним (например, «1 ГБ», разложенная на байты)"
          }
        }
      },
      "Alias": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email"
              },
              "display_name": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "email",
              "display_name",
              "id"
            ]
          },
          "domain": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "id"
            ]
          },
          "name": {
            "type": "string"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "is_enabled": {
            "type": "boolean"
          },
          "has_recipient_verification": {
            "type": "boolean"
          },
          "verified_recipients": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "pending_recipients": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "recipients": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "enum": [
              "alias"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "storage_location": {
            "type": "string"
          },
          "has_imap": {
            "type": "boolean"
          }
        },
        "required": [
          "user",
          "domain",
          "name",
          "labels",
          "is_enabled",
          "has_recipient_verification",
          "verified_recipients",
          "pending_recipients",
          "recipients",
          "id",
          "object",
          "created_at",
          "updated_at",
          "storage_location",
          "has_imap"
        ],
        "example": {
          "user": {
            "email": "test@test.com",
            "display_name": "test@test.com",
            "id": "5efabd39xxxxxxx4512890b8"
          },
          "domain": {
            "name": "mailsire.com",
            "id": "5e3c0550xxxxxxx09b7ba023"
          },
          "name": "abc123",
          "labels": [],
          "is_enabled": true,
          "has_recipient_verification": false,
          "verified_recipients": [],
          "pending_recipients": [],
          "recipients": [
            "abc@test1.com"
          ],
          "id": "62fa3dcxxxxxxx79dda83ff2",
          "object": "alias",
          "created_at": "2022-08-15T12:36:26.593Z",
          "updated_at": "2022-08-15T12:36:26.593Z",
          "storage_location": "storage_loc",
          "has_imap": false
        }
      },
      "AliasInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Имя псевдонима (если не указано или пусто, то генерируется случайный псевдоним)"
          },
          "recipients": {
            "oneOf": [
              {
                "type": "string",
                "description": "Строка действительных адресов электронной почты, полных доменных имен, IP-адресов или URL-адресов веб-перехватчиков, разделенная разрывами строк/пробелами/запятыми"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                },
                "description": "Массив действительных получателей"
              }
            ],
            "description": "Список получателей. Если не указан или пуст, по умолчанию используется адрес электронной почты запрашивающего"
          },
          "description": {
            "type": "string",
            "description": "Описание псевдонима"
          },
          "labels": {
            "oneOf": [
              {
                "type": "string",
                "description": "Строка меток, разделенная разрывом строки/пробелом/запятой"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Массив этикеток"
              }
            ]
          },
          "has_recipient_verification": {
            "type": "boolean",
            "description": "Требовать от получателей нажатия на ссылку подтверждения (по умолчанию установлено значение домена)"
          },
          "is_enabled": {
            "type": "boolean",
            "description": "Включить или отключить этот псевдоним"
          },
          "error_code_if_disabled": {
            "type": "number",
            "enum": [
              250,
              421,
              550
            ],
            "description": "Код ошибки, если псевдоним отключен. По умолчанию 250"
          },
          "has_imap": {
            "type": "boolean",
            "description": "Включить или отключить хранилище IMAP для этого псевдонима"
          },
          "has_pgp": {
            "type": "boolean",
            "description": "Включить или отключить шифрование OpenPGP для этого псевдонима"
          },
          "public_key": {
            "type": "string",
            "description": "Открытый ключ OpenPGP в формате ASCII Armor"
          },
          "max_quota": {
            "type": "string",
            "description": "Максимальная квота хранилища (например, «1 ГБ»)"
          },
          "vacation_responder_is_enabled": {
            "type": "boolean",
            "description": "Включить или отключить автоответчик на время отпуска"
          },
          "vacation_responder_start_date": {
            "type": "string",
            "description": "Дата начала (например, «ГГГГ-ММ-ДД») для автоответчика"
          },
          "vacation_responder_end_date": {
            "type": "string",
            "description": "Дата окончания (например, «ГГГГ-ММ-ДД») для автоответчика"
          },
          "vacation_responder_subject": {
            "type": "string",
            "description": "Тема открытого текста для автоответчика"
          },
          "vacation_responder_message": {
            "type": "string",
            "description": "Текстовое сообщение для автоответчика на время отпуска"
          }
        }
      },
      "AliasUpdateInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Псевдоним"
          },
          "recipients": {
            "oneOf": [
              {
                "type": "string",
                "description": "Строка действительных адресов электронной почты, полных доменных имен, IP-адресов или URL-адресов веб-перехватчиков, разделенная разрывами строк, пробелами или запятыми"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                },
                "description": "Массив действительных получателей"
              }
            ]
          },
          "description": {
            "type": "string",
            "description": "Описание псевдонима"
          },
          "labels": {
            "oneOf": [
              {
                "type": "string",
                "description": "Строка меток, разделенных разрывом строки/пробелом/запятой"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Массив этикеток"
              }
            ]
          },
          "has_recipient_verification": {
            "type": "boolean",
            "description": "Требовать от получателей нажатия на ссылку подтверждения (по умолчанию установлено значение домена)"
          },
          "is_enabled": {
            "type": "boolean",
            "description": "Включить или отключить псевдоним"
          },
          "error_code_if_disabled": {
            "type": "number",
            "enum": [
              250,
              421,
              550
            ],
            "description": "Код ошибки, который следует использовать, если псевдоним отключен (по умолчанию 250)"
          },
          "has_imap": {
            "type": "boolean",
            "description": "Включить или отключить хранилище IMAP"
          },
          "has_pgp": {
            "type": "boolean",
            "description": "Включить или отключить шифрование OpenPGP"
          },
          "public_key": {
            "type": "string",
            "description": "Открытый ключ OpenPGP в формате ASCII Armor"
          },
          "max_quota": {
            "type": "string",
            "description": "Максимальная квота хранения (например, «1 ГБ»)"
          },
          "vacation_responder_is_enabled": {
            "type": "boolean",
            "description": "Включить или отключить автоответчик"
          },
          "vacation_responder_start_date": {
            "type": "string",
            "description": "Дата начала работы автоответчика (например, ГГГГ-ММ-ДД)"
          },
          "vacation_responder_end_date": {
            "type": "string",
            "description": "Дата окончания отпуска (например, ГГГГ-ММ-ДД)"
          },
          "vacation_responder_subject": {
            "type": "string",
            "description": "Тема ответа на вопрос об отпуске открытым текстом"
          },
          "vacation_responder_message": {
            "type": "string",
            "description": "Текстовое сообщение автоответчика об отпуске"
          }
        }
      },
      "GenerateAliasPasswordInput": {
        "type": "object",
        "properties": {
          "new_password": {
            "type": "string",
            "description": "Ваш новый пароль для использования в качестве псевдонима"
          },
          "password": {
            "type": "string",
            "description": "Существующий пароль для псевдонима, чтобы изменить его без удаления хранилища почтового ящика"
          },
          "is_override": {
            "type": "boolean",
            "description": "Переопределить существующий пароль и удалить хранилище IMAP (использовать с осторожностью)"
          },
          "emailed_instructions": {
            "type": "string",
            "format": "email",
            "description": "Адрес электронной почты для отправки пароля псевдонима и инструкций по настройке"
          }
        }
      },
      "EmailLimit": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Текущее количество отправленных писем"
          },
          "limit": {
            "type": "integer",
            "description": "Максимально допустимое количество писем"
          }
        }
      },
      "Member": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор участника"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Адрес электронной почты участника"
          },
          "role": {
            "type": "string",
            "description": "Роль участника"
          }
        }
      },
      "Invite": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "Приглашенный адрес электронной почты"
          }
        }
      }
    },
    "parameters": {
      "page": {
        "name": "page",
        "in": "query",
        "description": "Страница результатов для возврата. Если не указано, значение будет 1. Должно быть числом больше или равным 1.",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "default": 1
        }
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "description": "Количество результатов для возврата на страницу. По умолчанию 10, если не указано иное. Должно быть числом больше или равным 1 и меньше или равным 50.",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 50,
          "default": 10
        }
      },
      "pagination": {
        "name": "pagination",
        "in": "query",
        "description": "Подпишитесь на пагинацию до 1 ноября 2024 г.",
        "schema": {
          "type": "boolean"
        }
      },
      "domainId": {
        "name": "domain_id",
        "in": "path",
        "required": true,
        "description": "Идентификатор домена",
        "schema": {
          "type": "string"
        }
      },
      "aliasId": {
        "name": "alias_id",
        "in": "path",
        "required": true,
        "description": "Псевдонимы идентификаторов",
        "schema": {
          "type": "string"
        }
      },
      "memberId": {
        "name": "member_id",
        "in": "path",
        "required": true,
        "description": "Идентификатор участника",
        "schema": {
          "type": "string"
        }
      },
      "emailId": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "Идентификатор электронной почты",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "Error": {
        "description": "Error response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "BadRequest": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotFound": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "TooManyRequests": {
        "description": "Too Many Requests",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotImplemented": {
        "description": "Not Implemented",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "BadGateway": {
        "description": "Bad Gateway",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "ServiceUnavailable": {
        "description": "Service Unavailable",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "GatewayTimeout": {
        "description": "Gateway Time-out",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  },
  "paths": {
    "/v1/account": {
      "post": {
        "summary": "Зарегистрироваться",
        "description": "Создать новую учетную запись пользователя",
        "tags": [
          "Счет"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Адрес электронной почты"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "Пароль"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      },
      "get": {
        "summary": "Восстановить учетную запись",
        "description": "Получить информацию об учетной записи текущего пользователя",
        "tags": [
          "Счет"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Account retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "Обновить аккаунт",
        "description": "Обновить информацию об учетной записи текущего пользователя",
        "tags": [
          "Счет"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Адрес электронной почты"
                  },
                  "given_name": {
                    "type": "string",
                    "description": "Имя"
                  },
                  "family_name": {
                    "type": "string",
                    "description": "Фамилия"
                  },
                  "avatar_url": {
                    "type": "string",
                    "description": "Ссылка на изображение аватара"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/logs/download": {
      "get": {
        "summary": "Загрузить журналы",
        "description": "**Загрузка журналов**\n\nОписание: Наш API программно позволяет вам загружать журналы для вашей учетной записи. Отправка запроса на эту конечную точку обработает все журналы для вашей учетной записи и отправит их вам по электронной почте в виде вложения (файл таблицы CSV, сжатый Gzip) после завершения.\n\nЭто позволяет вам создавать фоновые задания с помощью задания Cron или использовать программное обеспечение для планирования заданий Node.js Bree для получения журналов в любое удобное для вас время. Обратите внимание, что эта конечная точка ограничена `10` запросами в день.\n\nВложение представляет собой строчную форму `email-deliverability-logs-YYYY-MM-DD-h-mm-A-z.csv.gz`, а само электронное письмо содержит краткий обзор полученных журналов.",
        "tags": [
          "Журналы"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "query",
            "description": "Фильтровать журналы по полному домену («FQDN»). Если не указано, будут извлечены все журналы по всем доменам.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Поиск журналов по адресу электронной почты, домену, псевдониму, IP-адресу или дате (формат М/Г, М/Д/ГГ, М-Д, М-Д-ГГ или М.Д.ГГ).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bounce_category",
            "in": "query",
            "description": "Поиск журналов по определенной категории отказов (например, «черный список»).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "response_code",
            "in": "query",
            "description": "Поиск журналов по определенному коду ответа об ошибке (например, 421 или 550).",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Logs will be emailed as an attachment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Logs will be emailed to you shortly"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/v1/emails": {
      "get": {
        "summary": "Список исходящих писем SMTP",
        "description": "**Список исходящих писем SMTP**\n\nОбратите внимание, что эта конечная точка не возвращает значения свойств для `message`, `headers` или `rejectedErrors` электронного письма.\n\nЧтобы вернуть эти свойства и их значения, используйте конечную точку [Retrieve email](https://github.com/forwardemail/forwardemail.net/blob/master/app/views/api/index.md#retrieve-email) с идентификатором электронной почты.",
        "tags": [
          "Электронные письма"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Поиск писем по метаданным.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "domain",
            "in": "query",
            "description": "Поиск писем по доменному имени.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Сортировать по определенному полю (префикс с одним дефисом — для сортировки в обратном направлении этого поля). По умолчанию created_at, если не задано.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Для получения более подробной информации см. раздел «Пагинация».",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Для получения более подробной информации см. раздел «Пагинация».",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of outbound SMTP emails",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Email"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "summary": "Создать исходящее SMTP-сообщение",
        "description": "Наш API для создания электронной почты вдохновлен и использует конфигурацию параметров сообщения Nodemailer. Пожалуйста, обратитесь к [конфигурации сообщения Nodemailer](https://nodemailer.com/message/) для всех параметров тела ниже.\n\nОбратите внимание, что за исключением `envelope` и `dkim` (так как мы устанавливаем их автоматически для вас), мы поддерживаем все параметры Nodemailer. Мы автоматически устанавливаем параметры `disableFileAccess` и `disableUrlAccess` на `true` в целях безопасности.\n\nВам следует либо передать единственный параметр `raw` с вашим необработанным полным письмом, включая заголовки, либо передать отдельные параметры параметров тела ниже.\n\nЭта конечная точка API автоматически кодирует для вас эмодзи, если они найдены в заголовках (например, строка темы `Subject: 🤓 Hello` автоматически преобразуется в `Subject: =?UTF-8?Q?=F0=9F=A4=93?= Hello`). Нашей целью было создать максимально удобный для разработчиков и защищенный от неопытных пользователей API электронной почты.",
        "tags": [
          "Электронные письма"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SMTP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email sent successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/emails/limit": {
      "get": {
        "summary": "Получить лимит исходящей электронной почты SMTP",
        "description": "Это простая конечная точка, которая возвращает объект JSON, содержащий `count` и `limit` для количества исходящих SMTP-сообщений в день для каждой учетной записи.",
        "tags": [
          "Электронные письма"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Email limit information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailLimit"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/emails/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/emailId"
        }
      ],
      "get": {
        "summary": "Получить исходящую SMTP-почту",
        "description": "Получить определенное исходящее SMTP-сообщение электронной почты.",
        "tags": [
          "Электронные письма"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Email retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Удалить исходящую SMTP-почту",
        "description": "Удаление электронной почты установит статус `\"отклонено\"` (и впоследствии не будет обрабатываться в очереди) только в том случае, если текущий статус - один из `\"ожидающих\"`, `\"в очереди\"` или `\"отложенных\"`. Мы можем автоматически очищать электронные письма через 30 дней после их создания и/или отправки, поэтому вам следует хранить копию исходящих SMTP-писем в своем клиенте, базе данных или приложении. При желании вы можете сослаться на наше значение идентификатора электронной почты в своей базе данных - это значение возвращается как из конечных точек [Создать электронную почту](https://github.com/forwardemail/forwardemail.net/blob/master/app/views/api/index.md#create-email), так и [Извлечь электронную почту](https://github.com/forwardemail/forwardemail.net/blob/master/app/views/api/index.md#retrieve-email).",
        "tags": [
          "Электронные письма"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Email deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains": {
      "get": {
        "summary": "Список доменов",
        "description": "> [!NOTE]\n>С 1 ноября 2024 года конечные точки API для доменов List и псевдонимов доменов List будут по умолчанию иметь максимальное количество результатов `1000` на страницу. Если вы хотите заранее включить это поведение, вы можете передать `?paginate=true` в качестве дополнительного параметра строки запроса в URL для запроса конечной точки. Подробнее см. в разделе Пагинация.",
        "tags": [
          "Домены"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Поиск доменов по метаданным.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "domain",
            "in": "query",
            "description": "Поиск доменов по доменному имени.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Сортировать по определенному полю (префикс с одним дефисом — для сортировки в обратном направлении этого поля). По умолчанию created_at, если не задано.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Для получения более подробной информации см. раздел «Пагинация».",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Для получения более подробной информации см. раздел «Пагинация».",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of domains",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "summary": "Создать домен",
        "description": "Создает новый домен в системе. Эта конечная точка позволяет вам зарегистрировать полное доменное имя (FQDN) или IP-адрес для использования с платформой.\n\nДополнительные параметры конфигурации включают назначение домена существующей команде, установку типа плана (например, бесплатный, улучшенная защита или команда) и настройку расширенных мер защиты, таких как фильтрация спама, сканирование на вирусы и проверка получателя. Вы также можете настроить, следует ли создавать псевдоним catch-all по умолчанию, задать пользовательский URL-адрес веб-перехватчика отказов для сбоев SMTP и определить ограничения квоты хранения для псевдонимов электронной почты в этом домене. Эта конечная точка выполняет проверку и подготовку на уровне домена. Если включена опция `ignore_mx_check`, проверка записи MX пропускается (рекомендуется только для расширенных настроек маршрутизации). Ответ будет содержать полную информацию о созданном объекте домена, включая записи DNS, необходимые для настройки.",
        "tags": [
          "Домены"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDomainInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/v1/domains/{domain_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        }
      ],
      "get": {
        "summary": "Получить домен",
        "description": "Получить определенный домен",
        "tags": [
          "Домены"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "Обновить домен",
        "description": "Обновить определенный домен.",
        "tags": [
          "Домены"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDomainInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Удалить домен",
        "description": "Удалить определенный домен.",
        "tags": [
          "Домены"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Domain deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/verify-records": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        }
      ],
      "get": {
        "summary": "Проверить записи домена",
        "description": "Проверьте записи DNS для определенного домена.",
        "tags": [
          "Домены"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "DNS records successfully verified",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Domain's DNS records have been verified."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/verify-smtp": {
      "get": {
        "summary": "Проверьте записи SMTP домена",
        "description": "Проверяет записи DNS, связанные с SMTP, для указанного домена.",
        "operationId": "verifySmtpRecords",
        "tags": [
          "Домены"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "description": "Полное доменное имя (FQDN) для проверки",
            "schema": {
              "type": "string",
              "format": "hostname"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "SMTP records successfully verified",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "You have successfully configured and verified DNS records for outbound SMTP."
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/catch-all-passwords": {
      "post": {
        "summary": "Создать общедоменный пароль для всех атак",
        "description": "Создает общедоменный пароль. Если пароль не указан, будет сгенерирован безопасный случайный пароль.",
        "tags": [
          "Домены"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Доменное имя, для которого будет создан универсальный пароль"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "new_password": {
                    "type": "string",
                    "description": "Ваш новый пароль для использования в качестве общедоменного пароля. Оставьте поле пустым, чтобы сгенерировать надежный пароль."
                  },
                  "description": {
                    "type": "string",
                    "description": "Описание приведено исключительно для организационных целей."
                  }
                }
              },
              "example": {
                "new_password": "myCustomStrongPassword123!",
                "description": "Password for team-wide access"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created a catch-all password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of the created catch-all password"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the catch-all password"
                    }
                  },
                  "required": [
                    "id",
                    "description"
                  ]
                },
                "example": {
                  "id": "6841ec462bd583c73d0632dd",
                  "username": "*@quas.com",
                  "password": "6Yq14XhAUaupdZE",
                  "description": "foo bar"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Список паролей для всего домена",
        "description": "Возвращает список общедоменных паролей, которые в данный момент настроены для указанного домена.",
        "operationId": "listCatchAllPasswords",
        "tags": [
          "Домены"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "description": "Полное доменное имя (FQDN), для которого необходимо перечислить пароли для всеобщей аутентификации",
            "schema": {
              "type": "string",
              "format": "hostname"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of domain-wide catch-all passwords",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier for the item",
                        "example": "6841ec442bd583c73d0632d0"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the item",
                        "example": "foo bar"
                      }
                    },
                    "required": [
                      "id",
                      "description"
                    ]
                  },
                  "example": [
                    {
                      "id": "6841ec442bd583c73d0632d0",
                      "description": ""
                    },
                    {
                      "id": "6841ec462bd583c73d0632dd",
                      "description": "foo bar"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/catch-all-passwords/{token_id}": {
      "delete": {
        "summary": "Удалить общедоменный пароль для всеобщего распространения",
        "description": "Удаляет общедоменный пароль, используя предоставленный идентификатор токена.",
        "tags": [
          "Домены"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Доменное имя, связанное с универсальным паролем"
          },
          {
            "name": "token_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Идентификатор токена общедоменного пароля для удаления"
          }
        ],
        "responses": {
          "200": {
            "description": "Catch-all password successfully removed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Catch-all password deleted successfully."
                    }
                  },
                  "example": {
                    "id": "6841ec442bd583c73d0632d0",
                    "description": ""
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/invites": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        }
      ],
      "get": {
        "summary": "Принять приглашение домена",
        "description": "Принять приглашение на домен.",
        "tags": [
          "Приглашения"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain invite accepted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invite accepted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "post": {
        "summary": "Создать доменное приглашение",
        "description": ">[!IMPORTANT]\n>Если приглашаемый пользователь уже является принятым участником любого другого домена, членом которого является приглашающий его администратор, то он автоматически примет приглашение и не отправит электронное письмо.",
        "tags": [
          "Приглашения"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Адрес электронной почты для приглашения в список участников домена"
                  },
                  "group": {
                    "type": "string",
                    "format": "string",
                    "description": "Группа, в которую необходимо добавить пользователя для членства в домене (может быть `\"admin\"` или `\"user\"`)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain invite created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invite"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      },
      "delete": {
        "summary": "Удалить приглашение домена",
        "description": "Удалить приглашение в домен.",
        "tags": [
          "Приглашения"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Адрес электронной почты, который необходимо удалить из списка участников домена"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain invite removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invite removed successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/members/{member_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        },
        {
          "$ref": "#/components/parameters/memberId"
        }
      ],
      "put": {
        "summary": "Обновить члена домена",
        "description": "Обновить участника домена.",
        "tags": [
          "Участники"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "group": {
                    "required": true,
                    "type": "string",
                    "description": "Группа, в которой необходимо обновить членство пользователя в домене (может быть `\"admin\"` или `\"user\"`)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain member updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Удалить участника домена",
        "description": "Удалить участника домена.",
        "tags": [
          "Участники"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain member removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Member removed successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/aliases/{alias_id}/generate-password": {
      "post": {
        "summary": "Сгенерировать пароль псевдонима",
        "description": "Сгенерировать пароль для псевдонима. Если `emailed_instructions` не предоставлено, ответ будет содержать сгенерированное имя пользователя и пароль.",
        "tags": [
          "Псевдонимы"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Полное доменное имя (FQDN)"
          },
          {
            "name": "alias_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Уникальный идентификатор псевдонима"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateAliasPasswordInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Alias credentials returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string",
                      "example": "alias@yourdomain.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "some-generated-password"
                    }
                  },
                  "required": [
                    "username",
                    "password"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/aliases": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        }
      ],
      "get": {
        "summary": "Список псевдонимов домена",
        "description": ">[!NOTE]\n>С 1 ноября 2024 года конечные точки API для `Список доменов` и `Список псевдонимов доменов` будут по умолчанию иметь макс. `1000` результатов на страницу. Если вы хотите заранее включить это поведение, вы можете передать `?paginate=true` в качестве дополнительного параметра строки запроса в URL для запроса конечной точки. Подробнее см. в разделе Пагинация.",
        "tags": [
          "Псевдонимы"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Поиск псевдонимов в домене по имени, метке или получателю (поддерживается RegExp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Поиск псевдонимов в домене по имени (поддерживается RegExp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipient",
            "in": "query",
            "description": "Поиск псевдонимов в домене по получателю (поддерживается RegExp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Сортировать по определенному полю (префикс с одним дефисом — для сортировки в обратном порядке). По умолчанию created_at.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "List of domain aliases",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Alias"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "post": {
        "summary": "Создать новый псевдоним домена",
        "description": "Создайте новый псевдоним для определенного домена.",
        "tags": [
          "Псевдонимы"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AliasInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain alias created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alias"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/aliases/{alias_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        },
        {
          "$ref": "#/components/parameters/aliasId"
        }
      ],
      "get": {
        "summary": "Получить псевдоним домена",
        "description": "Получить определенный псевдоним для домена.",
        "tags": [
          "Псевдонимы"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain alias retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alias"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "Обновить псевдоним домена",
        "description": "Обновите определенный псевдоним для домена.",
        "tags": [
          "Псевдонимы"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AliasUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain alias updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alias"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          },
          "401": {
            "$ref": "#/components/responses/Error"
          },
          "403": {
            "$ref": "#/components/responses/Error"
          },
          "404": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "summary": "Удалить псевдоним домена",
        "description": "Удалить определенный псевдоним для домена.",
        "tags": [
          "Псевдонимы"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain alias deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Alias deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/encrypt": {
      "post": {
        "summary": "Зашифровать TXT-запись",
        "description": "Мы позволяем вам шифровать записи даже на бесплатном плане без каких-либо затрат. Конфиденциальность не должна быть функцией, она должна быть изначально встроена во все аспекты продукта. Как настоятельно просили в [обсуждении руководств по конфиденциальности](https://discuss.privacyguides.net/t/forward-email-email-provider/13370) и в наших [проблемах GitHub](https://github.com/forwardemail/forwardemail.net/issues/254) мы добавили это.",
        "tags": [
          "Зашифровать"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "text"
                ],
                "properties": {
                  "input": {
                    "required": true,
                    "type": "string",
                    "description": "Любая допустимая запись TXT для пересылки электронного письма"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Text encrypted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "encrypted": {
                      "type": "string",
                      "description": "Encrypted text"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          },
          "401": {
            "$ref": "#/components/responses/Error"
          },
          "429": {
            "description": "Rate limit exceeded (50 requests for 'encrypt')",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/contacts": {
      "get": {
        "summary": "Список контактов",
        "description": "Список всех контактов (CardDAV). Эта конечная точка появится скоро.",
        "tags": [
          "Контакты псевдонима"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Создать контакт",
        "description": "Создайте новый контакт (CardDAV). Эта конечная точка появится скоро.",
        "tags": [
          "Контакты псевдонима"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/contacts/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Контактный идентификатор",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Получить контакт",
        "description": "Извлечь определенный контакт (CardDAV). Эта конечная точка появится скоро.",
        "tags": [
          "Контакты псевдонима"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Обновить контакт",
        "description": "Обновить определенный контакт (CardDAV). Эта конечная точка появится скоро.",
        "tags": [
          "Контакты псевдонима"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Удалить контакт",
        "description": "Удалить определенный контакт (CardDAV). Эта конечная точка появится скоро.",
        "tags": [
          "Контакты псевдонима"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/calendars": {
      "get": {
        "summary": "Список календарей",
        "description": "Список всех календарей (CalDAV). Эта конечная точка появится скоро.",
        "tags": [
          "Псевдонимы Календари"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Создать календарь",
        "description": "Создать новый календарь (CalDAV). Эта конечная точка появится скоро.",
        "tags": [
          "Псевдонимы Календари"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/calendars/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Идентификатор календаря",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Получить календарь",
        "description": "Получить определенный календарь (CalDAV). Эта конечная точка появится скоро.",
        "tags": [
          "Псевдонимы Календари"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Календарь обновлений",
        "description": "Обновить определенный календарь (CalDAV). Эта конечная точка появится скоро.",
        "tags": [
          "Псевдонимы Календари"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Удалить календарь",
        "description": "Удалить определенный календарь (CalDAV). Эта конечная точка появится скоро.",
        "tags": [
          "Псевдонимы Календари"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/messages": {
      "get": {
        "summary": "Список и поиск сообщений",
        "description": "Список и поиск сообщений (IMAP/POP3). Эта конечная точка появится скоро.",
        "tags": [
          "Сообщения псевдонима"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Создать сообщение",
        "description": "Создать новое сообщение (IMAP/POP3). Это НЕ отправит электронное письмо – это просто добавит сообщение в папку вашего почтового ящика (аналогично команде IMAP APPEND). Эта конечная точка появится скоро.",
        "tags": [
          "Сообщения псевдонима"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/messages/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Идентификатор сообщения",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Получить сообщение",
        "description": "Получить определенное сообщение (IMAP/POP3). Эта конечная точка появится скоро.",
        "tags": [
          "Сообщения псевдонима"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Обновить сообщение",
        "description": "Обновить определенное сообщение (IMAP/POP3). Эта конечная точка появится скоро.",
        "tags": [
          "Сообщения псевдонима"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Удалить сообщение",
        "description": "Удалить определенное сообщение (IMAP/POP3). Эта конечная точка появится скоро.",
        "tags": [
          "Сообщения псевдонима"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/folders": {
      "get": {
        "summary": "Список папок",
        "description": "Список всех папок (IMAP/POP3). Эта конечная точка появится скоро.",
        "tags": [
          "Псевдонимы папок"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Создать папку",
        "description": "Создайте новую папку (IMAP/POP3). Эта конечная точка появится скоро.",
        "tags": [
          "Псевдонимы папок"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/folders/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Идентификатор папки",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Восстановить папку",
        "description": "Получить определенную папку (IMAP/POP3). Эта конечная точка появится скоро.",
        "tags": [
          "Псевдонимы папок"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Обновить папку",
        "description": "Обновить определенную папку (IMAP/POP3). Эта конечная точка появится скоро.",
        "tags": [
          "Псевдонимы папок"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Удалить папку",
        "description": "Удалить определенную папку (IMAP/POP3). Эта конечная точка появится скоро.",
        "tags": [
          "Псевдонимы папок"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/folders/{id}/copy": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Идентификатор папки",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "Копировать папку",
        "description": "Копировать определенную папку (IMAP/POP3). Эта конечная точка появится скоро.",
        "tags": [
          "Псевдонимы папок"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Счет",
      "description": "Конечные точки управления учетными записями"
    },
    {
      "name": "Журналы",
      "description": "Конечные точки управления журналами"
    },
    {
      "name": "Электронные письма",
      "description": "Конечные точки управления электронной почтой"
    },
    {
      "name": "Домены",
      "description": "> [!TIP]\n> Конечные точки домена с именем домена <code>/v1/domains/:domain\\_name</code> в качестве конечной точки взаимозаменяемы с идентификатором домена <code>:domain\\_id</code>. Это означает, что вы можете ссылаться на домен либо по его значению <code>name</code>, либо по значению <code>id</code>."
    },
    {
      "name": "Приглашения",
      "description": "Конечные точки управления приглашением домена"
    },
    {
      "name": "Участники",
      "description": "Конечные точки управления членами домена"
    },
    {
      "name": "Псевдонимы",
      "description": "Конечные точки управления псевдонимами домена"
    },
    {
      "name": "Зашифровать",
      "description": "Конечные точки шифрования"
    },
    {
      "name": "Контакты псевдонима",
      "description": "Псевдонимы управления контактами конечных точек (CardDAV)\n\n>[!NOTE]\n>В отличие от других конечных точек API, для них требуется аутентификация «имя пользователя», равное имени пользователя псевдонима, и «пароль», равный паролю, сгенерированному псевдонимом, в качестве заголовков базовой авторизации.\n\n>[!WARNING]\n>Этот раздел конечной точки находится в стадии разработки и будет выпущен (надеюсь) в 2025 году. В это время используйте клиент IMAP из раскрывающегося списка «Приложения» в навигации нашего веб-сайта."
    },
    {
      "name": "Псевдонимы Календари",
      "description": "Псевдонимы управления календарями конечных точек (CalDAV)\n\n>[!NOTE]\n> В отличие от других конечных точек API, для них требуется [Authentication](#description/authentication) \"username\", равное псевдониму имени пользователя, и \"password\", равное псевдониму сгенерированному паролю, в качестве заголовков базовой авторизации.\n\n>[!WARNING]\n> Этот раздел конечной точки находится в стадии разработки и будет выпущен (надеюсь) в 2025 году. В это время используйте клиент IMAP из раскрывающегося списка \"Приложения\" в навигации нашего веб-сайта."
    },
    {
      "name": "Сообщения псевдонима",
      "description": "Конечные точки управления сообщениями псевдонима (IMAP/POP3)\n\n>[!NOTE]\n> В отличие от других конечных точек API, для них требуется [Аутентификация](#description/authentication) \"имя пользователя\", равное имени пользователя псевдонима, и \"пароль\", равный сгенерированному паролю псевдонима, в качестве заголовков базовой авторизации.\n\n> [!WARNING]\n> Этот раздел конечной точки находится в стадии разработки и будет выпущен (надеюсь) в 2025 году. В это время используйте клиент IMAP из раскрывающегося списка \"Приложения\" в навигации нашего веб-сайта.\nУбедитесь, что вы выполнили инструкции по настройке для своего домена.\nЭти инструкции можно найти в разделе часто задаваемых вопросов [Поддерживаете ли вы получение электронной почты с помощью IMAP?](/faq#do-you-support-receiving-email-with-imap)."
    },
    {
      "name": "Псевдонимы папок",
      "description": "Конечные точки управления папками псевдонимов (IMAP/POP3)\n\n>[!TIP]\n> Конечные точки папок с путем папки <code>/v1/folders/:path</code> в качестве конечной точки взаимозаменяемы с идентификатором папки <code>:id</code>. Это означает, что вы можете ссылаться на папку по ее значению <code>path</code> или <code>id</code>.\n\n>[!WARNING]\n> Этот раздел конечной точки находится в стадии разработки и будет выпущен (надеюсь) в 2025 году. В это время используйте клиент IMAP из раскрывающегося списка «Приложения» в навигации нашего веб-сайта."
    }
  ]
}