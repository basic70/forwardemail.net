{
  "openapi": "3.0.0",
  "info": {
    "title": "Forward Email API",
    "description": "<img src=\"/img/articles/email-api.webp\" alt=\"\"/><br />Forward Email の包括的な API ドキュメントへようこそ。この API を使用すると、メール転送、ドメイン、エイリアス、送信メールなどをプログラムで管理できます。\n\n## 主な機能\n* **ドメイン管理:** ドメインの作成、取得、更新、削除、検証。\n* **エイリアス管理:** メールエイリアスの作成、更新、受信者管理など、管理。\n* **送信 SMTP:** SMTP 経由でメールを送信し、制限を管理し、送信メールを追跡。\n* **アカウントとログ:** アカウントの詳細を管理し、アクティビティログをダウンロード。\n* **セキュリティ:** TXT レコードを暗号化し、ドメインメンバー/招待を管理。\n* **CardDAV 連絡先:** vCard をサポートする連絡先管理のための完全な CRUD 操作。\n* **CalDAV カレンダー:** タイムゾーンと色分けに対応した完全なカレンダー管理機能。\n* **IMAP/POP3 メッセージ:** 高度な検索機能を備えた包括的なメッセージ管理機能。\n* **IMAP/POP3 フォルダ:** 作成、名前変更、削除を含む完全なフォルダ管理機能。\n\n## 認証\nほとんどのエンドポイントでは、**API キー** を使用した認証が必要です。Basic 認証ヘッダーの `username` に API キーを指定し、パスワードは空のままにしてください。\n\n```http\nAuthorization: Basic QVBJX1RPS0VOOg==\n```\n(Base64 エンコードの前に、`API_TOKEN` を実際のキーに置き換えてください)\n\n**エイリアス連絡先、カレンダー、メッセージ、フォルダ** に関連するエンドポイントでは、Basic 認証用に生成されたエイリアス ユーザー名とパスワードが必要です。\n\n## エラー\nAPI は標準の HTTP ステータスコードを使用して成功または失敗を示します。エラーレスポンスには、エラーの詳細を示す `message` フィールドを含む JSON 本文が含まれます。\n\n| ステータスコード | 意味 |\n|------------|---------------------|\n| 200 | OK |\n| 400 | 不正なリクエスト |\n| 401 | 権限がありません |\n| 403 | 禁止されています |\n| 404 | 見つかりません |\n| 409 | 競合 |\n| 412 | 前提条件が満たされていません |\n| 429 | リクエストが多すぎます |\n| 500 | 内部サーバーエラー |\n| 501 | 実装されていません |\n| 502 | ゲートウェイが不正です |\n| 503 | サービスを利用できません |\n| 504 | ゲートウェイがタイムアウトしました |\n\n*`5xx` エラーが発生した場合は、[api@forwardemail.net](mailto:api@forwardemail.net) までお問い合わせください。*\n\n## ローカリゼーション\nAPI レスポンスは、ユーザーが検出したロケールまたは `Accept-Language` ヘッダーに基づいて翻訳されます。25 以上の言語がサポートされています。\n\n## ページネーション\nリストを返すエンドポイントは、クエリパラメータによるページネーションをサポートしています。\n\n| パラメータ | タイプ | 省略可能 | 説明 | デフォルト | 制約 |\n|--------------|---------|----------|---------------------------------------------------------------------------------------------|---------|--------------------|\n| `page` | 整数 | はい | 取得するページ番号。| 1 | `>= 1` |\n| `limit` | 整数 | はい | 1 ページあたりの結果数。| 10 | `>= 1`, `<= 50` |\n| `pagination` | ブール値 | Yes | ページネーション動作のオプトイン（一部のエンドポイントでは2024年11月1日までに必須）。 | false | |\n\n**ページネーションヘッダー:**\n* `X-Page-Count`: 総ページ数。\n* `X-Page-Current`: 現在のページ番号。\n* `X-Page-Size`: 現在のページにあるアイテム数。\n* `X-Item-Count`: 全ページのアイテム数。\n* `Link`: ナビゲーションリンク（前、次、最初、最後）。\n\n**例:**\n```bash\ncurl \"https://api.forwardemail.net/v1/domains?page=2&limit=20&pagination=true\" \\\n-u API_TOKEN:\n```\n\n## 推奨ライブラリ\n* **Ruby:** [Faraday](https://github.com/lostisland/faraday)\n* **Python:** [requests](https://requests.readthedocs.io/en/latest/)\n* **Java:** [OkHttp](https://square.github.io/okhttp/)\n* **PHP:** [Guzzle](https://docs.guzzlephp.org/en/stable/)\n* **JavaScript/Node.js:** [superagent](https://github.com/visionmedia/superagent) (Forward Email がメンテナンス)\n* **Go:** `net/http`\n* **.NET:** [RestSharp](https://restsharp.dev/)",
    "version": "1.0.0",
    "contact": {
      "name": "Forward Email Support",
      "url": "https://forwardemail.net",
      "email": "api@forwardemail.net"
    }
  },
  "servers": [
    {
      "url": "https://api.forwardemail.net",
      "description": "メール転送APIサーバー"
    }
  ],
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "http",
        "scheme": "basic",
        "description": "\nBasic認証の**ユーザー名**としてAPIキーを使用してください。パスワードフィールドは空のままにしてください。\n\n**例:**\nAPIキーが`YOUR_API_KEY`の場合、`Authorization`ヘッダーのBase64エンコードされた値は`echo -n \"YOUR_API_KEY:\" | base64`となります。\n\n```http\nAuthorization: Basic WU9VUl9BUElfS0VZOg==\n```\n"
      },
      "AliasAuth": {
        "type": "http",
        "scheme": "basic",
        "description": "\n生成された**エイリアスのユーザー名とパスワード**をBasic認証に使用します。これは、以下のエンドポイントに適用されます。\n* エイリアス連絡先 (CardDAV)\n* エイリアスカレンダー (CalDAV)\n* エイリアスメッセージ (IMAP/POP3)\n* エイリアスフォルダ (IMAP/POP3)\n\n**例:**\nエイリアスのユーザー名が「alias@domain.com」で、パスワードが「GENERATED_PASSWORD」の場合、Base64エンコードされた値は「echo -n \"alias@domain.com:GENERATED_PASSWORD\" | base64」となります。\n\n```http\nAuthorization: Basic YWxpYXNAZG9tYWluLmNvbTpHRU5FUkFURURfUEFTU1dPUkQ=\n```\n"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "type": "string",
            "description": "エラーメッセージ"
          }
        }
      },
      "Account": {
        "type": "object",
        "required": [
          "id",
          "email",
          "plan",
          "object"
        ],
        "properties": {
          "sessions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "has_newsletter": {
            "type": "boolean"
          },
          "plan": {
            "type": "string",
            "example": "free"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "max_quota_per_alias": {
            "type": "integer",
            "format": "int64"
          },
          "full_email": {
            "type": "string",
            "format": "email"
          },
          "display_name": {
            "type": "string"
          },
          "otp_enabled": {
            "type": "boolean"
          },
          "last_locale": {
            "type": "string"
          },
          "address_country": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "example": "user"
          },
          "locale": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "address_html": {
            "type": "string"
          },
          "api_token": {
            "type": "string",
            "format": "uuid"
          }
        },
        "example": {
          "sessions": [],
          "has_newsletter": true,
          "plan": "free",
          "email": "test1@test1.com",
          "max_quota_per_alias": 10737418240,
          "full_email": "test1@test1.com",
          "display_name": "test1@test1.com",
          "otp_enabled": false,
          "last_locale": "en",
          "address_country": "None",
          "id": "683fb2e81cc5d449a0d4cd9d",
          "object": "user",
          "locale": "en",
          "created_at": "2025-06-04T02:43:52.646Z",
          "updated_at": "2025-06-04T02:43:55.350Z",
          "address_html": "",
          "api_token": "15ac16ae21784aa2cb4d5508"
        }
      },
      "Contact": {
        "type": "object",
        "required": [
          "id",
          "uid",
          "full_name",
          "content",
          "etag",
          "is_group",
          "emails",
          "phone_numbers",
          "created_at",
          "updated_at",
          "object"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "連絡先ID（CardDAVからのcontact_id）"
          },
          "uid": {
            "type": "string",
            "description": "UIDに連絡"
          },
          "full_name": {
            "type": "string",
            "description": "連絡先の氏名"
          },
          "content": {
            "type": "string",
            "description": "vCardコンテンツ"
          },
          "etag": {
            "type": "string",
            "description": "バージョン管理のためのETag"
          },
          "is_group": {
            "type": "boolean",
            "description": "連絡先がグループかどうか"
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string",
                  "format": "email"
                },
                "type": {
                  "type": "string",
                  "default": "INTERNET"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "メールアドレスの配列"
          },
          "phone_numbers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "default": "CELL"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "電話番号の配列"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "enum": [
              "contact"
            ]
          }
        },
        "example": {
          "id": "contact123",
          "uid": "uid123",
          "full_name": "John Doe",
          "content": "BEGIN:VCARD\\nVERSION:3.0\\nUID:uid123\\nFN:John Doe\\nEMAIL;TYPE=INTERNET:john@example.com\\nEND:VCARD",
          "etag": "etag123",
          "is_group": false,
          "emails": [
            {
              "value": "john@example.com",
              "type": "INTERNET"
            }
          ],
          "phone_numbers": [
            {
              "value": "+1234567890",
              "type": "CELL"
            }
          ],
          "created_at": "2025-01-01T00:00:00.000Z",
          "updated_at": "2025-01-01T00:00:00.000Z",
          "object": "contact"
        }
      },
      "ContactInput": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "vCard コンテンツ (指定されていない場合は、他のフィールドから生成されます)"
          },
          "full_name": {
            "type": "string",
            "description": "連絡先の氏名"
          },
          "contact_id": {
            "type": "string",
            "description": "カスタム連絡先ID（指定されていない場合は自動生成されます）"
          },
          "uid": {
            "type": "string",
            "description": "連絡先UID（指定されていない場合は自動生成されます）"
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string",
                  "format": "email"
                },
                "type": {
                  "type": "string",
                  "default": "INTERNET"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "メールアドレスの配列"
          },
          "phone_numbers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "default": "CELL"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "電話番号の配列"
          },
          "phones": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "default": "CELL"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "電話番号の配列（phone_numbers のエイリアス）"
          },
          "addresses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "street": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "postalCode": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              }
            },
            "description": "アドレスの配列"
          },
          "is_group": {
            "type": "boolean",
            "description": "連絡先がグループかどうか"
          }
        }
      },
      "ContactUpdateInput": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "vCardコンテンツ"
          },
          "full_name": {
            "type": "string",
            "description": "連絡先の氏名"
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string",
                  "format": "email"
                },
                "type": {
                  "type": "string",
                  "default": "INTERNET"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "メールアドレスの配列"
          },
          "phone_numbers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "default": "CELL"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "電話番号の配列"
          },
          "phones": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "default": "CELL"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "電話番号の配列（phone_numbers のエイリアス）"
          },
          "addresses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "street": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "postalCode": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              }
            },
            "description": "アドレスの配列"
          },
          "is_group": {
            "type": "boolean",
            "description": "連絡先がグループかどうか"
          }
        }
      },
      "Calendar": {
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "color",
          "timezone",
          "order",
          "created_at",
          "updated_at",
          "object"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "カレンダーID (CalDAVのcalendarId)"
          },
          "name": {
            "type": "string",
            "description": "カレンダー名"
          },
          "description": {
            "type": "string",
            "description": "カレンダーの説明"
          },
          "color": {
            "type": "string",
            "description": "カレンダーの色（16進数形式）"
          },
          "timezone": {
            "type": "string",
            "description": "カレンダーのタイムゾーン"
          },
          "order": {
            "type": "integer",
            "description": "カレンダーの表示順序"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "enum": [
              "calendar"
            ]
          }
        },
        "example": {
          "id": "calendar123",
          "name": "Personal Calendar",
          "description": "My personal calendar",
          "color": "#ff0000",
          "timezone": "America/New_York",
          "order": 0,
          "created_at": "2025-01-01T00:00:00.000Z",
          "updated_at": "2025-01-01T00:00:00.000Z",
          "object": "calendar"
        }
      },
      "CalendarInput": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "カレンダー名"
          },
          "calendar_id": {
            "type": "string",
            "description": "カスタムカレンダーID（指定されていない場合は自動生成されます）"
          },
          "description": {
            "type": "string",
            "description": "カレンダーの説明"
          },
          "color": {
            "type": "string",
            "description": "カレンダーの色（16 進形式。指定されていない場合は自動生成されます）"
          },
          "timezone": {
            "type": "string",
            "description": "カレンダーのタイムゾーン（デフォルトはユーザーのタイムゾーンまたは UTC）"
          },
          "order": {
            "type": "integer",
            "description": "カレンダーの表示順序（デフォルトは0）"
          }
        }
      },
      "CalendarUpdateInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "カレンダー名"
          },
          "description": {
            "type": "string",
            "description": "カレンダーの説明"
          },
          "color": {
            "type": "string",
            "description": "カレンダーの色（16進数形式）"
          },
          "timezone": {
            "type": "string",
            "description": "カレンダーのタイムゾーン"
          },
          "order": {
            "type": "integer",
            "description": "カレンダーの表示順序"
          }
        }
      },
      "Folder": {
        "type": "object",
        "required": [
          "id",
          "path",
          "name",
          "parent",
          "uid_validity",
          "uid_next",
          "modify_index",
          "subscribed",
          "flags",
          "retention",
          "special_use",
          "created_at",
          "updated_at",
          "object"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "フォルダID"
          },
          "path": {
            "type": "string",
            "description": "完全なフォルダパス"
          },
          "name": {
            "type": "string",
            "description": "フォルダ名（パスの最後の部分）"
          },
          "parent": {
            "type": "string",
            "nullable": true,
            "description": "親フォルダのパス"
          },
          "uid_validity": {
            "type": "integer",
            "description": "IMAP UIDの有効性"
          },
          "uid_next": {
            "type": "integer",
            "description": "次のUID値"
          },
          "modify_index": {
            "type": "integer",
            "description": "修正インデックス"
          },
          "subscribed": {
            "type": "boolean",
            "description": "フォルダが購読されているかどうか"
          },
          "flags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "フォルダフラグ"
          },
          "retention": {
            "type": "integer",
            "nullable": true,
            "description": "メッセージの保存期間"
          },
          "special_use": {
            "type": "string",
            "nullable": true,
            "description": "特別用途指定"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "enum": [
              "folder"
            ]
          }
        },
        "example": {
          "id": "folder123",
          "path": "INBOX/Subfolder",
          "name": "Subfolder",
          "parent": "INBOX",
          "uid_validity": 123456,
          "uid_next": 1,
          "modify_index": 1,
          "subscribed": true,
          "flags": [],
          "retention": null,
          "special_use": null,
          "created_at": "2025-01-01T00:00:00.000Z",
          "updated_at": "2025-01-01T00:00:00.000Z",
          "object": "folder"
        }
      },
      "FolderInput": {
        "type": "object",
        "required": [
          "path"
        ],
        "properties": {
          "path": {
            "type": "string",
            "description": "フォルダのパス/名前"
          }
        }
      },
      "FolderUpdateInput": {
        "type": "object",
        "required": [
          "path"
        ],
        "properties": {
          "path": {
            "type": "string",
            "description": "新しいフォルダのパス/名前"
          }
        }
      },
      "Message": {
        "type": "object",
        "required": [
          "id",
          "root_id",
          "folder_id",
          "folder_path",
          "thread_id",
          "header_message_id",
          "is_unread",
          "is_flagged",
          "is_deleted",
          "is_draft",
          "is_junk",
          "is_copied",
          "is_searchable",
          "is_expired",
          "has_attachment",
          "retention_date",
          "internal_date",
          "header_date",
          "subject",
          "flags",
          "size",
          "uid",
          "modseq",
          "transaction",
          "remote_address",
          "object"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "メッセージID"
          },
          "root_id": {
            "type": "string",
            "description": "スレッドのルートメッセージID"
          },
          "folder_id": {
            "type": "string",
            "description": "メッセージを含むフォルダID"
          },
          "folder_path": {
            "type": "string",
            "description": "メッセージを含むフォルダパス"
          },
          "thread_id": {
            "type": "string",
            "description": "会話をグループ化するためのスレッドID"
          },
          "header_message_id": {
            "type": "string",
            "description": "メッセージIDヘッダー値"
          },
          "is_unread": {
            "type": "boolean",
            "description": "メッセージが未読かどうか"
          },
          "is_flagged": {
            "type": "boolean",
            "description": "メッセージにフラグが付けられているかどうか"
          },
          "is_deleted": {
            "type": "boolean",
            "description": "メッセージが削除されるかどうか"
          },
          "is_draft": {
            "type": "boolean",
            "description": "メッセージが下書きかどうか"
          },
          "is_junk": {
            "type": "boolean",
            "description": "メッセージが迷惑メール/スパムかどうか"
          },
          "is_copied": {
            "type": "boolean",
            "description": "メッセージがコピーされるかどうか"
          },
          "is_searchable": {
            "type": "boolean",
            "description": "メッセージを検索可能かどうか"
          },
          "is_expired": {
            "type": "boolean",
            "description": "メッセージの有効期限が切れているかどうか"
          },
          "has_attachment": {
            "type": "boolean",
            "description": "メッセージに添付ファイルがあるかどうか"
          },
          "retention_date": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "メッセージの保存日"
          },
          "internal_date": {
            "type": "string",
            "format": "date-time",
            "description": "内部日付（IMAP）"
          },
          "header_date": {
            "type": "string",
            "format": "date-time",
            "description": "メッセージヘッダーからの日付"
          },
          "subject": {
            "type": "string",
            "description": "メッセージの件名"
          },
          "flags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "IMAPフラグ"
          },
          "size": {
            "type": "integer",
            "description": "メッセージサイズ（バイト単位）"
          },
          "uid": {
            "type": "integer",
            "description": "IMAP UID"
          },
          "modseq": {
            "type": "integer",
            "description": "変更シーケンス"
          },
          "transaction": {
            "type": "string",
            "description": "取引の種類"
          },
          "remote_address": {
            "type": "string",
            "description": "リモートIPアドレス"
          },
          "nodemailer": {
            "type": "object",
            "description": "解析されたメッセージ オブジェクト (デフォルトで含まれますが、除外するには ?nodemailer=false を設定します)"
          },
          "raw": {
            "type": "string",
            "description": "生のメッセージ内容（デフォルトで含まれますが、除外するには ?raw=false を設定します）"
          },
          "object": {
            "type": "string",
            "enum": [
              "message"
            ]
          }
        },
        "example": {
          "id": "message123",
          "root_id": "root123",
          "folder_id": "folder123",
          "folder_path": "INBOX",
          "thread_id": "thread123",
          "header_message_id": "<message123@example.com>",
          "is_unread": true,
          "is_flagged": false,
          "is_deleted": false,
          "is_draft": false,
          "is_junk": false,
          "is_copied": false,
          "is_searchable": true,
          "is_expired": false,
          "has_attachment": false,
          "retention_date": null,
          "internal_date": "2025-01-01T00:00:00.000Z",
          "header_date": "2025-01-01T00:00:00.000Z",
          "subject": "Test Message",
          "flags": [
            "\\Seen"
          ],
          "size": 1024,
          "uid": 1,
          "modseq": 1,
          "transaction": "API",
          "remote_address": "127.0.0.1",
          "object": "message"
        }
      },
      "MessageInput": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "email",
            "description": "送信者のメールアドレス"
          },
          "to": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "受信者のメールアドレス"
          },
          "cc": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "CC受信者のメールアドレス"
          },
          "bcc": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "BCC受信者のメールアドレス"
          },
          "subject": {
            "type": "string",
            "description": "メッセージの件名"
          },
          "text": {
            "type": "string",
            "description": "プレーンテキストコンテンツ"
          },
          "html": {
            "type": "string",
            "description": "HTMLコンテンツ"
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "メッセージの添付ファイル（Nodemailer 形式）"
          },
          "folder": {
            "type": "string",
            "description": "対象フォルダ（デフォルトはINBOX）"
          },
          "flags": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "description": "メッセージに設定するIMAPフラグ"
          }
        }
      },
      "MessageUpdateInput": {
        "type": "object",
        "properties": {
          "flags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "メッセージに設定するIMAPフラグ"
          },
          "folder": {
            "type": "string",
            "description": "メッセージをこのフォルダに移動する"
          }
        }
      },
      "Email": {
        "type": "object",
        "required": [
          "id",
          "object",
          "status",
          "alias",
          "domain",
          "user"
        ],
        "properties": {
          "is_redacted": {
            "type": "boolean"
          },
          "hard_bounces": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "soft_bounces": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "is_bounce": {
            "type": "boolean"
          },
          "alias": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "example": "sent"
          },
          "is_locked": {
            "type": "boolean"
          },
          "envelope": {
            "type": "object",
            "properties": {
              "from": {
                "type": "string",
                "format": "email"
              },
              "to": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            }
          },
          "messageId": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "subject": {
            "type": "string"
          },
          "accepted": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "example": "email"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "link": {
            "type": "string",
            "format": "uri"
          }
        },
        "example": {
          "is_redacted": true,
          "hard_bounces": [],
          "soft_bounces": [],
          "is_bounce": false,
          "alias": "67a180fxxxxxxxe46a3f0edf",
          "domain": "5efae85dxxxxxxxf4bb53c7a",
          "user": "5efabd3907xxxxxxx12890b8",
          "status": "sent",
          "is_locked": false,
          "envelope": {
            "from": "test@test.com",
            "to": [
              "test@test1.com"
            ]
          },
          "messageId": "1a04fee3-5230-4a85-9111-a2c376835885@shaunwarman.com",
          "date": "2025-06-04T03:32:19.000Z",
          "subject": "testing",
          "accepted": [
            "test@test1.com"
          ],
          "id": "683fbe4d5baef1b583a1xxxx",
          "object": "email",
          "created_at": "2025-06-04T03:32:29.138Z",
          "updated_at": "2025-06-04T03:32:33.847Z",
          "link": "https://forwardemail.net/my-account/emails/683fbe4d5baef1b583a11e54"
        }
      },
      "EmailList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Email"
        }
      },
      "SMTP": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "email",
            "description": "送信者のメール アドレス (ドメインのエイリアスとして存在している必要があります)。"
          },
          "to": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "「To」ヘッダーの受信者のコンマ区切りリストまたは配列。"
          },
          "cc": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "「Cc」ヘッダーの受信者のコンマ区切りリストまたは配列。"
          },
          "bcc": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "「Bcc」ヘッダーの受信者のコンマ区切りリストまたは配列。"
          },
          "subject": {
            "type": "string",
            "description": "電子メールの件名。"
          },
          "text": {
            "type": "string",
            "description": "メッセージのプレーンテキスト バージョン。"
          },
          "html": {
            "type": "string",
            "description": "メッセージの HTML バージョン。"
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "添付ファイルオブジェクトの配列 (Nodemailer の共通フィールドを参照)。"
          },
          "sender": {
            "type": "string",
            "format": "email",
            "description": "「送信者」ヘッダーの電子メール アドレス。"
          },
          "replyTo": {
            "type": "string",
            "format": "email",
            "description": "「Reply-To」ヘッダーのメール アドレス。"
          },
          "inReplyTo": {
            "type": "string",
            "description": "メッセージが返信されるメッセージ ID。"
          },
          "references": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "description": "スペースで区切られたメッセージ ID のリストまたは配列。"
          },
          "attachDataUrls": {
            "type": "boolean",
            "description": "true の場合、HTML コンテンツ内のデータ: 画像を埋め込み添付ファイルに変換します。"
          },
          "watchHtml": {
            "type": "string",
            "description": "Apple Watch 固有のメッセージの HTML バージョン。"
          },
          "amp": {
            "type": "string",
            "description": "メッセージの AMP4EMAIL 固有の HTML バージョン。"
          },
          "icalEvent": {
            "type": "object",
            "description": "代替メッセージ コンテンツとしての iCalendar イベント。"
          },
          "alternatives": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "代替メッセージ コンテンツの配列。"
          },
          "encoding": {
            "type": "string",
            "description": "テキストと HTML 文字列のエンコーディング (例: 'utf-8'、'hex'、'base64')。"
          },
          "raw": {
            "type": "string",
            "description": "カスタム生成された RFC822 形式のメッセージ (Nodemailer 生成を使用する代わりに)。"
          },
          "textEncoding": {
            "type": "string",
            "enum": [
              "quoted-printable",
              "base64"
            ],
            "description": "テキスト値にはエンコーディングが強制的に使用されます。"
          },
          "priority": {
            "type": "string",
            "enum": [
              "high",
              "normal",
              "low"
            ],
            "description": "電子メールの優先度。"
          },
          "headers": {
            "oneOf": [
              {
                "type": "object",
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            ],
            "description": "追加のヘッダー フィールドのオブジェクトまたは配列。"
          },
          "messageId": {
            "type": "string",
            "description": "「Message-ID」ヘッダーのオプションのメッセージ ID。"
          },
          "date": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "description": "オプションの日付ヘッダー。30日を超える日付は指定できません。"
          },
          "list": {
            "type": "object",
            "description": "List-* ヘッダーのオプションのオブジェクト。"
          }
        }
      },
      "Domain": {
        "type": "object",
        "properties": {
          "has_newsletter": {
            "type": "boolean"
          },
          "ignore_mx_check": {
            "type": "boolean"
          },
          "retention_days": {
            "type": "integer"
          },
          "has_regex": {
            "type": "boolean"
          },
          "has_catchall": {
            "type": "boolean"
          },
          "allowlist": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "denylist": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "restricted_alias_names": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "has_adult_content_protection": {
            "type": "boolean"
          },
          "has_phishing_protection": {
            "type": "boolean"
          },
          "has_executable_protection": {
            "type": "boolean"
          },
          "has_virus_protection": {
            "type": "boolean"
          },
          "is_catchall_regex_disabled": {
            "type": "boolean"
          },
          "has_smtp": {
            "type": "boolean"
          },
          "is_smtp_suspended": {
            "type": "boolean"
          },
          "plan": {
            "type": "string"
          },
          "max_recipients_per_alias": {
            "type": "integer"
          },
          "smtp_port": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "has_mx_record": {
            "type": "boolean"
          },
          "has_txt_record": {
            "type": "boolean"
          },
          "has_dkim_record": {
            "type": "boolean"
          },
          "has_return_path_record": {
            "type": "boolean"
          },
          "has_dmarc_record": {
            "type": "boolean"
          },
          "has_recipient_verification": {
            "type": "boolean"
          },
          "has_custom_verification": {
            "type": "boolean"
          },
          "verification_record": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "enum": [
              "domain"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "storage_used": {
            "type": "integer"
          },
          "storage_used_by_aliases": {
            "type": "integer"
          },
          "storage_quota": {
            "type": "integer"
          },
          "smtp_dns_records": {
            "type": "object",
            "properties": {
              "dkim": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              },
              "return_path": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              },
              "dmarc": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "link": {
            "type": "string",
            "format": "uri"
          }
        },
        "example": [
          {
            "has_newsletter": false,
            "ignore_mx_check": false,
            "retention_days": 0,
            "has_regex": false,
            "has_catchall": true,
            "allowlist": [],
            "denylist": [],
            "restricted_alias_names": [],
            "has_adult_content_protection": true,
            "has_phishing_protection": true,
            "has_executable_protection": true,
            "has_virus_protection": true,
            "is_catchall_regex_disabled": false,
            "has_smtp": false,
            "is_smtp_suspended": false,
            "plan": "team",
            "max_recipients_per_alias": 10,
            "smtp_port": "25",
            "name": "test.com",
            "has_mx_record": false,
            "has_txt_record": false,
            "has_dkim_record": false,
            "has_return_path_record": false,
            "has_dmarc_record": false,
            "has_recipient_verification": false,
            "has_custom_verification": false,
            "verification_record": "kcjg6vrO8Q",
            "id": "683f1172c4bad2524410b857",
            "object": "domain",
            "created_at": "2025-06-03T15:14:59.000Z",
            "updated_at": "2025-06-03T15:14:59.254Z",
            "storage_used": 0,
            "storage_used_by_aliases": 0,
            "storage_quota": 10737418240,
            "smtp_dns_records": {
              "dkim": {
                "name": "fe-ebf3212716._domainkey",
                "value": "v=DKIM1; k=rsa; p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCcG+YBDPhyH8bLmyflmU9w1klYDeWpEufIlVqyWqly9lC+J/ntkKn4gum28EeE6vR+55x4JFCR8qSaw0YO1eCRwBgpFB0kKzbELHh2i2TKKwrqB3gPLXp4q4lbcGX2eD6fPCRwckTHqmiOzMhX8GD60zVlEvabok4LJ1i/BOyh6wIDAQAB;"
              },
              "return_path": {
                "name": "fe-bounces",
                "value": "forwardemail.net"
              },
              "dmarc": {
                "name": "_dmarc",
                "value": "v=DMARC1; p=reject; pct=100; rua=mailto:dmarc-683f1172c4bad2524410b857@localhost;"
              }
            },
            "link": "http://localhost:3000/my-account/domains/test.com"
          }
        ]
      },
      "CreateDomainInput": {
        "type": "object",
        "required": [
          "domain"
        ],
        "properties": {
          "domain": {
            "type": "string",
            "description": "完全修飾ドメイン名（FQDN）またはIPアドレス"
          },
          "team_domain": {
            "type": "string",
            "nullable": true,
            "description": "別のドメインから同じチームに割り当てます。ドメインIDまたはFQDNを指定できます。明示的に無効にするには「none」を使用してください。"
          },
          "plan": {
            "type": "string",
            "enum": [
              "free",
              "enhanced_protection",
              "team"
            ],
            "description": "プランの種類（デフォルトは「無料」またはユーザーの現在の有料プラン）"
          },
          "catchall": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "type": "string",
                "description": "電子メール アドレスの区切りリスト (カンマ、スペース、または改行で区切られます)"
              }
            ],
            "description": "デフォルトのキャッチオールエイリアスを作成する（デフォルトは true）"
          },
          "has_adult_content_protection": {
            "type": "boolean",
            "description": "スパムスキャナのアダルトコンテンツ保護を有効にする"
          },
          "has_phishing_protection": {
            "type": "boolean",
            "description": "スパムスキャナのフィッシング対策を有効にする"
          },
          "has_executable_protection": {
            "type": "boolean",
            "description": "スパムスキャナの実行ファイル保護を有効にする"
          },
          "has_virus_protection": {
            "type": "boolean",
            "description": "スパムスキャナのウイルス対策を有効にする"
          },
          "has_recipient_verification": {
            "type": "boolean",
            "description": "エイリアス受信者にメール確認リンクをクリックするよう要求する"
          },
          "ignore_mx_check": {
            "type": "boolean",
            "description": "高度なメールルーティング設定のMXレコードチェックを無視する"
          },
          "retention_days": {
            "type": "integer",
            "minimum": 0,
            "maximum": 30,
            "description": "送信SMTPログを保持する日数（0～30、デフォルト：0）"
          },
          "bounce_webhook": {
            "oneOf": [
              {
                "type": "string",
                "format": "uri",
                "description": "バウンスイベントを受信するためのWebhook URL"
              },
              {
                "type": "boolean",
                "enum": [
                  false
                ],
                "description": "バウンスWebhookを無効にする"
              }
            ]
          },
          "max_quota_per_alias": {
            "type": "string",
            "description": "エイリアスあたりのストレージ最大割り当て量（例：1 GB）"
          }
        }
      },
      "UpdateDomainInput": {
        "type": "object",
        "properties": {
          "smtp_port": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ],
            "description": "SMTP 転送用に設定するカスタム ポート (デフォルトは「25」)"
          },
          "has_adult_content_protection": {
            "type": "boolean",
            "description": "このドメインでスパムスキャナによるアダルトコンテンツ保護を有効にするかどうか"
          },
          "has_phishing_protection": {
            "type": "boolean",
            "description": "このドメインでスパムスキャナのフィッシング保護を有効にするかどうか"
          },
          "has_executable_protection": {
            "type": "boolean",
            "description": "このドメインでスパムスキャナ実行ファイル保護を有効にするかどうか"
          },
          "has_virus_protection": {
            "type": "boolean",
            "description": "このドメインでスパムスキャナウイルス対策を有効にするかどうか"
          },
          "has_recipient_verification": {
            "type": "boolean",
            "description": "エイリアス受信者がメールを流すためにメール確認リンクをクリックすることを要求するかどうかのグローバルドメインのデフォルト"
          },
          "ignore_mx_check": {
            "type": "boolean",
            "description": "検証のためにドメインの MX レコード チェックを無視するかどうか (主に高度な MX ルーティング設定の場合)"
          },
          "retention_days": {
            "type": "integer",
            "minimum": 0,
            "maximum": 30,
            "description": "送信 SMTP メールを保存する日数 (0 = すぐに削除)"
          },
          "bounce_webhook": {
            "oneOf": [
              {
                "type": "string",
                "format": "uri"
              },
              {
                "type": "boolean",
                "enum": [
                  false
                ]
              }
            ],
            "description": "バウンス通知を受信するためのWebhook URL、または無効にする場合はfalse"
          },
          "max_quota_per_alias": {
            "type": "string",
            "description": "エイリアスごとのストレージクォータ（例：1 GB、バイトに解析）"
          }
        }
      },
      "Alias": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email"
              },
              "display_name": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "email",
              "display_name",
              "id"
            ]
          },
          "domain": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "id"
            ]
          },
          "name": {
            "type": "string"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "is_enabled": {
            "type": "boolean"
          },
          "has_recipient_verification": {
            "type": "boolean"
          },
          "verified_recipients": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "pending_recipients": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "recipients": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "enum": [
              "alias"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "storage_location": {
            "type": "string"
          },
          "has_imap": {
            "type": "boolean"
          }
        },
        "required": [
          "user",
          "domain",
          "name",
          "labels",
          "is_enabled",
          "has_recipient_verification",
          "verified_recipients",
          "pending_recipients",
          "recipients",
          "id",
          "object",
          "created_at",
          "updated_at",
          "storage_location",
          "has_imap"
        ],
        "example": {
          "user": {
            "email": "test@test.com",
            "display_name": "test@test.com",
            "id": "5efabd39xxxxxxx4512890b8"
          },
          "domain": {
            "name": "mailsire.com",
            "id": "5e3c0550xxxxxxx09b7ba023"
          },
          "name": "abc123",
          "labels": [],
          "is_enabled": true,
          "has_recipient_verification": false,
          "verified_recipients": [],
          "pending_recipients": [],
          "recipients": [
            "abc@test1.com"
          ],
          "id": "62fa3dcxxxxxxx79dda83ff2",
          "object": "alias",
          "created_at": "2022-08-15T12:36:26.593Z",
          "updated_at": "2022-08-15T12:36:26.593Z",
          "storage_location": "storage_loc",
          "has_imap": false
        }
      },
      "AliasInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "エイリアス名（指定されない場合、または空白の場合は、ランダムなエイリアスが生成されます）"
          },
          "recipients": {
            "oneOf": [
              {
                "type": "string",
                "description": "有効なメールアドレス、FQDN、IP、またはWebhook URLの改行/スペース/カンマ区切りの文字列"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                },
                "description": "有効な受信者の配列"
              }
            ],
            "description": "受信者のリスト。指定されていないか空の場合、リクエスト者のメールアドレスがデフォルトになります。"
          },
          "description": {
            "type": "string",
            "description": "エイリアスの説明"
          },
          "labels": {
            "oneOf": [
              {
                "type": "string",
                "description": "改行/スペース/カンマで区切られたラベルの文字列"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "ラベルの配列"
              }
            ]
          },
          "has_recipient_verification": {
            "type": "boolean",
            "description": "受信者に確認リンクをクリックするよう要求する（デフォルトはドメイン設定）"
          },
          "is_enabled": {
            "type": "boolean",
            "description": "このエイリアスを有効にするか無効にするか"
          },
          "error_code_if_disabled": {
            "type": "number",
            "enum": [
              250,
              421,
              550
            ],
            "description": "エイリアスが無効の場合のエラーコード。デフォルトは250です。"
          },
          "has_imap": {
            "type": "boolean",
            "description": "このエイリアスの IMAP ストレージを有効または無効にする"
          },
          "has_pgp": {
            "type": "boolean",
            "description": "このエイリアスの OpenPGP 暗号化を有効または無効にする"
          },
          "public_key": {
            "type": "string",
            "description": "ASCII Armor形式のOpenPGP公開鍵"
          },
          "max_quota": {
            "type": "string",
            "description": "ストレージの最大割り当て量（例：「1 GB」）"
          },
          "vacation_responder_is_enabled": {
            "type": "boolean",
            "description": "不在通知を有効または無効にする"
          },
          "vacation_responder_start_date": {
            "type": "string",
            "description": "休暇対応者の開始日（例：'YYYY-MM-DD'）"
          },
          "vacation_responder_end_date": {
            "type": "string",
            "description": "休暇回答者の終了日（例：'YYYY-MM-DD'）"
          },
          "vacation_responder_subject": {
            "type": "string",
            "description": "休暇通知用のプレーンテキストの件名"
          },
          "vacation_responder_message": {
            "type": "string",
            "description": "休暇中の応答者へのプレーンテキストメッセージ"
          }
        }
      },
      "AliasUpdateInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "エイリアス名"
          },
          "recipients": {
            "oneOf": [
              {
                "type": "string",
                "description": "有効なメールアドレス、FQDN、IP、またはWebhook URLの改行/スペース/カンマ区切りの文字列"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                },
                "description": "有効な受信者の配列"
              }
            ]
          },
          "description": {
            "type": "string",
            "description": "エイリアスの説明"
          },
          "labels": {
            "oneOf": [
              {
                "type": "string",
                "description": "改行/スペース/カンマで区切られたラベルの文字列"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "ラベルの配列"
              }
            ]
          },
          "has_recipient_verification": {
            "type": "boolean",
            "description": "受信者に確認リンクをクリックするよう要求する（デフォルトはドメイン設定）"
          },
          "is_enabled": {
            "type": "boolean",
            "description": "エイリアスを有効または無効にする"
          },
          "error_code_if_disabled": {
            "type": "number",
            "enum": [
              250,
              421,
              550
            ],
            "description": "エイリアスが無効になっている場合に使用するエラー コード (デフォルトは 250)"
          },
          "has_imap": {
            "type": "boolean",
            "description": "IMAPストレージを有効または無効にする"
          },
          "has_pgp": {
            "type": "boolean",
            "description": "OpenPGP暗号化を有効または無効にする"
          },
          "public_key": {
            "type": "string",
            "description": "ASCII Armor形式のOpenPGP公開鍵"
          },
          "max_quota": {
            "type": "string",
            "description": "ストレージの最大割り当て量（例：「1 GB」）"
          },
          "vacation_responder_is_enabled": {
            "type": "boolean",
            "description": "不在通知を有効または無効にする"
          },
          "vacation_responder_start_date": {
            "type": "string",
            "description": "休暇対応開始日（例：YYYY-MM-DD）"
          },
          "vacation_responder_end_date": {
            "type": "string",
            "description": "休暇回答者終了日（例：YYYY-MM-DD）"
          },
          "vacation_responder_subject": {
            "type": "string",
            "description": "休暇応答者のプレーンテキストの件名"
          },
          "vacation_responder_message": {
            "type": "string",
            "description": "休暇応答者の平文メッセージ"
          }
        }
      },
      "GenerateAliasPasswordInput": {
        "type": "object",
        "properties": {
          "new_password": {
            "type": "string",
            "description": "エイリアスに使用する新しいカスタムパスワード"
          },
          "password": {
            "type": "string",
            "description": "メールボックスのストレージを削除せずにエイリアスの既存のパスワードを変更する"
          },
          "is_override": {
            "type": "boolean",
            "description": "既存のパスワードを上書きし、IMAP ストレージを削除します (注意して使用してください)"
          },
          "emailed_instructions": {
            "type": "string",
            "format": "email",
            "description": "エイリアスのパスワードと設定手順を送信するメールアドレス"
          }
        }
      },
      "EmailLimit": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "現在送信されたメールの数"
          },
          "limit": {
            "type": "integer",
            "description": "許可されるメールの最大数"
          }
        }
      },
      "Member": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "会員ID"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "メンバーのメールアドレス"
          },
          "role": {
            "type": "string",
            "description": "メンバーの役割"
          }
        }
      },
      "Invite": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "招待されたメールアドレス"
          }
        }
      }
    },
    "parameters": {
      "page": {
        "name": "page",
        "in": "query",
        "description": "返される結果のページ。指定されていない場合は、値は1になります。1以上の数値を指定する必要があります。",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "default": 1
        }
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "description": "1ページあたりに返される結果の数。指定がない場合はデフォルトで10になります。1以上50以下の数値を指定する必要があります。",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 50,
          "default": 10
        }
      },
      "pagination": {
        "name": "pagination",
        "in": "query",
        "description": "2024年11月1日までにページネーションをオプトインしてください",
        "schema": {
          "type": "boolean"
        }
      },
      "domainId": {
        "name": "domain_id",
        "in": "path",
        "required": true,
        "description": "ドメインID",
        "schema": {
          "type": "string"
        }
      },
      "aliasId": {
        "name": "alias_id",
        "in": "path",
        "required": true,
        "description": "エイリアスID",
        "schema": {
          "type": "string"
        }
      },
      "memberId": {
        "name": "member_id",
        "in": "path",
        "required": true,
        "description": "会員ID",
        "schema": {
          "type": "string"
        }
      },
      "emailId": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "メールID",
        "schema": {
          "type": "string"
        }
      },
      "contactId": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "連絡先ID",
        "schema": {
          "type": "string"
        }
      },
      "calendarId": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "カレンダーID",
        "schema": {
          "type": "string"
        }
      },
      "folderId": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "フォルダIDまたはパス",
        "schema": {
          "type": "string"
        }
      },
      "messageId": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "メッセージID",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "Error": {
        "description": "Error response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "BadRequest": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotFound": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Conflict": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "PreconditionFailed": {
        "description": "Precondition Failed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "TooManyRequests": {
        "description": "Too Many Requests",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotImplemented": {
        "description": "Not Implemented",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "BadGateway": {
        "description": "Bad Gateway",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "ServiceUnavailable": {
        "description": "Service Unavailable",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "GatewayTimeout": {
        "description": "Gateway Time-out",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  },
  "paths": {
    "/v1/account": {
      "get": {
        "tags": [
          "アカウント"
        ],
        "summary": "アカウントを取得",
        "description": "アカウント情報を取得します。",
        "operationId": "retrieveAccount",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Account retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "アカウント"
        ],
        "summary": "アカウントを更新する",
        "description": "アカウント情報を更新してください。",
        "operationId": "updateAccount",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "display_name": {
                    "type": "string",
                    "description": "表示名"
                  },
                  "locale": {
                    "type": "string",
                    "description": "ロケール設定"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/contacts": {
      "get": {
        "tags": [
          "連絡先"
        ],
        "summary": "連絡先リスト",
        "description": "認証されたエイリアスのすべての連絡先のリストを取得します。このエンドポイントはページ区切りをサポートし、CardDAV形式で連絡先を返します。",
        "operationId": "listContacts",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Contacts retrieved successfully",
            "headers": {
              "X-Page-Count": {
                "description": "Total number of pages",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Current": {
                "description": "Current page number",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Size": {
                "description": "Number of items on current page",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Item-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Contact"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "連絡先"
        ],
        "summary": "連絡先を作成",
        "description": "新しい連絡先を作成します。vCardコンテンツを直接指定することも、個々の連絡先フィールドを指定してvCard形式に変換することもできます。同じIDの連絡先が既に存在する場合は、競合エラーが返されます。",
        "operationId": "createContact",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contact created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/contacts/{id}": {
      "get": {
        "tags": [
          "連絡先"
        ],
        "summary": "連絡先を取得",
        "description": "特定の連絡先をIDで取得します。連絡先は、vCardコンテンツと解析済みフィールドを含む標準の連絡先形式で返されます。",
        "operationId": "retrieveContact",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/contactId"
          }
        ],
        "responses": {
          "200": {
            "description": "Contact retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "連絡先"
        ],
        "summary": "連絡先を更新",
        "description": "既存の連絡先を更新します。更新するvCardの内容、または個々のフィールドを指定できます。個々のフィールドを指定した場合、連絡先のvCardは再生成されます。",
        "operationId": "updateContact",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/contactId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "連絡先"
        ],
        "summary": "連絡先を削除",
        "description": "特定の連絡先を完全に削除します。この操作は元に戻せません。",
        "operationId": "deleteContact",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/contactId"
          }
        ],
        "responses": {
          "200": {
            "description": "Contact deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/calendars": {
      "get": {
        "tags": [
          "カレンダー"
        ],
        "summary": "カレンダーを一覧表示する",
        "description": "認証されたエイリアスのすべてのカレンダーのリストを取得します。このエンドポイントはページ区切りをサポートし、CalDAV形式でカレンダーを返します。",
        "operationId": "listCalendars",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Calendars retrieved successfully",
            "headers": {
              "X-Page-Count": {
                "description": "Total number of pages",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Current": {
                "description": "Current page number",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Size": {
                "description": "Number of items on current page",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Item-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Calendar"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "カレンダー"
        ],
        "summary": "カレンダーを作成",
        "description": "新しいカレンダーを作成します。カレンダー名は必須ですが、色、タイムゾーン、説明などの他のプロパティは任意です。同じ名前のカレンダーが既に存在する場合は、競合エラーが返されます。",
        "operationId": "createCalendar",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Calendar created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Calendar"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/calendars/{id}": {
      "get": {
        "tags": [
          "カレンダー"
        ],
        "summary": "カレンダーを取得",
        "description": "IDで指定したカレンダーを取得します。カレンダーは、名前、説明、色、タイムゾーン、順序など、すべてのプロパティとともに返されます。",
        "operationId": "retrieveCalendar",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/calendarId"
          }
        ],
        "responses": {
          "200": {
            "description": "Calendar retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Calendar"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "カレンダー"
        ],
        "summary": "カレンダーを更新",
        "description": "既存のカレンダーを更新します。カレンダーの名前、説明、色、タイムゾーン、順序など、すべてのプロパティを更新できます。既存のカレンダー名に変更すると、競合エラーが返されます。",
        "operationId": "updateCalendar",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/calendarId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Calendar updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Calendar"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "カレンダー"
        ],
        "summary": "カレンダーを削除",
        "description": "特定のカレンダーを完全に削除します。この操作は元に戻すことができず、カレンダー内のすべてのイベントも削除されます。",
        "operationId": "deleteCalendar",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/calendarId"
          }
        ],
        "responses": {
          "200": {
            "description": "Calendar deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Calendar"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/folders": {
      "get": {
        "tags": [
          "フォルダ"
        ],
        "summary": "フォルダの一覧",
        "description": "認証済みエイリアスのすべてのIMAPフォルダ／メールボックスのリストを取得します。このエンドポイントは、ページ区切りとサブスクリプションステータスによるフィルタリングをサポートしています。",
        "operationId": "listFolders",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "name": "subscribed",
            "in": "query",
            "description": "サブスクリプションのステータスでフォルダをフィルタリングする",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Folders retrieved successfully",
            "headers": {
              "X-Page-Count": {
                "description": "Total number of pages",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Current": {
                "description": "Current page number",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Size": {
                "description": "Number of items on current page",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Item-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Folder"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "フォルダ"
        ],
        "summary": "フォルダを作成",
        "description": "新しいIMAPフォルダ／メールボックスを作成します。フォルダパスは必須で、親フォルダ（例：INBOX/サブフォルダ）を含めることができます。親フォルダが存在しない場合は、自動的に作成されます。",
        "operationId": "createFolder",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FolderInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Folder created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/folders/{id}": {
      "get": {
        "tags": [
          "フォルダ"
        ],
        "summary": "フォルダを取得",
        "description": "特定のフォルダをIDまたはパスで取得します。フォルダのオブジェクトIDまたはフルパス（例：'INBOX/Subfolder'）を識別子として使用できます。",
        "operationId": "retrieveFolder",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/folderId"
          }
        ],
        "responses": {
          "200": {
            "description": "Folder retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "フォルダ"
        ],
        "summary": "フォルダを更新",
        "description": "既存のフォルダを更新/名前変更します。この操作は、リクエスト本文で指定された新しいパスにフォルダの名前を変更します。識別子として、フォルダのオブジェクトIDまたは現在のパスのいずれかを使用できます。",
        "operationId": "updateFolder",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/folderId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FolderUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Folder updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "フォルダ"
        ],
        "summary": "フォルダを削除",
        "description": "特定のフォルダを完全に削除します。この操作は元に戻すことができず、フォルダ内のすべてのメッセージも削除されます。識別子として、フォルダのオブジェクトIDまたはパスのいずれかを使用できます。",
        "operationId": "deleteFolder",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/folderId"
          }
        ],
        "responses": {
          "200": {
            "description": "Folder deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/messages": {
      "get": {
        "tags": [
          "メッセージ"
        ],
        "summary": "メッセージの一覧と検索",
        "description": "高度な検索機能とフィルタリング機能を使用して、メッセージのリストを取得します。このエンドポイントは、ページ区切りと、メッセージの内容、ヘッダー、フラグ、メタデータを網羅した包括的な検索をサポートしています。フォルダー、フラグ、内容、ヘッダー、日付範囲、サイズなど、さまざまな条件で検索できます。",
        "operationId": "listMessages",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "name": "folder",
            "in": "query",
            "description": "フォルダパスでメッセージをフィルタリングする",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_unread",
            "in": "query",
            "description": "既読ステータスでフィルタリング",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_flagged",
            "in": "query",
            "description": "フラグ付きステータスでフィルタリング",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_deleted",
            "in": "query",
            "description": "削除ステータスでフィルタリング",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_draft",
            "in": "query",
            "description": "下書きステータスでフィルタリング",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_junk",
            "in": "query",
            "description": "迷惑メール/スパムステータスでフィルタリング",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_copied",
            "in": "query",
            "description": "コピーステータスでフィルタリング",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_searchable",
            "in": "query",
            "description": "検索可能なステータスでフィルタリング",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_expired",
            "in": "query",
            "description": "有効期限でフィルタリング",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "has_attachments",
            "in": "query",
            "description": "添付ファイルの有無でフィルタリング",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "has_attachment",
            "in": "query",
            "description": "添付ファイルの有無でフィルタリング（has_attachments のエイリアス）",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "subject",
            "in": "query",
            "description": "メッセージの件名で検索",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "query",
            "description": "メッセージ本文/テキスト内を検索",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "text",
            "in": "query",
            "description": "メッセージテキスト内を検索（本文のエイリアス）",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "headers",
            "in": "query",
            "description": "すべてのメッセージヘッダーを検索",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "message_id",
            "in": "query",
            "description": "メッセージIDヘッダーによる検索",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "ヘッダーとテキスト全体の一般検索",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "一般検索（検索のエイリアス）",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "since",
            "in": "query",
            "description": "この日付以降のメッセージをフィルタリングする（ISO 8601 形式）",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "この日付より前のメッセージをフィルタリングする（ISO 8601 形式）",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "min_size",
            "in": "query",
            "description": "最小バイトサイズでメッセージをフィルタリングする",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "max_size",
            "in": "query",
            "description": "最大バイトサイズでメッセージをフィルタリングする",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Fromヘッダーで検索",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Toヘッダーで検索",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cc",
            "in": "query",
            "description": "CCヘッダーで検索",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bcc",
            "in": "query",
            "description": "BCCヘッダーで検索",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "日付ヘッダーで検索",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reply-to",
            "in": "query",
            "description": "Reply-Toヘッダーで検索",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Messages retrieved successfully",
            "headers": {
              "X-Page-Count": {
                "description": "Total number of pages",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Current": {
                "description": "Current page number",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Size": {
                "description": "Number of items on current page",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Item-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "メッセージ"
        ],
        "summary": "メッセージを作成",
        "description": "フォルダに新しいメッセージを作成／追加します。このエンドポイントは標準のNodemailerメッセージ形式に対応しており、対象フォルダと初期フラグを指定できます。対象フォルダが存在しない場合は、自動的に作成されます。",
        "operationId": "createMessage",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Message created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/messages/{id}": {
      "get": {
        "tags": [
          "メッセージ"
        ],
        "summary": "メッセージを取得",
        "description": "IDで特定のメッセージを取得します。デフォルトでは、レスポンスには解析済みのNodemailerオブジェクトと生のメッセージコンテンツが含まれます。クエリパラメータを使用して、含まれる内容を制御できます。",
        "operationId": "retrieveMessage",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/messageId"
          },
          {
            "name": "eml",
            "in": "query",
            "description": "JSONではなく生のEML形式を返す",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "nodemailer",
            "in": "query",
            "description": "解析されたNodemailerオブジェクトを含める",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "attachments",
            "in": "query",
            "description": "Nodemailer オブジェクトに添付ファイルを含める",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "raw",
            "in": "query",
            "description": "生のメッセージコンテンツを含める",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Message retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              },
              "message/rfc822": {
                "description": "Raw EML format (when ?eml=true)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "メッセージ"
        ],
        "summary": "更新メッセージ",
        "description": "既存のメッセージを更新します。メッセージのフラグを変更したり、別のフォルダに移動したりできます。対象のフォルダが存在しない場合は、自動的に作成されます。",
        "operationId": "updateMessage",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/messageId"
          },
          {
            "name": "eml",
            "in": "query",
            "description": "JSONではなく生のEML形式を返す",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              },
              "message/rfc822": {
                "description": "Raw EML format (when ?eml=true)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "メッセージ"
        ],
        "summary": "メッセージを削除",
        "description": "特定のメッセージを完全に削除します。この操作は元に戻すことができず、メッセージはストレージから完全に削除されます。通常、メッセージをゴミ箱に移動するIMAPクライアントとは異なり、このエンドポイントはハード削除を実行します。",
        "operationId": "deleteMessage",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/messageId"
          }
        ],
        "responses": {
          "200": {
            "description": "Message deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/logs/download": {
      "get": {
        "summary": "ログをダウンロード",
        "description": "**ログのダウンロード**\n\n説明: 当社のAPIを使用すると、プログラム的にアカウントのログをダウンロードできます。このエンドポイントにリクエストを送信すると、アカウントのすべてのログが処理され、処理が完了すると添付ファイル（Gzip圧縮されたCSVスプレッドシートファイル）としてメールで送信されます。\n\nこれにより、Cronジョブを使用したバックグラウンドジョブの作成や、Node.jsジョブスケジューリングソフトウェアBreeを使用して、必要なときにいつでもログを取得できます。なお、このエンドポイントは1日あたり10リクエストまでに制限されています。\n\n添付ファイルは「email-deliverability-logs-YYYY-MM-DD-h-mm-A-z.csv.gz」の小文字形式で、メールには取得したログの簡単な概要が記載されています。",
        "tags": [
          "ログ"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "query",
            "description": "完全修飾ドメイン（FQDN）でログをフィルタリングします。指定しない場合は、すべてのドメインのすべてのログが取得されます。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "電子メール、ドメイン、エイリアス名、IP アドレス、または日付 (M/Y、M/D/YY、M-D、M-D-YY、または M.D.YY 形式) でログを検索します。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bounce_category",
            "in": "query",
            "description": "特定のバウンス カテゴリ (例: 「ブロックリスト」) でログを検索します。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "response_code",
            "in": "query",
            "description": "特定のエラー応答コード (例: 421 または 550) でログを検索します。",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Logs will be emailed as an attachment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Logs will be emailed to you shortly"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/v1/emails": {
      "get": {
        "summary": "送信SMTPメールの一覧",
        "description": "**送信SMTPメールの一覧表示**\n\nこのエンドポイントは、メールの `message`、`headers`、`rejectedErrors` のプロパティ値を返さないことに注意してください。\n\nこれらのプロパティとその値を返すには、メールIDを指定して[メールの取得](https://github.com/forwardemail/forwardemail.net/blob/master/app/views/api/index.md#retrieve-email)エンドポイントを使用してください。",
        "tags": [
          "メール"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "メタデータでメールを検索します。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "domain",
            "in": "query",
            "description": "ドメイン名でメールを検索します。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "特定のフィールドで並べ替えます（先頭にハイフンを 1 つ付けると、そのフィールドの逆方向に並べ替えられます）。設定されていない場合は、デフォルトで created_at に設定されます。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "詳細については、「ページ区切り」を参照してください。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "詳細については、「ページ区切り」を参照してください。",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of outbound SMTP emails",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Email"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "summary": "送信SMTPメールを作成する",
        "description": "メール作成用のAPIは、Nodemailerのメッセージオプション設定を参考に開発されています。以下のすべての本文パラメータについては、[Nodemailerのメッセージ設定](https://nodemailer.com/message/)を参照してください。\n\n`envelope`と`dkim`（これらは自動的に設定されます）を除き、すべてのNodemailerオプションをサポートしています。`disableFileAccess`と`disableUrlAccess`オプションは、セキュリティ上の理由から自動的に`true`に設定されます。\n\nヘッダーを含む生のメール全体と`raw`オプションのみを渡すか、以下の本文パラメータオプションを個別に渡す必要があります。\n\nこのAPIエンドポイントは、ヘッダーに絵文字が含まれている場合、自動的にエンコードします（例：件名が`Subject: 🤓 Hello`の場合、`Subject: =?UTF-8?Q?=F0=9F=A4=93?= Hello`に自動的に変換されます）。私たちの目標は、開発者にとって非常に使いやすく、誰でも簡単に使用できる電子メール API を作成することでした。",
        "tags": [
          "メール"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SMTP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email sent successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/emails/limit": {
      "get": {
        "summary": "送信SMTPメールの制限を取得する",
        "description": "これは、アカウントごとに毎日の SMTP 送信メッセージ数の `count` と `limit` を含む JSON オブジェクトを返すシンプルなエンドポイントです。",
        "tags": [
          "メール"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Email limit information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailLimit"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/emails/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/emailId"
        }
      ],
      "get": {
        "summary": "送信SMTPメールを取得する",
        "description": "特定の送信 SMTP メールを取得します。",
        "tags": [
          "メール"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Email retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "送信SMTPメールを削除する",
        "description": "メールを削除すると、現在のステータスが「保留中」、「キューに追加済み」、または「延期」のいずれかの場合に限り、ステータスが「拒否」に設定され（その後、キューで処理されません）、キュー内で処理されます。メールは作成または送信されてから30日後に自動的に消去される場合があります。そのため、送信SMTPメールのコピーをクライアント、データベース、またはアプリケーションに保存しておく必要があります。必要に応じて、データベースでメールID値を参照できます。この値は、[メールの作成](https://github.com/forwardemail/forwardemail.net/blob/master/app/views/api/index.md#create-email)と[メールの取得](https://github.com/forwardemail/forwardemail.net/blob/master/app/views/api/index.md#retrieve-email)エンドポイントの両方から返されます。",
        "tags": [
          "メール"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Email deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains": {
      "get": {
        "summary": "ドメインの一覧",
        "description": "> [!NOTE]\n>2024年11月1日より、リストドメインおよびリストドメインエイリアスのAPIエンドポイントでは、1ページあたり最大結果数がデフォルトで「1000」になります。この動作を早期にオプトインしたい場合は、エンドポイントクエリのURLに追加のクエリ文字列パラメータとして「?paginate=true」を渡してください。詳しくはページネーションをご覧ください。",
        "tags": [
          "ドメイン"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "メタデータでドメインを検索します。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "domain",
            "in": "query",
            "description": "ドメイン名でドメインを検索します。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "特定のフィールドで並べ替えます（先頭にハイフンを 1 つ付けると、そのフィールドの逆方向に並べ替えられます）。設定されていない場合は、デフォルトで created_at が使用されます。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "詳細については、「ページ区切り」を参照してください。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "詳細については、「ページ区切り」を参照してください。",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of domains",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "summary": "ドメインを作成",
        "description": "システムに新しいドメインを作成します。このエンドポイントでは、プラットフォームで使用する完全修飾ドメイン名 (FQDN) または IP アドレスを登録できます。\n\nオプションの設定オプションには、既存のチームへのドメインの割り当て、プランの種類 (無料、拡張保護、チームなど) の設定、スパムフィルタリング、ウイルススキャン、受信者検証などの高度な保護機能の設定などがあります。また、キャッチオールエイリアスをデフォルトで作成するかどうかの設定、SMTP エラー時のカスタムバウンス Webhook URL の設定、このドメインのメールエイリアスに対するストレージクォータ制限の定義も可能です。このエンドポイントは、ドメインレベルの検証とプロビジョニングを実行します。`ignore_mx_check` オプションが有効になっている場合、MX レコードの検証はスキップされます (高度なルーティング設定の場合のみ推奨)。レスポンスには、設定に必要な DNS レコードを含む、作成されたドメインオブジェクトの詳細がすべて含まれます。",
        "tags": [
          "ドメイン"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDomainInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/v1/domains/{domain_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        }
      ],
      "get": {
        "summary": "ドメインを取得",
        "description": "特定のドメインを取得する",
        "tags": [
          "ドメイン"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "ドメインを更新",
        "description": "特定のドメインを更新します。",
        "tags": [
          "ドメイン"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDomainInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "ドメインを削除",
        "description": "特定のドメインを削除します。",
        "tags": [
          "ドメイン"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Domain deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/verify-records": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        }
      ],
      "get": {
        "summary": "ドメインレコードを確認する",
        "description": "特定のドメインの DNS レコードを検証します。",
        "tags": [
          "ドメイン"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "DNS records successfully verified",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Domain's DNS records have been verified."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/verify-smtp": {
      "get": {
        "summary": "ドメインのSMTPレコードを確認する",
        "description": "指定されたドメインの SMTP 関連の DNS レコードを検証します。",
        "operationId": "verifySmtpRecords",
        "tags": [
          "ドメイン"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "description": "検証する完全修飾ドメイン名（FQDN）",
            "schema": {
              "type": "string",
              "format": "hostname"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "SMTP records successfully verified",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "You have successfully configured and verified DNS records for outbound SMTP."
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/catch-all-passwords": {
      "post": {
        "summary": "ドメイン全体で共通するパスワードを作成する",
        "description": "ドメイン全体で共通するパスワードを作成します。パスワードが指定されていない場合は、安全なランダムパスワードが生成されます。",
        "tags": [
          "ドメイン"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "キャッチオールパスワードを作成するドメイン名"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "new_password": {
                    "type": "string",
                    "description": "ドメイン全体のキャッチオールパスワードとして使用する新しいカスタムパスワード。強力なパスワードを生成するには空白のままにしてください。"
                  },
                  "description": {
                    "type": "string",
                    "description": "整理目的のみの説明。"
                  }
                }
              },
              "example": {
                "new_password": "myCustomStrongPassword123!",
                "description": "Password for team-wide access"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created a catch-all password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of the created catch-all password"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the catch-all password"
                    }
                  },
                  "required": [
                    "id",
                    "description"
                  ]
                },
                "example": {
                  "id": "6841ec462bd583c73d0632dd",
                  "username": "*@quas.com",
                  "password": "6Yq14XhAUaupdZE",
                  "description": "foo bar"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "ドメイン全体のキャッチオールパスワードを一覧表示する",
        "description": "指定されたドメインに対して現在設定されているドメイン全体のキャッチオール パスワードのリストを返します。",
        "operationId": "listCatchAllPasswords",
        "tags": [
          "ドメイン"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "description": "キャッチオールパスワードをリストする完全修飾ドメイン名 (FQDN)",
            "schema": {
              "type": "string",
              "format": "hostname"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of domain-wide catch-all passwords",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier for the item",
                        "example": "6841ec442bd583c73d0632d0"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the item",
                        "example": "foo bar"
                      }
                    },
                    "required": [
                      "id",
                      "description"
                    ]
                  },
                  "example": [
                    {
                      "id": "6841ec442bd583c73d0632d0",
                      "description": ""
                    },
                    {
                      "id": "6841ec462bd583c73d0632dd",
                      "description": "foo bar"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/catch-all-passwords/{token_id}": {
      "delete": {
        "summary": "ドメイン全体のキャッチオールパスワードを削除する",
        "description": "指定されたトークン ID を使用して、ドメイン全体のキャッチオール パスワードを削除します。",
        "tags": [
          "ドメイン"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "キャッチオールパスワードに関連付けられたドメイン名"
          },
          {
            "name": "token_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "削除するドメイン全体のキャッチオールパスワードのトークンID"
          }
        ],
        "responses": {
          "200": {
            "description": "Catch-all password successfully removed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Catch-all password deleted successfully."
                    }
                  },
                  "example": {
                    "id": "6841ec442bd583c73d0632d0",
                    "description": ""
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/invites": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        }
      ],
      "get": {
        "summary": "ドメイン招待を承認",
        "description": "ドメインへの招待を承諾します。",
        "tags": [
          "招待"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain invite accepted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invite accepted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "post": {
        "summary": "ドメイン招待を作成",
        "description": ">[!IMPORTANT]\n>招待されたユーザーが、招待元の管理者が所属する他のドメインで既に承認済みのメンバーである場合、招待は自動的に承認され、メールは送信されません。",
        "tags": [
          "招待"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "ドメインメンバーリストに招待するメールアドレス"
                  },
                  "group": {
                    "type": "string",
                    "format": "string",
                    "description": "ユーザーをドメイン メンバーシップに追加するグループ (`\"admin\"` または `\"user\"` のいずれか)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain invite created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invite"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      },
      "delete": {
        "summary": "ドメイン招待を削除する",
        "description": "ドメインへの招待を削除します。",
        "tags": [
          "招待"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "ドメインメンバーリストから削除するメールアドレス"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain invite removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invite removed successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/members/{member_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        },
        {
          "$ref": "#/components/parameters/memberId"
        }
      ],
      "put": {
        "summary": "ドメインメンバーの更新",
        "description": "ドメイン メンバーを更新します。",
        "tags": [
          "メンバー"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "group": {
                    "required": true,
                    "type": "string",
                    "description": "ユーザーをドメイン メンバーシップに更新するグループ (`\"admin\"` または `\"user\"` のいずれか)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain member updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "ドメインメンバーを削除",
        "description": "ドメイン メンバーを削除します。",
        "tags": [
          "メンバー"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain member removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Member removed successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/aliases/{alias_id}/generate-password": {
      "post": {
        "summary": "エイリアスパスワードを生成する",
        "description": "エイリアスのパスワードを生成します。`emailed_instructions` が指定されていない場合、レスポンスには生成されたユーザー名とパスワードが含まれます。",
        "tags": [
          "エイリアス"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "完全修飾ドメイン名 (FQDN)"
          },
          {
            "name": "alias_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "エイリアスの一意の識別子"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateAliasPasswordInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Alias credentials returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string",
                      "example": "alias@yourdomain.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "some-generated-password"
                    }
                  },
                  "required": [
                    "username",
                    "password"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/aliases": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        }
      ],
      "get": {
        "summary": "ドメインエイリアスの一覧",
        "description": ">[!NOTE]\n>2024年11月1日より、「ドメイン一覧表示」および「ドメインエイリアス一覧表示」のAPIエンドポイントでは、1ページあたり最大結果数がデフォルトで「1000件」になります。この動作を早期に有効化したい場合は、エンドポイントクエリのURLに追加のクエリ文字列パラメータとして「?paginate=true」を渡してください。詳しくはページネーションをご覧ください。",
        "tags": [
          "エイリアス"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "名前、ラベル、受信者でドメイン内のエイリアスを検索します（正規表現をサポート）",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "ドメイン内のエイリアスを名前で検索（正規表現をサポート）",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipient",
            "in": "query",
            "description": "受信者によるドメイン内のエイリアスの検索（正規表現をサポート）",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "特定のフィールドで並べ替えます（逆順に並べ替えるには、先頭にハイフンを 1 つ付けます）。デフォルトは created_at です。",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "List of domain aliases",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Alias"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "post": {
        "summary": "新しいドメインエイリアスを作成する",
        "description": "特定のドメインの新しいエイリアスを作成します。",
        "tags": [
          "エイリアス"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AliasInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain alias created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alias"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/aliases/{alias_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        },
        {
          "$ref": "#/components/parameters/aliasId"
        }
      ],
      "get": {
        "summary": "ドメインエイリアスを取得",
        "description": "ドメインの特定のエイリアスを取得します。",
        "tags": [
          "エイリアス"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain alias retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alias"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "ドメインエイリアスの更新",
        "description": "ドメインの特定のエイリアスを更新します。",
        "tags": [
          "エイリアス"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AliasUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain alias updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alias"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          },
          "401": {
            "$ref": "#/components/responses/Error"
          },
          "403": {
            "$ref": "#/components/responses/Error"
          },
          "404": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "summary": "ドメインエイリアスを削除",
        "description": "ドメインの特定のエイリアスを削除します。",
        "tags": [
          "エイリアス"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain alias deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Alias deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/encrypt": {
      "post": {
        "summary": "TXTレコードを暗号化する",
        "description": "無料プランでもレコードの暗号化を無料でご利用いただけます。プライバシーは機能ではなく、製品のあらゆる側面に本質的に組み込まれているべきです。[プライバシーガイドのディスカッション](https://discuss.privacyguides.net/t/forward-email-email-provider/13370)や[GitHub Issues](https://github.com/forwardemail/forwardemail.net/issues/254)で多くのご要望をいただいたため、この機能を追加しました。",
        "tags": [
          "暗号化"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "text"
                ],
                "properties": {
                  "input": {
                    "required": true,
                    "type": "string",
                    "description": "有効な転送メールのプレーンテキストTXTレコード"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Text encrypted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "encrypted": {
                      "type": "string",
                      "description": "Encrypted text"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          },
          "401": {
            "$ref": "#/components/responses/Error"
          },
          "429": {
            "description": "Rate limit exceeded (50 requests for 'encrypt')",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "アカウント",
      "description": "アカウント管理エンドポイント"
    },
    {
      "name": "ログ",
      "description": "ログ管理エンドポイント"
    },
    {
      "name": "メール",
      "description": "メール管理エンドポイント"
    },
    {
      "name": "ドメイン",
      "description": "> [!TIP]\n> ドメイン名 <code>/v1/domains/:domain\\_name</code> をエンドポイントとするドメインエンドポイントは、ドメインID <code>:domain\\_id</code> と互換性があります。つまり、ドメインは <code>name</code> または <code>id</code> のいずれかの値で参照できます。"
    },
    {
      "name": "招待",
      "description": "ドメイン招待管理エンドポイント"
    },
    {
      "name": "メンバー",
      "description": "ドメインメンバー管理エンドポイント"
    },
    {
      "name": "エイリアス",
      "description": "ドメインエイリアス管理エンドポイント"
    },
    {
      "name": "暗号化",
      "description": "暗号化エンドポイント"
    },
    {
      "name": "連絡先",
      "description": "エイリアス連絡先管理エンドポイント (CardDAV)\n\n>[!NOTE]\n>他のAPIエンドポイントとは異なり、これらのエンドポイントでは、Basic認証ヘッダーとして、エイリアスのユーザー名と一致する「ユーザー名」と、エイリアスで生成されたパスワードと一致する「パスワード」が必要です。\n\n>[!TIP]\n>これらのエンドポイントは、vCardをサポートする連絡先管理のための完全なCRUD操作（連絡先の作成、取得、更新、削除など）を提供します。vCardコンテンツを直接提供することも、vCard形式に変換される個々の連絡先フィールドを提供することもできます。"
    },
    {
      "name": "カレンダー",
      "description": "エイリアスカレンダー管理エンドポイント (CalDAV)\n\n>[!NOTE]\n> 他のAPIエンドポイントとは異なり、これらのエンドポイントでは、Basic認証ヘッダーとして[認証](#description/authentication)「username」にエイリアスのユーザー名、そして「password」にエイリアスで生成されたパスワードを指定する必要があります。\n\n>[!TIP]\n> これらのエンドポイントは、タイムゾーンと色をサポートした完全なカレンダー管理機能を提供します。カレンダーの作成、取得、更新、削除などが含まれます。カレンダー名は必須ですが、色、タイムゾーン、説明などのその他のプロパティは任意です。"
    },
    {
      "name": "メッセージ",
      "description": "エイリアスメッセージ管理エンドポイント (IMAP/POP3)\n\n>[!NOTE]\n> 他のAPIエンドポイントとは異なり、これらのエンドポイントでは、Basic認証ヘッダーとして[認証](#description/authentication)「username」にエイリアスのユーザー名、そして「password」にエイリアスで生成されたパスワードを指定する必要があります。\n\n>[!TIP]\n> これらのエンドポイントは、高度な検索機能を備えた包括的なメッセージ管理を提供します。フォルダ、フラグ、コンテンツ、ヘッダー、日付範囲、サイズなどで検索できます。メッセージは標準のNodemailer形式で作成でき、フォルダ間の移動やフラグ管理もサポートされています。\n\nドメインの設定手順に従っていることをご確認ください。\n設定手順については、FAQセクション[IMAPでのメール受信はサポートされていますか？](/faq#do-you-support-receiving-email-with-imap)をご覧ください。"
    },
    {
      "name": "フォルダ",
      "description": "エイリアスフォルダ管理エンドポイント (IMAP/POP3)\n\n>[!TIP]\n> フォルダのパス <code>/v1/folders/:path</code> をエンドポイントとするフォルダエンドポイントは、フォルダの ID <code>:id</code> と互換性があります。つまり、フォルダは <code>path</code> 値または <code>id</code> 値のどちらでも参照できます。\n\n>[!NOTE]\n> 他の API エンドポイントとは異なり、これらのエンドポイントでは [認証](#description/authentication) として、エイリアスのユーザー名と同じ「username」と、エイリアスで生成されたパスワードと同じ「password」を Basic 認証ヘッダーとして設定する必要があります。\n\n>[!TIP]\n> これらのエンドポイントは、フォルダの作成、名前変更、削除など、完全なフォルダ管理機能を提供します。フォルダー パスには親フォルダー (例: 'INBOX/サブフォルダー') を含めることができ、親フォルダーが存在しない場合は自動的に作成されます。"
    }
  ]
}