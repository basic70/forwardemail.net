{
  "openapi": "3.0.0",
  "info": {
    "title": "Forward Email API",
    "description": "<img src=\"/img/articles/email-api.webp\" alt=\"\"/><br />Bienvenue dans la documentation complète de l'API de transfert d'e-mails. Cette API vous permet de gérer le transfert d'e-mails, les domaines, les alias, les e-mails sortants et bien plus encore, par programmation.\n\n## Fonctionnalités clés\n* **Gestion des domaines :** Créez, récupérez, mettez à jour, supprimez et vérifiez des domaines.\n* **Gestion des alias :** Gérez les alias d'e-mails, y compris leur création, leurs mises à jour et la gestion des destinataires.\n* **SMTP sortant :** Envoyez des e-mails via SMTP, gérez les limites et suivez les e-mails envoyés.\n* **Compte et journaux :** Gérez les détails de votre compte et téléchargez les journaux d'activité.\n* **Sécurité :** Chiffrez les enregistrements TXT et gérez les membres/invitations du domaine.\n* **Contacts CardDAV :** Opérations CRUD complètes pour la gestion des contacts avec prise en charge de vCard.\n* **Calendriers CalDAV :** Gestion complète des calendriers avec prise en charge des fuseaux horaires et des couleurs.\n* **Messages IMAP/POP3** : Gestion complète des messages avec fonctions de recherche avancées.\n* **Dossiers IMAP/POP3** : Gestion complète des dossiers, y compris la création, le changement de nom et la suppression.\n\n## Authentification\nLa plupart des terminaux nécessitent une authentification à l'aide de votre **Clé API**. Indiquez la clé API comme « nom d'utilisateur » dans l'en-tête d'authentification de base, en laissant le mot de passe vide.\n\n```http\nAutorisation : Basic QVBJX1RPS0VOOg==\n```\n(Remplacez « API_TOKEN » par votre clé réelle avant l'encodage Base64)\n\nLes terminaux liés aux **Contacts, Calendriers, Messages et Dossiers Alias** nécessitent un nom d'utilisateur et un mot de passe d'alias générés pour l'authentification de base.\n\n## Erreurs\nL'API utilise des codes d'état HTTP standard pour indiquer la réussite ou l'échec. Les réponses d'erreur incluent un corps JSON avec un champ « message » détaillant l'erreur.\n\n| Code d'état | Signification | |-------------|---------------------|\n| 200 | OK |\n| 400 | Requête incorrecte |\n| 401 | Non autorisé |\n| 403 | Interdit |\n| 404 | Introuvable |\n| 409 | Conflit |\n| 412 | Échec de la précondition |\n| 429 | Trop de requêtes |\n| 500 | Erreur interne du serveur |\n| 501 | Non implémenté |\n| 502 | Passerelle incorrecte |\n| 503 | Service indisponible |\n| 504 | Délai d'attente de la passerelle dépassé |\n\n*Si vous rencontrez une erreur « 5xx », veuillez contacter [api@forwardemail.net](mailto:api@forwardemail.net).*\n\n## Localisation\nLes réponses de l'API sont traduites en fonction des paramètres régionaux détectés par l'utilisateur ou de l'en-tête « Accept-Language ». Plus de 25 langues sont prises en charge.\n\n## Pagination\nLes points de terminaison renvoyant des listes prennent en charge la pagination via des paramètres de requête.\n\n| Paramètre | Type | Facultatif | Description | Par défaut | Contraintes |\n|--------------|---------|----------|-----------------------------------------------------------------------------|---------|--------------------|\n| `page` | Entier | Oui | Numéro de page à récupérer. | 1 | `>= 1` |\n| `limit` | Entier | Oui | Nombre de résultats par page. | 10 | `>= 1`, `<= 50` |\n| `pagination` | Booléen | Oui | Acceptation de la pagination (requise avant le 1er novembre 2024 pour certains points de terminaison). | false | |\n\n**En-têtes de pagination :**\n* `X-Page-Count` : Nombre total de pages. * `X-Page-Current` : Numéro de la page actuelle.\n* `X-Page-Size` : Nombre d'éléments sur la page actuelle.\n* `X-Item-Count` : Nombre total d'éléments sur toutes les pages.\n* `Link` : Liens de navigation (précédent, suivant, premier, dernier).\n\n**Exemple :**\n```bash\ncurl \"https://api.forwardemail.net/v1/domains?page=2&limit=20&pagination=true\" \\\n-u API_TOKEN:\n```\n\n## Bibliothèques recommandées\n* **Ruby :** [Faraday](https://github.com/lostisland/faraday)\n* **Python :** [requests](https://requests.readthedocs.io/en/latest/)\n* **Java :** [OkHttp](https://square.github.io/okhttp/)\n* **PHP :** [Guzzle](https://docs.guzzlephp.org/en/stable/)\n* **JavaScript/Node.js :** [superagent](https://github.com/visionmedia/superagent) (Géré par Forward Email)\n* **Go :** `net/http`\n* **.NET :** [RestSharp](https://restsharp.dev/)",
    "version": "1.0.0",
    "contact": {
      "name": "Forward Email Support",
      "url": "https://forwardemail.net",
      "email": "api@forwardemail.net"
    }
  },
  "servers": [
    {
      "url": "https://api.forwardemail.net",
      "description": "Serveur API de transfert de courrier électronique"
    }
  ],
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "http",
        "scheme": "basic",
        "description": "\nUtilisez votre clé API comme **nom d'utilisateur** pour l'authentification de base. Laissez le champ Mot de passe vide.\n\n**Exemple** :\nSi votre clé API est « YOUR_API_KEY », la valeur codée en Base64 de l'en-tête « Authorization » sera « echo -n \"YOUR_API_KEY:\" | base64 ».\n\n```http\nAuthorization: Basic WU9VUl9BUElfS0VZOg==\n```\n"
      },
      "AliasAuth": {
        "type": "http",
        "scheme": "basic",
        "description": "\nUtilisez le **nom d'utilisateur et le mot de passe d'alias** générés pour l'authentification de base. Ceci s'applique aux terminaux sous :\n* Contacts d'alias (CardDAV)\n* Calendriers d'alias (CalDAV)\n* Messages d'alias (IMAP/POP3)\n* Dossiers d'alias (IMAP/POP3)\n\nExemple :\nSi le nom d'utilisateur d'alias est « alias@domain.com » et le mot de passe « MOT DE PASSE GÉNÉRÉ », la valeur codée en Base64 sera « echo -n \"alias@domain.com:MOT DE PASSE GÉNÉRÉ\" | base64 ».\n\n```http\nAuthorization: Basic YWxpYXNAZG9tYWluLmNvbTpHRU5FUkFURURfUEFTU1dPUkQ=\n```\n"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "type": "string",
            "description": "Message d'erreur"
          }
        }
      },
      "Account": {
        "type": "object",
        "required": [
          "id",
          "email",
          "plan",
          "object"
        ],
        "properties": {
          "sessions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "has_newsletter": {
            "type": "boolean"
          },
          "plan": {
            "type": "string",
            "example": "free"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "max_quota_per_alias": {
            "type": "integer",
            "format": "int64"
          },
          "full_email": {
            "type": "string",
            "format": "email"
          },
          "display_name": {
            "type": "string"
          },
          "otp_enabled": {
            "type": "boolean"
          },
          "last_locale": {
            "type": "string"
          },
          "address_country": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "example": "user"
          },
          "locale": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "address_html": {
            "type": "string"
          },
          "api_token": {
            "type": "string",
            "format": "uuid"
          }
        },
        "example": {
          "sessions": [],
          "has_newsletter": true,
          "plan": "free",
          "email": "test1@test1.com",
          "max_quota_per_alias": 10737418240,
          "full_email": "test1@test1.com",
          "display_name": "test1@test1.com",
          "otp_enabled": false,
          "last_locale": "en",
          "address_country": "None",
          "id": "683fb2e81cc5d449a0d4cd9d",
          "object": "user",
          "locale": "en",
          "created_at": "2025-06-04T02:43:52.646Z",
          "updated_at": "2025-06-04T02:43:55.350Z",
          "address_html": "",
          "api_token": "15ac16ae21784aa2cb4d5508"
        }
      },
      "Contact": {
        "type": "object",
        "required": [
          "id",
          "uid",
          "full_name",
          "content",
          "etag",
          "is_group",
          "emails",
          "phone_numbers",
          "created_at",
          "updated_at",
          "object"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "ID de contact (contact_id de CardDAV)"
          },
          "uid": {
            "type": "string",
            "description": "Contacter UID"
          },
          "full_name": {
            "type": "string",
            "description": "Nom complet du contact"
          },
          "content": {
            "type": "string",
            "description": "Contenu de la vCard"
          },
          "etag": {
            "type": "string",
            "description": "ETag pour le contrôle de version"
          },
          "is_group": {
            "type": "boolean",
            "description": "Si le contact est un groupe"
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string",
                  "format": "email"
                },
                "type": {
                  "type": "string",
                  "default": "INTERNET"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "Tableau d'adresses e-mail"
          },
          "phone_numbers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "default": "CELL"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "Tableau de numéros de téléphone"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "enum": [
              "contact"
            ]
          }
        },
        "example": {
          "id": "contact123",
          "uid": "uid123",
          "full_name": "John Doe",
          "content": "BEGIN:VCARD\\nVERSION:3.0\\nUID:uid123\\nFN:John Doe\\nEMAIL;TYPE=INTERNET:john@example.com\\nEND:VCARD",
          "etag": "etag123",
          "is_group": false,
          "emails": [
            {
              "value": "john@example.com",
              "type": "INTERNET"
            }
          ],
          "phone_numbers": [
            {
              "value": "+1234567890",
              "type": "CELL"
            }
          ],
          "created_at": "2025-01-01T00:00:00.000Z",
          "updated_at": "2025-01-01T00:00:00.000Z",
          "object": "contact"
        }
      },
      "ContactInput": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "Contenu de la vCard (s'il n'est pas fourni, sera généré à partir d'autres champs)"
          },
          "full_name": {
            "type": "string",
            "description": "Nom complet du contact"
          },
          "contact_id": {
            "type": "string",
            "description": "ID de contact personnalisé (s'il n'est pas fourni, il sera généré automatiquement)"
          },
          "uid": {
            "type": "string",
            "description": "UID de contact (s'il n'est pas fourni, il sera généré automatiquement)"
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string",
                  "format": "email"
                },
                "type": {
                  "type": "string",
                  "default": "INTERNET"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "Tableau d'adresses e-mail"
          },
          "phone_numbers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "default": "CELL"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "Tableau de numéros de téléphone"
          },
          "phones": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "default": "CELL"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "Tableau de numéros de téléphone (alias pour phone_numbers)"
          },
          "addresses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "street": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "postalCode": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              }
            },
            "description": "Tableau d'adresses"
          },
          "is_group": {
            "type": "boolean",
            "description": "Si le contact est un groupe"
          }
        }
      },
      "ContactUpdateInput": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "Contenu de la vCard"
          },
          "full_name": {
            "type": "string",
            "description": "Nom complet du contact"
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string",
                  "format": "email"
                },
                "type": {
                  "type": "string",
                  "default": "INTERNET"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "Tableau d'adresses e-mail"
          },
          "phone_numbers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "default": "CELL"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "Tableau de numéros de téléphone"
          },
          "phones": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "default": "CELL"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "Tableau de numéros de téléphone (alias pour phone_numbers)"
          },
          "addresses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "street": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "postalCode": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              }
            },
            "description": "Tableau d'adresses"
          },
          "is_group": {
            "type": "boolean",
            "description": "Si le contact est un groupe"
          }
        }
      },
      "Calendar": {
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "color",
          "timezone",
          "order",
          "created_at",
          "updated_at",
          "object"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "ID du calendrier (calendarId de CalDAV)"
          },
          "name": {
            "type": "string",
            "description": "Nom du calendrier"
          },
          "description": {
            "type": "string",
            "description": "Description du calendrier"
          },
          "color": {
            "type": "string",
            "description": "Couleur du calendrier (format hexadécimal)"
          },
          "timezone": {
            "type": "string",
            "description": "Fuseau horaire du calendrier"
          },
          "order": {
            "type": "integer",
            "description": "Ordre d'affichage du calendrier"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "enum": [
              "calendar"
            ]
          }
        },
        "example": {
          "id": "calendar123",
          "name": "Personal Calendar",
          "description": "My personal calendar",
          "color": "#ff0000",
          "timezone": "America/New_York",
          "order": 0,
          "created_at": "2025-01-01T00:00:00.000Z",
          "updated_at": "2025-01-01T00:00:00.000Z",
          "object": "calendar"
        }
      },
      "CalendarInput": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Nom du calendrier"
          },
          "calendar_id": {
            "type": "string",
            "description": "ID de calendrier personnalisé (s'il n'est pas fourni, il sera généré automatiquement)"
          },
          "description": {
            "type": "string",
            "description": "Description du calendrier"
          },
          "color": {
            "type": "string",
            "description": "Couleur du calendrier (le format hexadécimal, s'il n'est pas fourni, sera généré automatiquement)"
          },
          "timezone": {
            "type": "string",
            "description": "Fuseau horaire du calendrier (par défaut, le fuseau horaire de l'utilisateur ou UTC)"
          },
          "order": {
            "type": "integer",
            "description": "Ordre d'affichage du calendrier (par défaut à 0)"
          }
        }
      },
      "CalendarUpdateInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nom du calendrier"
          },
          "description": {
            "type": "string",
            "description": "Description du calendrier"
          },
          "color": {
            "type": "string",
            "description": "Couleur du calendrier (format hexadécimal)"
          },
          "timezone": {
            "type": "string",
            "description": "Fuseau horaire du calendrier"
          },
          "order": {
            "type": "integer",
            "description": "Ordre d'affichage du calendrier"
          }
        }
      },
      "Folder": {
        "type": "object",
        "required": [
          "id",
          "path",
          "name",
          "parent",
          "uid_validity",
          "uid_next",
          "modify_index",
          "subscribed",
          "flags",
          "retention",
          "special_use",
          "created_at",
          "updated_at",
          "object"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "ID du dossier"
          },
          "path": {
            "type": "string",
            "description": "Chemin d'accès complet au dossier"
          },
          "name": {
            "type": "string",
            "description": "Nom du dossier (dernière partie du chemin)"
          },
          "parent": {
            "type": "string",
            "nullable": true,
            "description": "Chemin du dossier parent"
          },
          "uid_validity": {
            "type": "integer",
            "description": "Validité de l'UID IMAP"
          },
          "uid_next": {
            "type": "integer",
            "description": "Valeur UID suivante"
          },
          "modify_index": {
            "type": "integer",
            "description": "Indice de modification"
          },
          "subscribed": {
            "type": "boolean",
            "description": "Si le dossier est abonné"
          },
          "flags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Drapeaux de dossier"
          },
          "retention": {
            "type": "integer",
            "nullable": true,
            "description": "Durée de conservation des messages"
          },
          "special_use": {
            "type": "string",
            "nullable": true,
            "description": "Désignation d'usage spécial"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "enum": [
              "folder"
            ]
          }
        },
        "example": {
          "id": "folder123",
          "path": "INBOX/Subfolder",
          "name": "Subfolder",
          "parent": "INBOX",
          "uid_validity": 123456,
          "uid_next": 1,
          "modify_index": 1,
          "subscribed": true,
          "flags": [],
          "retention": null,
          "special_use": null,
          "created_at": "2025-01-01T00:00:00.000Z",
          "updated_at": "2025-01-01T00:00:00.000Z",
          "object": "folder"
        }
      },
      "FolderInput": {
        "type": "object",
        "required": [
          "path"
        ],
        "properties": {
          "path": {
            "type": "string",
            "description": "Chemin/nom du dossier"
          }
        }
      },
      "FolderUpdateInput": {
        "type": "object",
        "required": [
          "path"
        ],
        "properties": {
          "path": {
            "type": "string",
            "description": "Nouveau chemin/nom du dossier"
          }
        }
      },
      "Message": {
        "type": "object",
        "required": [
          "id",
          "root_id",
          "folder_id",
          "folder_path",
          "thread_id",
          "header_message_id",
          "is_unread",
          "is_flagged",
          "is_deleted",
          "is_draft",
          "is_junk",
          "is_copied",
          "is_searchable",
          "is_expired",
          "has_attachment",
          "retention_date",
          "internal_date",
          "header_date",
          "subject",
          "flags",
          "size",
          "uid",
          "modseq",
          "transaction",
          "remote_address",
          "object"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "ID du message"
          },
          "root_id": {
            "type": "string",
            "description": "ID de message racine pour le threading"
          },
          "folder_id": {
            "type": "string",
            "description": "ID du dossier contenant le message"
          },
          "folder_path": {
            "type": "string",
            "description": "Chemin du dossier contenant le message"
          },
          "thread_id": {
            "type": "string",
            "description": "ID de fil de discussion pour le regroupement des conversations"
          },
          "header_message_id": {
            "type": "string",
            "description": "Valeur de l'en-tête Message-ID"
          },
          "is_unread": {
            "type": "boolean",
            "description": "Si le message n'est pas lu"
          },
          "is_flagged": {
            "type": "boolean",
            "description": "Si le message est signalé"
          },
          "is_deleted": {
            "type": "boolean",
            "description": "Si le message est supprimé"
          },
          "is_draft": {
            "type": "boolean",
            "description": "Si le message est un brouillon"
          },
          "is_junk": {
            "type": "boolean",
            "description": "Si le message est indésirable/spam"
          },
          "is_copied": {
            "type": "boolean",
            "description": "Si le message est copié"
          },
          "is_searchable": {
            "type": "boolean",
            "description": "Si le message est consultable"
          },
          "is_expired": {
            "type": "boolean",
            "description": "Si le message a expiré"
          },
          "has_attachment": {
            "type": "boolean",
            "description": "Si le message contient des pièces jointes"
          },
          "retention_date": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Date de conservation des messages"
          },
          "internal_date": {
            "type": "string",
            "format": "date-time",
            "description": "Date interne (IMAP)"
          },
          "header_date": {
            "type": "string",
            "format": "date-time",
            "description": "Date des en-têtes de message"
          },
          "subject": {
            "type": "string",
            "description": "Objet du message"
          },
          "flags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Drapeaux IMAP"
          },
          "size": {
            "type": "integer",
            "description": "Taille du message en octets"
          },
          "uid": {
            "type": "integer",
            "description": "UID IMAP"
          },
          "modseq": {
            "type": "integer",
            "description": "Séquence de modification"
          },
          "transaction": {
            "type": "string",
            "description": "Type de transaction"
          },
          "remote_address": {
            "type": "string",
            "description": "Adresse IP distante"
          },
          "nodemailer": {
            "type": "object",
            "description": "Objet de message analysé (inclus par défaut, définissez ?nodemailer=false pour exclure)"
          },
          "raw": {
            "type": "string",
            "description": "Contenu du message brut (inclus par défaut, définissez ?raw=false pour exclure)"
          },
          "object": {
            "type": "string",
            "enum": [
              "message"
            ]
          }
        },
        "example": {
          "id": "message123",
          "root_id": "root123",
          "folder_id": "folder123",
          "folder_path": "INBOX",
          "thread_id": "thread123",
          "header_message_id": "<message123@example.com>",
          "is_unread": true,
          "is_flagged": false,
          "is_deleted": false,
          "is_draft": false,
          "is_junk": false,
          "is_copied": false,
          "is_searchable": true,
          "is_expired": false,
          "has_attachment": false,
          "retention_date": null,
          "internal_date": "2025-01-01T00:00:00.000Z",
          "header_date": "2025-01-01T00:00:00.000Z",
          "subject": "Test Message",
          "flags": [
            "\\Seen"
          ],
          "size": 1024,
          "uid": 1,
          "modseq": 1,
          "transaction": "API",
          "remote_address": "127.0.0.1",
          "object": "message"
        }
      },
      "MessageInput": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "email",
            "description": "Adresse e-mail de l'expéditeur"
          },
          "to": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "Adresses e-mail des destinataires"
          },
          "cc": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "Adresses e-mail des destinataires en copie conforme"
          },
          "bcc": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "Adresses e-mail des destinataires BCC"
          },
          "subject": {
            "type": "string",
            "description": "Objet du message"
          },
          "text": {
            "type": "string",
            "description": "Contenu en texte brut"
          },
          "html": {
            "type": "string",
            "description": "Contenu HTML"
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Pièces jointes aux messages (format Nodemailer)"
          },
          "folder": {
            "type": "string",
            "description": "Dossier cible (par défaut, BOÎTE DE RÉCEPTION)"
          },
          "flags": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "description": "Indicateurs IMAP à définir sur le message"
          }
        }
      },
      "MessageUpdateInput": {
        "type": "object",
        "properties": {
          "flags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Indicateurs IMAP à définir sur le message"
          },
          "folder": {
            "type": "string",
            "description": "Déplacer le message vers ce dossier"
          }
        }
      },
      "Email": {
        "type": "object",
        "required": [
          "id",
          "object",
          "status",
          "alias",
          "domain",
          "user"
        ],
        "properties": {
          "is_redacted": {
            "type": "boolean"
          },
          "hard_bounces": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "soft_bounces": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "is_bounce": {
            "type": "boolean"
          },
          "alias": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "example": "sent"
          },
          "is_locked": {
            "type": "boolean"
          },
          "envelope": {
            "type": "object",
            "properties": {
              "from": {
                "type": "string",
                "format": "email"
              },
              "to": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            }
          },
          "messageId": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "subject": {
            "type": "string"
          },
          "accepted": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "example": "email"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "link": {
            "type": "string",
            "format": "uri"
          }
        },
        "example": {
          "is_redacted": true,
          "hard_bounces": [],
          "soft_bounces": [],
          "is_bounce": false,
          "alias": "67a180fxxxxxxxe46a3f0edf",
          "domain": "5efae85dxxxxxxxf4bb53c7a",
          "user": "5efabd3907xxxxxxx12890b8",
          "status": "sent",
          "is_locked": false,
          "envelope": {
            "from": "test@test.com",
            "to": [
              "test@test1.com"
            ]
          },
          "messageId": "1a04fee3-5230-4a85-9111-a2c376835885@shaunwarman.com",
          "date": "2025-06-04T03:32:19.000Z",
          "subject": "testing",
          "accepted": [
            "test@test1.com"
          ],
          "id": "683fbe4d5baef1b583a1xxxx",
          "object": "email",
          "created_at": "2025-06-04T03:32:29.138Z",
          "updated_at": "2025-06-04T03:32:33.847Z",
          "link": "https://forwardemail.net/my-account/emails/683fbe4d5baef1b583a11e54"
        }
      },
      "EmailList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Email"
        }
      },
      "SMTP": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "email",
            "description": "L'adresse e-mail de l'expéditeur (doit exister en tant qu'alias du domaine)."
          },
          "to": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "Liste séparée par des virgules ou tableau de destinataires pour l'en-tête « À »."
          },
          "cc": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "Liste séparée par des virgules ou tableau de destinataires pour l'en-tête « Cc »."
          },
          "bcc": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "Liste séparée par des virgules ou tableau de destinataires pour l'en-tête « Cci »."
          },
          "subject": {
            "type": "string",
            "description": "L'objet de l'e-mail."
          },
          "text": {
            "type": "string",
            "description": "La version en texte brut du message."
          },
          "html": {
            "type": "string",
            "description": "La version HTML du message."
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Un tableau d'objets de pièces jointes (voir les champs communs de Nodemailer)."
          },
          "sender": {
            "type": "string",
            "format": "email",
            "description": "L'adresse e-mail pour l'en-tête « Expéditeur »."
          },
          "replyTo": {
            "type": "string",
            "format": "email",
            "description": "L'adresse e-mail pour l'en-tête « Répondre à »."
          },
          "inReplyTo": {
            "type": "string",
            "description": "L'ID du message auquel le message répond."
          },
          "references": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "description": "Liste séparée par des espaces ou tableau d'ID de message."
          },
          "attachDataUrls": {
            "type": "boolean",
            "description": "Si vrai, convertit les données : images du contenu HTML en pièces jointes intégrées."
          },
          "watchHtml": {
            "type": "string",
            "description": "Version HTML spécifique du message pour Apple Watch."
          },
          "amp": {
            "type": "string",
            "description": "Version HTML spécifique à AMP4EMAIL du message."
          },
          "icalEvent": {
            "type": "object",
            "description": "Un événement iCalendar comme contenu de message alternatif."
          },
          "alternatives": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Un éventail de contenus de messages alternatifs."
          },
          "encoding": {
            "type": "string",
            "description": "Codage pour le texte et les chaînes HTML (par exemple, « utf-8 », « hex », « base64 »)."
          },
          "raw": {
            "type": "string",
            "description": "Message formaté RFC822 généré sur mesure (au lieu d'utiliser la génération Nodemailer)."
          },
          "textEncoding": {
            "type": "string",
            "enum": [
              "quoted-printable",
              "base64"
            ],
            "description": "L'encodage est forcé d'être utilisé pour les valeurs de texte."
          },
          "priority": {
            "type": "string",
            "enum": [
              "high",
              "normal",
              "low"
            ],
            "description": "Niveau de priorité pour l'e-mail."
          },
          "headers": {
            "oneOf": [
              {
                "type": "object",
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            ],
            "description": "Objet ou tableau de champs d'en-tête supplémentaires."
          },
          "messageId": {
            "type": "string",
            "description": "ID de message facultatif pour l'en-tête « ID de message »."
          },
          "date": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "description": "En-tête de date facultatif. Ne peut pas être postérieur de plus de 30 jours."
          },
          "list": {
            "type": "object",
            "description": "Objet facultatif des en-têtes List-*."
          }
        }
      },
      "Domain": {
        "type": "object",
        "properties": {
          "has_newsletter": {
            "type": "boolean"
          },
          "ignore_mx_check": {
            "type": "boolean"
          },
          "retention_days": {
            "type": "integer"
          },
          "has_regex": {
            "type": "boolean"
          },
          "has_catchall": {
            "type": "boolean"
          },
          "allowlist": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "denylist": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "restricted_alias_names": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "has_adult_content_protection": {
            "type": "boolean"
          },
          "has_phishing_protection": {
            "type": "boolean"
          },
          "has_executable_protection": {
            "type": "boolean"
          },
          "has_virus_protection": {
            "type": "boolean"
          },
          "is_catchall_regex_disabled": {
            "type": "boolean"
          },
          "has_smtp": {
            "type": "boolean"
          },
          "is_smtp_suspended": {
            "type": "boolean"
          },
          "plan": {
            "type": "string"
          },
          "max_recipients_per_alias": {
            "type": "integer"
          },
          "smtp_port": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "has_mx_record": {
            "type": "boolean"
          },
          "has_txt_record": {
            "type": "boolean"
          },
          "has_dkim_record": {
            "type": "boolean"
          },
          "has_return_path_record": {
            "type": "boolean"
          },
          "has_dmarc_record": {
            "type": "boolean"
          },
          "has_recipient_verification": {
            "type": "boolean"
          },
          "has_custom_verification": {
            "type": "boolean"
          },
          "verification_record": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "enum": [
              "domain"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "storage_used": {
            "type": "integer"
          },
          "storage_used_by_aliases": {
            "type": "integer"
          },
          "storage_quota": {
            "type": "integer"
          },
          "smtp_dns_records": {
            "type": "object",
            "properties": {
              "dkim": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              },
              "return_path": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              },
              "dmarc": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "link": {
            "type": "string",
            "format": "uri"
          }
        },
        "example": [
          {
            "has_newsletter": false,
            "ignore_mx_check": false,
            "retention_days": 0,
            "has_regex": false,
            "has_catchall": true,
            "allowlist": [],
            "denylist": [],
            "restricted_alias_names": [],
            "has_adult_content_protection": true,
            "has_phishing_protection": true,
            "has_executable_protection": true,
            "has_virus_protection": true,
            "is_catchall_regex_disabled": false,
            "has_smtp": false,
            "is_smtp_suspended": false,
            "plan": "team",
            "max_recipients_per_alias": 10,
            "smtp_port": "25",
            "name": "test.com",
            "has_mx_record": false,
            "has_txt_record": false,
            "has_dkim_record": false,
            "has_return_path_record": false,
            "has_dmarc_record": false,
            "has_recipient_verification": false,
            "has_custom_verification": false,
            "verification_record": "kcjg6vrO8Q",
            "id": "683f1172c4bad2524410b857",
            "object": "domain",
            "created_at": "2025-06-03T15:14:59.000Z",
            "updated_at": "2025-06-03T15:14:59.254Z",
            "storage_used": 0,
            "storage_used_by_aliases": 0,
            "storage_quota": 10737418240,
            "smtp_dns_records": {
              "dkim": {
                "name": "fe-ebf3212716._domainkey",
                "value": "v=DKIM1; k=rsa; p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCcG+YBDPhyH8bLmyflmU9w1klYDeWpEufIlVqyWqly9lC+J/ntkKn4gum28EeE6vR+55x4JFCR8qSaw0YO1eCRwBgpFB0kKzbELHh2i2TKKwrqB3gPLXp4q4lbcGX2eD6fPCRwckTHqmiOzMhX8GD60zVlEvabok4LJ1i/BOyh6wIDAQAB;"
              },
              "return_path": {
                "name": "fe-bounces",
                "value": "forwardemail.net"
              },
              "dmarc": {
                "name": "_dmarc",
                "value": "v=DMARC1; p=reject; pct=100; rua=mailto:dmarc-683f1172c4bad2524410b857@localhost;"
              }
            },
            "link": "http://localhost:3000/my-account/domains/test.com"
          }
        ]
      },
      "CreateDomainInput": {
        "type": "object",
        "required": [
          "domain"
        ],
        "properties": {
          "domain": {
            "type": "string",
            "description": "Nom de domaine complet (FQDN) ou adresse IP"
          },
          "team_domain": {
            "type": "string",
            "nullable": true,
            "description": "Affecter à la même équipe depuis un autre domaine ; peut être un identifiant de domaine ou un nom de domaine complet. Utilisez « Aucun » pour désactiver explicitement."
          },
          "plan": {
            "type": "string",
            "enum": [
              "free",
              "enhanced_protection",
              "team"
            ],
            "description": "Type de forfait (par défaut « gratuit » ou le forfait payant actuel de l'utilisateur)"
          },
          "catchall": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "type": "string",
                "description": "Liste délimitée d'adresses e-mail (séparées par une virgule, un espace ou une nouvelle ligne)"
              }
            ],
            "description": "Créer un alias fourre-tout par défaut (la valeur par défaut est true)"
          },
          "has_adult_content_protection": {
            "type": "boolean",
            "description": "Activer la protection du contenu pour adultes de Spam Scanner"
          },
          "has_phishing_protection": {
            "type": "boolean",
            "description": "Activer la protection anti-hameçonnage de Spam Scanner"
          },
          "has_executable_protection": {
            "type": "boolean",
            "description": "Activer la protection exécutable du scanner anti-spam"
          },
          "has_virus_protection": {
            "type": "boolean",
            "description": "Activer la protection antivirus Spam Scanner"
          },
          "has_recipient_verification": {
            "type": "boolean",
            "description": "Exiger que les destinataires d'alias cliquent sur le lien de vérification de l'e-mail"
          },
          "ignore_mx_check": {
            "type": "boolean",
            "description": "Ignorer la vérification des enregistrements MX pour les configurations avancées de routage du courrier"
          },
          "retention_days": {
            "type": "integer",
            "minimum": 0,
            "maximum": 30,
            "description": "Nombre de jours de conservation des journaux SMTP sortants (0–30, par défaut : 0)"
          },
          "bounce_webhook": {
            "oneOf": [
              {
                "type": "string",
                "format": "uri",
                "description": "URL du webhook pour recevoir les événements de rebond"
              },
              {
                "type": "boolean",
                "enum": [
                  false
                ],
                "description": "Désactiver le webhook de rebond"
              }
            ]
          },
          "max_quota_per_alias": {
            "type": "string",
            "description": "Quota de stockage maximal par alias (par exemple « 1 Go »)"
          }
        }
      },
      "UpdateDomainInput": {
        "type": "object",
        "properties": {
          "smtp_port": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ],
            "description": "Port personnalisé à configurer pour le transfert SMTP (la valeur par défaut est « 25 »)"
          },
          "has_adult_content_protection": {
            "type": "boolean",
            "description": "S'il faut activer la protection du contenu pour adultes de Spam Scanner sur ce domaine"
          },
          "has_phishing_protection": {
            "type": "boolean",
            "description": "S'il faut activer la protection anti-hameçonnage Spam Scanner sur ce domaine"
          },
          "has_executable_protection": {
            "type": "boolean",
            "description": "S'il faut activer la protection exécutable de Spam Scanner sur ce domaine"
          },
          "has_virus_protection": {
            "type": "boolean",
            "description": "S'il faut activer la protection antivirus Spam Scanner sur ce domaine"
          },
          "has_recipient_verification": {
            "type": "boolean",
            "description": "Valeur par défaut du domaine global pour savoir s'il faut exiger des destinataires d'alias qu'ils cliquent sur un lien de vérification de courrier électronique pour que les courriers électroniques soient transmis"
          },
          "ignore_mx_check": {
            "type": "boolean",
            "description": "S'il faut ignorer la vérification de l'enregistrement MX sur le domaine pour vérification (principalement pour les configurations de routage MX avancées)"
          },
          "retention_days": {
            "type": "integer",
            "minimum": 0,
            "maximum": 30,
            "description": "Nombre de jours de stockage des e-mails SMTP sortants (0 = purger immédiatement)"
          },
          "bounce_webhook": {
            "oneOf": [
              {
                "type": "string",
                "format": "uri"
              },
              {
                "type": "boolean",
                "enum": [
                  false
                ]
              }
            ],
            "description": "URL du webhook pour recevoir des notifications de rebond ou false pour désactiver"
          },
          "max_quota_per_alias": {
            "type": "string",
            "description": "Quota de stockage par alias (par exemple « 1 Go », analysé en octets)"
          }
        }
      },
      "Alias": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email"
              },
              "display_name": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "email",
              "display_name",
              "id"
            ]
          },
          "domain": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "id"
            ]
          },
          "name": {
            "type": "string"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "is_enabled": {
            "type": "boolean"
          },
          "has_recipient_verification": {
            "type": "boolean"
          },
          "verified_recipients": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "pending_recipients": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "recipients": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "enum": [
              "alias"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "storage_location": {
            "type": "string"
          },
          "has_imap": {
            "type": "boolean"
          }
        },
        "required": [
          "user",
          "domain",
          "name",
          "labels",
          "is_enabled",
          "has_recipient_verification",
          "verified_recipients",
          "pending_recipients",
          "recipients",
          "id",
          "object",
          "created_at",
          "updated_at",
          "storage_location",
          "has_imap"
        ],
        "example": {
          "user": {
            "email": "test@test.com",
            "display_name": "test@test.com",
            "id": "5efabd39xxxxxxx4512890b8"
          },
          "domain": {
            "name": "mailsire.com",
            "id": "5e3c0550xxxxxxx09b7ba023"
          },
          "name": "abc123",
          "labels": [],
          "is_enabled": true,
          "has_recipient_verification": false,
          "verified_recipients": [],
          "pending_recipients": [],
          "recipients": [
            "abc@test1.com"
          ],
          "id": "62fa3dcxxxxxxx79dda83ff2",
          "object": "alias",
          "created_at": "2022-08-15T12:36:26.593Z",
          "updated_at": "2022-08-15T12:36:26.593Z",
          "storage_location": "storage_loc",
          "has_imap": false
        }
      },
      "AliasInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nom d'alias (s'il n'est pas fourni ou s'il est vide, un alias aléatoire est généré)"
          },
          "recipients": {
            "oneOf": [
              {
                "type": "string",
                "description": "Chaîne d'adresses e-mail, de noms de domaine complets, d'adresses IP ou d'URL de webhook valides, séparées par des sauts de ligne, des espaces et des virgules"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                },
                "description": "Tableau de destinataires valides"
              }
            ],
            "description": "Liste des destinataires. Si elle n'est pas renseignée ou vide, l'adresse e-mail du demandeur est utilisée par défaut."
          },
          "description": {
            "type": "string",
            "description": "Description de l'alias"
          },
          "labels": {
            "oneOf": [
              {
                "type": "string",
                "description": "Chaîne d'étiquettes séparées par un saut de ligne/un espace/une virgule"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Tableau d'étiquettes"
              }
            ]
          },
          "has_recipient_verification": {
            "type": "boolean",
            "description": "Exiger des destinataires qu'ils cliquent sur le lien de vérification (paramètre par défaut du domaine)"
          },
          "is_enabled": {
            "type": "boolean",
            "description": "S'il faut activer ou désactiver cet alias"
          },
          "error_code_if_disabled": {
            "type": "number",
            "enum": [
              250,
              421,
              550
            ],
            "description": "Code d'erreur si l'alias est désactivé. Valeur par défaut : 250."
          },
          "has_imap": {
            "type": "boolean",
            "description": "Activer ou désactiver le stockage IMAP pour cet alias"
          },
          "has_pgp": {
            "type": "boolean",
            "description": "Activer ou désactiver le cryptage OpenPGP pour cet alias"
          },
          "public_key": {
            "type": "string",
            "description": "Clé publique OpenPGP au format ASCII Armor"
          },
          "max_quota": {
            "type": "string",
            "description": "Quota de stockage maximal (par exemple « 1 Go »)"
          },
          "vacation_responder_is_enabled": {
            "type": "boolean",
            "description": "Activer ou désactiver le répondeur de vacances"
          },
          "vacation_responder_start_date": {
            "type": "string",
            "description": "Date de début (par exemple « AAAA-MM-JJ ») pour le répondeur de vacances"
          },
          "vacation_responder_end_date": {
            "type": "string",
            "description": "Date de fin (par exemple « AAAA-MM-JJ ») pour le répondeur de vacances"
          },
          "vacation_responder_subject": {
            "type": "string",
            "description": "Objet en texte clair pour le répondeur de vacances"
          },
          "vacation_responder_message": {
            "type": "string",
            "description": "Message en texte clair pour le répondeur de vacances"
          }
        }
      },
      "AliasUpdateInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nom d'alias"
          },
          "recipients": {
            "oneOf": [
              {
                "type": "string",
                "description": "Chaîne d'adresses e-mail, de noms de domaine complets, d'adresses IP ou d'URL de webhook valides, séparées par des sauts de ligne, des espaces et des virgules"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                },
                "description": "Tableau de destinataires valides"
              }
            ]
          },
          "description": {
            "type": "string",
            "description": "Description de l'alias"
          },
          "labels": {
            "oneOf": [
              {
                "type": "string",
                "description": "Chaîne d'étiquettes séparées par un saut de ligne/un espace/une virgule"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Tableau d'étiquettes"
              }
            ]
          },
          "has_recipient_verification": {
            "type": "boolean",
            "description": "Exiger des destinataires qu'ils cliquent sur le lien de vérification (paramètre par défaut du domaine)"
          },
          "is_enabled": {
            "type": "boolean",
            "description": "Activer ou désactiver l'alias"
          },
          "error_code_if_disabled": {
            "type": "number",
            "enum": [
              250,
              421,
              550
            ],
            "description": "Code d'erreur à utiliser si l'alias est désactivé (par défaut 250)"
          },
          "has_imap": {
            "type": "boolean",
            "description": "Activer ou désactiver le stockage IMAP"
          },
          "has_pgp": {
            "type": "boolean",
            "description": "Activer ou désactiver le cryptage OpenPGP"
          },
          "public_key": {
            "type": "string",
            "description": "Clé publique OpenPGP au format ASCII Armor"
          },
          "max_quota": {
            "type": "string",
            "description": "Quota de stockage maximal (par exemple, « 1 Go »)"
          },
          "vacation_responder_is_enabled": {
            "type": "boolean",
            "description": "Activer ou désactiver le répondeur de vacances"
          },
          "vacation_responder_start_date": {
            "type": "string",
            "description": "Date de début du répondeur de vacances (par exemple AAAA-MM-JJ)"
          },
          "vacation_responder_end_date": {
            "type": "string",
            "description": "Date de fin du répondeur de vacances (par exemple AAAA-MM-JJ)"
          },
          "vacation_responder_subject": {
            "type": "string",
            "description": "Objet en texte clair du répondeur de vacances"
          },
          "vacation_responder_message": {
            "type": "string",
            "description": "Message en texte clair du répondeur de vacances"
          }
        }
      },
      "GenerateAliasPasswordInput": {
        "type": "object",
        "properties": {
          "new_password": {
            "type": "string",
            "description": "Votre nouveau mot de passe personnalisé à utiliser pour l'alias"
          },
          "password": {
            "type": "string",
            "description": "Mot de passe existant pour l'alias pour le modifier sans supprimer le stockage de la boîte aux lettres"
          },
          "is_override": {
            "type": "boolean",
            "description": "Remplacer le mot de passe existant et supprimer le stockage IMAP (à utiliser avec prudence)"
          },
          "emailed_instructions": {
            "type": "string",
            "format": "email",
            "description": "Adresse e-mail pour envoyer le mot de passe de l'alias et les instructions de configuration"
          }
        }
      },
      "EmailLimit": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Nombre actuel d'e-mails envoyés"
          },
          "limit": {
            "type": "integer",
            "description": "Nombre maximum d'e-mails autorisés"
          }
        }
      },
      "Member": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID de membre"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Adresse e-mail du membre"
          },
          "role": {
            "type": "string",
            "description": "Rôle du membre"
          }
        }
      },
      "Invite": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "Adresse e-mail invitée"
          }
        }
      }
    },
    "parameters": {
      "page": {
        "name": "page",
        "in": "query",
        "description": "Page de résultats à afficher. Si non spécifié, la valeur sera 1. Doit être un nombre supérieur ou égal à 1.",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "default": 1
        }
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "description": "Nombre de résultats à renvoyer par page. La valeur par défaut est 10 si non spécifiée. Doit être supérieur ou égal à 1 et inférieur ou égal à 50.",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 50,
          "default": 10
        }
      },
      "pagination": {
        "name": "pagination",
        "in": "query",
        "description": "Inscrivez-vous à la pagination avant le 1er novembre 2024",
        "schema": {
          "type": "boolean"
        }
      },
      "domainId": {
        "name": "domain_id",
        "in": "path",
        "required": true,
        "description": "ID de domaine",
        "schema": {
          "type": "string"
        }
      },
      "aliasId": {
        "name": "alias_id",
        "in": "path",
        "required": true,
        "description": "ID d'alias",
        "schema": {
          "type": "string"
        }
      },
      "memberId": {
        "name": "member_id",
        "in": "path",
        "required": true,
        "description": "ID de membre",
        "schema": {
          "type": "string"
        }
      },
      "emailId": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "Identifiant e-mail",
        "schema": {
          "type": "string"
        }
      },
      "contactId": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "ID de contact",
        "schema": {
          "type": "string"
        }
      },
      "calendarId": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "ID du calendrier",
        "schema": {
          "type": "string"
        }
      },
      "folderId": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "ID ou chemin du dossier",
        "schema": {
          "type": "string"
        }
      },
      "messageId": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "ID du message",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "Error": {
        "description": "Error response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "BadRequest": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotFound": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Conflict": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "PreconditionFailed": {
        "description": "Precondition Failed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "TooManyRequests": {
        "description": "Too Many Requests",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotImplemented": {
        "description": "Not Implemented",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "BadGateway": {
        "description": "Bad Gateway",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "ServiceUnavailable": {
        "description": "Service Unavailable",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "GatewayTimeout": {
        "description": "Gateway Time-out",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  },
  "paths": {
    "/v1/account": {
      "get": {
        "tags": [
          "Compte"
        ],
        "summary": "Récupérer le compte",
        "description": "Récupérez les informations de votre compte.",
        "operationId": "retrieveAccount",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Account retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Compte"
        ],
        "summary": "Mettre à jour le compte",
        "description": "Mettez à jour les informations de votre compte.",
        "operationId": "updateAccount",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "display_name": {
                    "type": "string",
                    "description": "Nom d'affichage"
                  },
                  "locale": {
                    "type": "string",
                    "description": "Préférence locale"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Liste des contacts",
        "description": "Récupérez la liste de tous les contacts pour l'alias authentifié. Ce point de terminaison prend en charge la pagination et renvoie les contacts au format CardDAV.",
        "operationId": "listContacts",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Contacts retrieved successfully",
            "headers": {
              "X-Page-Count": {
                "description": "Total number of pages",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Current": {
                "description": "Current page number",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Size": {
                "description": "Number of items on current page",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Item-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Contact"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Créer un contact",
        "description": "Créez un nouveau contact. Vous pouvez fournir directement le contenu de la vCard ou des champs de contact individuels qui seront convertis au format vCard. Si un contact portant le même identifiant existe déjà, une erreur de conflit sera renvoyée.",
        "operationId": "createContact",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contact created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/contacts/{id}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Récupérer le contact",
        "description": "Récupérez un contact spécifique par son identifiant. Le contact est renvoyé au format Contact standard, avec le contenu vCard et les champs analysés.",
        "operationId": "retrieveContact",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/contactId"
          }
        ],
        "responses": {
          "200": {
            "description": "Contact retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Contacts"
        ],
        "summary": "Mettre à jour les contacts",
        "description": "Mettre à jour un contact existant. Vous pouvez fournir soit le contenu de la vCard mis à jour, soit des champs individuels à mettre à jour. La vCard du contact sera régénérée si des champs individuels sont fournis.",
        "operationId": "updateContact",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/contactId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Supprimer le contact",
        "description": "Supprimer définitivement un contact spécifique. Cette action est irréversible.",
        "operationId": "deleteContact",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/contactId"
          }
        ],
        "responses": {
          "200": {
            "description": "Contact deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/calendars": {
      "get": {
        "tags": [
          "Calendriers"
        ],
        "summary": "Liste des calendriers",
        "description": "Récupérer la liste de tous les calendriers pour l'alias authentifié. Ce point de terminaison prend en charge la pagination et renvoie les calendriers au format CalDAV.",
        "operationId": "listCalendars",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Calendars retrieved successfully",
            "headers": {
              "X-Page-Count": {
                "description": "Total number of pages",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Current": {
                "description": "Current page number",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Size": {
                "description": "Number of items on current page",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Item-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Calendar"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Calendriers"
        ],
        "summary": "Créer un calendrier",
        "description": "Créez un nouveau calendrier. Le nom du calendrier est obligatoire, tandis que les autres propriétés comme la couleur, le fuseau horaire et la description sont facultatives. Si un calendrier portant le même nom existe déjà, une erreur de conflit sera renvoyée.",
        "operationId": "createCalendar",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Calendar created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Calendar"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/calendars/{id}": {
      "get": {
        "tags": [
          "Calendriers"
        ],
        "summary": "Récupérer le calendrier",
        "description": "Récupérer un calendrier spécifique par son identifiant. Le calendrier est renvoyé avec toutes ses propriétés, dont le nom, la description, la couleur, le fuseau horaire et l'ordre.",
        "operationId": "retrieveCalendar",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/calendarId"
          }
        ],
        "responses": {
          "200": {
            "description": "Calendar retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Calendar"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Calendriers"
        ],
        "summary": "Calendrier de mise à jour",
        "description": "Mettre à jour un calendrier existant. Vous pouvez modifier toutes les propriétés du calendrier, y compris le nom, la description, la couleur, le fuseau horaire et l'ordre. Si vous remplacez le nom par un nom existant, une erreur de conflit sera renvoyée.",
        "operationId": "updateCalendar",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/calendarId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Calendar updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Calendar"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Calendriers"
        ],
        "summary": "Supprimer le calendrier",
        "description": "Supprimer définitivement un calendrier spécifique. Cette action est irréversible et supprimera également tous les événements du calendrier.",
        "operationId": "deleteCalendar",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/calendarId"
          }
        ],
        "responses": {
          "200": {
            "description": "Calendar deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Calendar"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/folders": {
      "get": {
        "tags": [
          "Dossiers"
        ],
        "summary": "Liste des dossiers",
        "description": "Récupérez la liste de tous les dossiers/boîtes aux lettres IMAP pour l'alias authentifié. Ce point de terminaison prend en charge la pagination et le filtrage par statut d'abonnement.",
        "operationId": "listFolders",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "name": "subscribed",
            "in": "query",
            "description": "Filtrer les dossiers par statut d'abonnement",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Folders retrieved successfully",
            "headers": {
              "X-Page-Count": {
                "description": "Total number of pages",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Current": {
                "description": "Current page number",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Size": {
                "description": "Number of items on current page",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Item-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Folder"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Dossiers"
        ],
        "summary": "Créer un dossier",
        "description": "Créez un nouveau dossier/boîte aux lettres IMAP. Le chemin d'accès au dossier est obligatoire et peut inclure des dossiers parents (par exemple, « BOÎTE DE RÉCEPTION/Sous-dossier »). Si les dossiers parents n'existent pas, ils seront créés automatiquement.",
        "operationId": "createFolder",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FolderInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Folder created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/folders/{id}": {
      "get": {
        "tags": [
          "Dossiers"
        ],
        "summary": "Récupérer le dossier",
        "description": "Récupérez un dossier spécifique par son identifiant ou son chemin. Vous pouvez utiliser l'identifiant ObjectID du dossier ou son chemin complet (par exemple, « BOÎTE DE RÉCEPTION/Sous-dossier ») comme identifiant.",
        "operationId": "retrieveFolder",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/folderId"
          }
        ],
        "responses": {
          "200": {
            "description": "Folder retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Dossiers"
        ],
        "summary": "Mettre à jour le dossier",
        "description": "Mettre à jour/renommer un dossier existant. Cette opération renomme le dossier avec le nouveau chemin spécifié dans le corps de la requête. Vous pouvez utiliser l'ObjectID du dossier ou son chemin actuel comme identifiant.",
        "operationId": "updateFolder",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/folderId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FolderUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Folder updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Dossiers"
        ],
        "summary": "Supprimer le dossier",
        "description": "Supprimez définitivement un dossier spécifique. Cette action est irréversible et supprimera également tous les messages qu'il contient. Vous pouvez utiliser l'ObjectID ou le chemin d'accès du dossier comme identifiant.",
        "operationId": "deleteFolder",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/folderId"
          }
        ],
        "responses": {
          "200": {
            "description": "Folder deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/messages": {
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Lister et rechercher des messages",
        "description": "Récupérez une liste de messages grâce à des fonctionnalités avancées de recherche et de filtrage. Ce point de terminaison prend en charge la pagination et la recherche complète sur le contenu, les en-têtes, les indicateurs et les métadonnées des messages. Vous pouvez effectuer des recherches par dossier, indicateurs, contenu, en-têtes, plages de dates, taille, etc.",
        "operationId": "listMessages",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "name": "folder",
            "in": "query",
            "description": "Filtrer les messages par chemin de dossier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_unread",
            "in": "query",
            "description": "Filtrer par statut de lecture",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_flagged",
            "in": "query",
            "description": "Filtrer par statut signalé",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_deleted",
            "in": "query",
            "description": "Filtrer par statut supprimé",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_draft",
            "in": "query",
            "description": "Filtrer par statut de brouillon",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_junk",
            "in": "query",
            "description": "Filtrer par statut de courrier indésirable/spam",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_copied",
            "in": "query",
            "description": "Filtrer par statut copié",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_searchable",
            "in": "query",
            "description": "Filtrer par statut de recherche",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_expired",
            "in": "query",
            "description": "Filtrer par statut expiré",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "has_attachments",
            "in": "query",
            "description": "Filtrer par présence de pièce jointe",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "has_attachment",
            "in": "query",
            "description": "Filtrer par présence de pièce jointe (alias pour has_attachments)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "subject",
            "in": "query",
            "description": "Rechercher dans l'objet du message",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "query",
            "description": "Rechercher dans le corps/texte du message",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "text",
            "in": "query",
            "description": "Rechercher dans le texte du message (alias pour le corps)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "headers",
            "in": "query",
            "description": "Rechercher dans tous les en-têtes de message",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "message_id",
            "in": "query",
            "description": "Recherche par en-tête Message-ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Recherche générale dans les en-têtes et le texte",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Recherche générale (alias pour la recherche)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "since",
            "in": "query",
            "description": "Filtrer les messages depuis cette date (format ISO 8601)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Filtrer les messages antérieurs à cette date (format ISO 8601)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "min_size",
            "in": "query",
            "description": "Filtrer les messages avec une taille minimale en octets",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "max_size",
            "in": "query",
            "description": "Filtrer les messages avec une taille maximale en octets",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Rechercher par en-tête De",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Rechercher par en-tête",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cc",
            "in": "query",
            "description": "Recherche par en-tête CC",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bcc",
            "in": "query",
            "description": "Recherche par en-tête BCC",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Rechercher par en-tête de date",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reply-to",
            "in": "query",
            "description": "Rechercher par en-tête Répondre à",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Messages retrieved successfully",
            "headers": {
              "X-Page-Count": {
                "description": "Total number of pages",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Current": {
                "description": "Current page number",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Size": {
                "description": "Number of items on current page",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Item-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Créer un message",
        "description": "Créer/ajouter un nouveau message à un dossier. Ce point de terminaison accepte le format de message standard de Nodemailer et vous permet de spécifier le dossier cible et les indicateurs initiaux. Si le dossier cible n'existe pas, il sera créé automatiquement.",
        "operationId": "createMessage",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Message created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/messages/{id}": {
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Récupérer le message",
        "description": "Récupérez un message spécifique par son identifiant. Par défaut, la réponse inclut l'objet Nodemailer analysé et le contenu brut du message. Vous pouvez contrôler le contenu à l'aide des paramètres de requête.",
        "operationId": "retrieveMessage",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/messageId"
          },
          {
            "name": "eml",
            "in": "query",
            "description": "Renvoyer le format EML brut au lieu de JSON",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "nodemailer",
            "in": "query",
            "description": "Inclure l'objet Nodemailer analysé",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "attachments",
            "in": "query",
            "description": "Inclure les pièces jointes dans l'objet Nodemailer",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "raw",
            "in": "query",
            "description": "Inclure le contenu brut du message",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Message retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              },
              "message/rfc822": {
                "description": "Raw EML format (when ?eml=true)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Messages"
        ],
        "summary": "Message de mise à jour",
        "description": "Mettre à jour un message existant. Vous pouvez modifier les indicateurs du message ou le déplacer vers un autre dossier. Si le dossier cible n'existe pas, il sera créé automatiquement.",
        "operationId": "updateMessage",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/messageId"
          },
          {
            "name": "eml",
            "in": "query",
            "description": "Renvoyer le format EML brut au lieu de JSON",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              },
              "message/rfc822": {
                "description": "Raw EML format (when ?eml=true)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Messages"
        ],
        "summary": "Supprimer le message",
        "description": "Supprimer définitivement un message spécifique. Cette action est irréversible et supprime définitivement le message du stockage. Contrairement aux clients IMAP qui déplacent généralement les messages vers la corbeille, ce point de terminaison effectue une suppression définitive.",
        "operationId": "deleteMessage",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/messageId"
          }
        ],
        "responses": {
          "200": {
            "description": "Message deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/logs/download": {
      "get": {
        "summary": "Télécharger les journaux",
        "description": "**Télécharger les journaux**\n\nDescription : Notre API vous permet de télécharger les journaux de votre compte par programmation. En soumettant une requête à ce point de terminaison, tous les journaux de votre compte seront traités et vous seront envoyés par e-mail sous forme de pièce jointe (fichier CSV compressé au format Gzip).\n\nCela vous permet de créer des tâches en arrière-plan avec une tâche Cron ou le logiciel de planification de tâches Bree de Node.js pour recevoir les journaux quand vous le souhaitez. Veuillez noter que ce point de terminaison est limité à 10 requêtes par jour.\n\nLa pièce jointe est la forme minuscule « email-deliverability-logs-YYYY-MM-DD-h-mm-A-z.csv.gz » et l'e-mail lui-même contient un bref résumé des journaux récupérés.",
        "tags": [
          "Journaux"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "query",
            "description": "Filtrer les journaux par domaine complet (« FQDN »). Si ce champ n'est pas renseigné, tous les journaux de tous les domaines seront récupérés.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Recherchez des journaux par e-mail, domaine, nom d'alias, adresse IP ou date (format M/A, M/J/AA, M-J, M-J-AA ou M.D.AA).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bounce_category",
            "in": "query",
            "description": "Recherchez des journaux par catégorie de rebond spécifique (par exemple, « liste de blocage »).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "response_code",
            "in": "query",
            "description": "Recherchez des journaux par un code de réponse d'erreur spécifique (par exemple 421 ou 550).",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Logs will be emailed as an attachment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Logs will be emailed to you shortly"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/v1/emails": {
      "get": {
        "summary": "Lister les e-mails SMTP sortants",
        "description": "**Liste des e-mails SMTP sortants**\n\nNotez que ce point de terminaison ne renvoie pas les valeurs des propriétés « message », « headers » et « rejectedErrors » d'un e-mail.\n\nPour renvoyer ces propriétés et leurs valeurs, veuillez utiliser le point de terminaison [Récupérer l'e-mail](https://github.com/forwardemail/forwardemail.net/blob/master/app/views/api/index.md#retrieve-email) avec un identifiant d'e-mail.",
        "tags": [
          "Courriels"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Rechercher des e-mails par métadonnées.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "domain",
            "in": "query",
            "description": "Rechercher des e-mails par nom de domaine.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Trier selon un champ spécifique (préfixe avec un tiret simple pour trier dans le sens inverse de ce champ). La valeur par défaut est created_at si elle n'est pas définie.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Voir Pagination pour plus d'informations.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Voir Pagination pour plus d'informations.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of outbound SMTP emails",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Email"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "summary": "Créer un e-mail SMTP sortant",
        "description": "Notre API de création d'e-mails s'inspire et exploite la configuration des options de message de Nodemailer. Veuillez vous référer à la [configuration des messages de Nodemailer](https://nodemailer.com/message/) pour tous les paramètres de corps ci-dessous.\n\nÀ l'exception de « enveloppe » et « dkim » (que nous définissons automatiquement), nous prenons en charge toutes les options de Nodemailer. Pour des raisons de sécurité, nous définissons automatiquement les options « disableFileAccess » et « disableUrlAccess » sur « true ».\n\nVous pouvez soit transmettre l'option unique « raw » avec votre e-mail complet brut, y compris les en-têtes, soit transmettre les options de corps individuelles ci-dessous.\n\nCe point de terminaison d'API encodera automatiquement les émojis s'ils se trouvent dans les en-têtes (par exemple, une ligne d'objet « Subject: 🤓 Hello » est automatiquement convertie en « Subject: =?UTF-8?Q?=F0=9F=A4=93?= Hello »). Notre objectif était de créer une API de messagerie extrêmement conviviale pour les développeurs et à l'épreuve des mannequins.",
        "tags": [
          "Courriels"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SMTP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email sent successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/emails/limit": {
      "get": {
        "summary": "Obtenir la limite des e-mails SMTP sortants",
        "description": "Il s'agit d'un point de terminaison simple qui renvoie un objet JSON contenant le « count » et la « limit » du nombre de messages SMTP sortants quotidiens par compte.",
        "tags": [
          "Courriels"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Email limit information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailLimit"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/emails/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/emailId"
        }
      ],
      "get": {
        "summary": "Récupérer les e-mails SMTP sortants",
        "description": "Récupérer un e-mail SMTP sortant spécifique.",
        "tags": [
          "Courriels"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Email retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Supprimer les e-mails SMTP sortants",
        "description": "La suppression d'un e-mail définira son statut sur « rejeté » (et ne le traitera donc pas dans la file d'attente) si et seulement si son statut actuel est « en attente », « en file d'attente » ou « différé ». Nous pouvons supprimer automatiquement les e-mails 30 jours après leur création et/ou leur envoi. Il est donc conseillé de conserver une copie des e-mails SMTP sortants dans votre client, votre base de données ou votre application. Vous pouvez référencer notre identifiant d'e-mail dans votre base de données si vous le souhaitez ; cette valeur est renvoyée par les points de terminaison [Créer un e-mail](https://github.com/forwardemail/forwardemail.net/blob/master/app/views/api/index.md#create-email) et [Récupérer un e-mail](https://github.com/forwardemail/forwardemail.net/blob/master/app/views/api/index.md#retrieve-email).",
        "tags": [
          "Courriels"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Email deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains": {
      "get": {
        "summary": "Liste des domaines",
        "description": "> [!NOTE]\n>À compter du 1er novembre 2024, les points de terminaison de l'API pour les domaines de liste et les alias de domaine de liste afficheront par défaut un maximum de 1 000 résultats par page. Si vous souhaitez activer ce comportement plus tôt, vous pouvez ajouter « ?paginate=true » comme paramètre de chaîne de requête supplémentaire à l'URL de la requête du point de terminaison. Consultez la section Pagination pour plus d'informations.",
        "tags": [
          "Domaines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Rechercher des domaines par métadonnées.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "domain",
            "in": "query",
            "description": "Rechercher des domaines par nom de domaine.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Trier selon un champ spécifique (préfixe avec un tiret simple pour trier dans le sens inverse de ce champ). La valeur par défaut est created_at si elle n'est pas définie.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Voir Pagination pour plus d'informations.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Voir Pagination pour plus d'informations.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of domains",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "summary": "Créer un domaine",
        "description": "Crée un nouveau domaine dans le système. Ce point de terminaison vous permet d'enregistrer un nom de domaine complet (FQDN) ou une adresse IP à utiliser avec la plateforme.\n\nLes options de configuration facultatives incluent l'attribution du domaine à une équipe existante, la définition d'un type de forfait (par exemple, gratuit, protection renforcée ou équipe) et la configuration de protections avancées telles que le filtrage anti-spam, l'analyse antivirus et la vérification des destinataires. Vous pouvez également configurer la création d'un alias fourre-tout par défaut, définir une URL de webhook de rebond personnalisée pour les échecs SMTP et définir des limites de quota de stockage pour les alias de messagerie sur ce domaine. Ce point de terminaison effectue la validation et le provisionnement au niveau du domaine. Si l'option « ignore_mx_check » est activée, la vérification des enregistrements MX est ignorée (recommandé uniquement pour les configurations de routage avancées). La réponse contiendra tous les détails de l'objet de domaine créé, y compris les enregistrements DNS nécessaires à la configuration.",
        "tags": [
          "Domaines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDomainInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/v1/domains/{domain_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        }
      ],
      "get": {
        "summary": "Récupérer le domaine",
        "description": "Récupérer un domaine spécifique",
        "tags": [
          "Domaines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "Mettre à jour le domaine",
        "description": "Mettre à jour un domaine spécifique.",
        "tags": [
          "Domaines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDomainInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Supprimer le domaine",
        "description": "Supprimer un domaine spécifique.",
        "tags": [
          "Domaines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Domain deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/verify-records": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        }
      ],
      "get": {
        "summary": "Vérifier les enregistrements de domaine",
        "description": "Vérifiez les enregistrements DNS pour un domaine spécifique.",
        "tags": [
          "Domaines"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "DNS records successfully verified",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Domain's DNS records have been verified."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/verify-smtp": {
      "get": {
        "summary": "Vérifier les enregistrements SMTP du domaine",
        "description": "Vérifie les enregistrements DNS liés à SMTP pour le domaine spécifié.",
        "operationId": "verifySmtpRecords",
        "tags": [
          "Domaines"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "description": "Nom de domaine entièrement qualifié (FQDN) à vérifier",
            "schema": {
              "type": "string",
              "format": "hostname"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "SMTP records successfully verified",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "You have successfully configured and verified DNS records for outbound SMTP."
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/catch-all-passwords": {
      "post": {
        "summary": "Créer un mot de passe fourre-tout à l'échelle du domaine",
        "description": "Crée un mot de passe fourre-tout pour tout le domaine. Si aucun mot de passe n'est fourni, un mot de passe aléatoire et sécurisé est généré.",
        "tags": [
          "Domaines"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Le nom de domaine pour lequel créer le mot de passe fourre-tout"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "new_password": {
                    "type": "string",
                    "description": "Votre nouveau mot de passe personnalisé à utiliser comme mot de passe fourre-tout pour tout le domaine. Laissez ce champ vide pour générer un mot de passe fort."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description à des fins d'organisation uniquement."
                  }
                }
              },
              "example": {
                "new_password": "myCustomStrongPassword123!",
                "description": "Password for team-wide access"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created a catch-all password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of the created catch-all password"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the catch-all password"
                    }
                  },
                  "required": [
                    "id",
                    "description"
                  ]
                },
                "example": {
                  "id": "6841ec462bd583c73d0632dd",
                  "username": "*@quas.com",
                  "password": "6Yq14XhAUaupdZE",
                  "description": "foo bar"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Répertorier les mots de passe fourre-tout à l'échelle du domaine",
        "description": "Renvoie une liste de mots de passe fourre-tout à l'échelle du domaine qui sont actuellement configurés pour le domaine spécifié.",
        "operationId": "listCatchAllPasswords",
        "tags": [
          "Domaines"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "description": "Nom de domaine complet (FQDN) pour lequel répertorier les mots de passe fourre-tout",
            "schema": {
              "type": "string",
              "format": "hostname"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of domain-wide catch-all passwords",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier for the item",
                        "example": "6841ec442bd583c73d0632d0"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the item",
                        "example": "foo bar"
                      }
                    },
                    "required": [
                      "id",
                      "description"
                    ]
                  },
                  "example": [
                    {
                      "id": "6841ec442bd583c73d0632d0",
                      "description": ""
                    },
                    {
                      "id": "6841ec462bd583c73d0632dd",
                      "description": "foo bar"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/catch-all-passwords/{token_id}": {
      "delete": {
        "summary": "Supprimer le mot de passe fourre-tout à l'échelle du domaine",
        "description": "Supprime un mot de passe fourre-tout à l'échelle du domaine à l'aide de l'ID de jeton fourni.",
        "tags": [
          "Domaines"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Le nom de domaine associé au mot de passe fourre-tout"
          },
          {
            "name": "token_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "L'ID de jeton du mot de passe fourre-tout à l'échelle du domaine à supprimer"
          }
        ],
        "responses": {
          "200": {
            "description": "Catch-all password successfully removed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Catch-all password deleted successfully."
                    }
                  },
                  "example": {
                    "id": "6841ec442bd583c73d0632d0",
                    "description": ""
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/invites": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        }
      ],
      "get": {
        "summary": "Accepter l'invitation du domaine",
        "description": "Accepter une invitation à un domaine.",
        "tags": [
          "Invitations"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain invite accepted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invite accepted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "post": {
        "summary": "Créer une invitation de domaine",
        "description": ">[!IMPORTANT]\n>Si l'utilisateur invité est déjà membre d'un autre domaine dont l'administrateur l'invite est membre, l'invitation sera automatiquement acceptée et aucun e-mail ne sera envoyé.",
        "tags": [
          "Invitations"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Adresse e-mail pour inviter à la liste des membres du domaine"
                  },
                  "group": {
                    "type": "string",
                    "format": "string",
                    "description": "Groupe auquel ajouter l'utilisateur à l'appartenance au domaine (peut être « admin » ou « utilisateur »)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain invite created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invite"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      },
      "delete": {
        "summary": "Supprimer l'invitation de domaine",
        "description": "Supprimer une invitation à un domaine.",
        "tags": [
          "Invitations"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Adresse e-mail à supprimer de la liste des membres du domaine"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain invite removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invite removed successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/members/{member_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        },
        {
          "$ref": "#/components/parameters/memberId"
        }
      ],
      "put": {
        "summary": "Mettre à jour le membre du domaine",
        "description": "Mettre à jour un membre du domaine.",
        "tags": [
          "Membres"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "group": {
                    "required": true,
                    "type": "string",
                    "description": "Groupe pour mettre à jour l'utilisateur avec l'appartenance au domaine (peut être « admin » ou « utilisateur »)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain member updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Supprimer un membre du domaine",
        "description": "Supprimer un membre du domaine.",
        "tags": [
          "Membres"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain member removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Member removed successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/aliases/{alias_id}/generate-password": {
      "post": {
        "summary": "Générer un mot de passe d'alias",
        "description": "Générer un mot de passe pour un alias. Si « emailed_instructions » n'est pas fourni, la réponse contiendra le nom d'utilisateur et le mot de passe générés.",
        "tags": [
          "Alias"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Nom de domaine entièrement qualifié (FQDN)"
          },
          {
            "name": "alias_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Identifiant unique de l'alias"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateAliasPasswordInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Alias credentials returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string",
                      "example": "alias@yourdomain.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "some-generated-password"
                    }
                  },
                  "required": [
                    "username",
                    "password"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/aliases": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        }
      ],
      "get": {
        "summary": "Lister les alias de domaine",
        "description": ">[!NOTE]\n>À compter du 1er novembre 2024, les points de terminaison de l'API « Lister les domaines » et « Lister les alias de domaine » afficheront par défaut un maximum de 1 000 résultats par page. Si vous souhaitez activer ce comportement plus tôt, vous pouvez ajouter « ?paginate=true » comme paramètre de chaîne de requête supplémentaire à l'URL de la requête du point de terminaison. Consultez la section « Pagination » pour plus d'informations.",
        "tags": [
          "Alias"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Rechercher des alias dans un domaine par nom, libellé ou destinataire (RegExp pris en charge)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Rechercher des alias dans un domaine par nom (RegExp pris en charge)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipient",
            "in": "query",
            "description": "Rechercher des alias dans un domaine par destinataire (RegExp pris en charge)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Trier selon un champ spécifique (préfixe avec un tiret simple pour trier à l'envers). La valeur par défaut est created_at.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "List of domain aliases",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Alias"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "post": {
        "summary": "Créer un nouvel alias de domaine",
        "description": "Créez un nouvel alias pour un domaine spécifique.",
        "tags": [
          "Alias"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AliasInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain alias created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alias"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/aliases/{alias_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        },
        {
          "$ref": "#/components/parameters/aliasId"
        }
      ],
      "get": {
        "summary": "Récupérer l'alias de domaine",
        "description": "Récupérer un alias spécifique pour un domaine.",
        "tags": [
          "Alias"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain alias retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alias"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "Mettre à jour l'alias de domaine",
        "description": "Mettre à jour un alias spécifique pour un domaine.",
        "tags": [
          "Alias"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AliasUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain alias updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alias"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          },
          "401": {
            "$ref": "#/components/responses/Error"
          },
          "403": {
            "$ref": "#/components/responses/Error"
          },
          "404": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "summary": "Supprimer l'alias de domaine",
        "description": "Supprimer un alias spécifique pour un domaine.",
        "tags": [
          "Alias"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain alias deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Alias deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/encrypt": {
      "post": {
        "summary": "Crypter l'enregistrement TXT",
        "description": "Nous vous permettons de chiffrer vos enregistrements, même avec l'offre gratuite, sans frais. La confidentialité ne devrait pas être une fonctionnalité, mais être intégrée à tous les aspects d'un produit. Suite à une demande pressante dans une discussion sur les guides de confidentialité et sur nos tickets GitHub, nous avons ajouté ceci.",
        "tags": [
          "Crypter"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "text"
                ],
                "properties": {
                  "input": {
                    "required": true,
                    "type": "string",
                    "description": "Tout enregistrement TXT en texte brut de courrier électronique de transfert valide"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Text encrypted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "encrypted": {
                      "type": "string",
                      "description": "Encrypted text"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          },
          "401": {
            "$ref": "#/components/responses/Error"
          },
          "429": {
            "description": "Rate limit exceeded (50 requests for 'encrypt')",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Compte",
      "description": "Points de terminaison de gestion de compte"
    },
    {
      "name": "Journaux",
      "description": "Points de terminaison de gestion des journaux"
    },
    {
      "name": "Courriels",
      "description": "Points de terminaison de gestion des e-mails"
    },
    {
      "name": "Domaines",
      "description": "> [!TIP]\n> Les points de terminaison de domaine dont le nom de domaine est <code>/v1/domains/:domain\\_name</code> sont interchangeables avec l'ID de domaine <code>:domain\\_id</code>. Cela signifie que vous pouvez faire référence au domaine par sa valeur <code>name</code> ou <code>id</code>."
    },
    {
      "name": "Invitations",
      "description": "Points de terminaison de gestion des invitations de domaine"
    },
    {
      "name": "Membres",
      "description": "Points de terminaison de gestion des membres du domaine"
    },
    {
      "name": "Alias",
      "description": "Points de terminaison de gestion des alias de domaine"
    },
    {
      "name": "Crypter",
      "description": "Points de terminaison de chiffrement"
    },
    {
      "name": "Contacts",
      "description": "Points de terminaison de gestion des contacts d'alias (CardDAV)\n\n>[!NOTE]\n>Contrairement aux autres points de terminaison d'API, ceux-ci requièrent un « nom d'utilisateur » d'authentification égal au nom d'utilisateur de l'alias et un « mot de passe » égal au mot de passe généré par l'alias comme en-têtes d'autorisation de base.\n\n>[!TIP]\n>Ces points de terminaison fournissent des opérations CRUD complètes pour la gestion des contacts avec prise en charge de vCard, y compris la création, la récupération, la mise à jour et la suppression de contacts. Vous pouvez fournir directement le contenu de la vCard ou des champs de contact individuels qui seront convertis au format vCard."
    },
    {
      "name": "Calendriers",
      "description": "Points de terminaison de gestion des calendriers d'alias (CalDAV)\n\n>[!NOTE]\n> Contrairement aux autres points de terminaison d'API, ceux-ci nécessitent [Authentication](#description/authentication) « username » correspondant au nom d'utilisateur de l'alias et « password » correspondant au mot de passe généré par l'alias comme en-têtes d'autorisation de base.\n\n>[!TIP]\n> Ces points de terminaison offrent une gestion complète des calendriers avec prise en charge des fuseaux horaires et des couleurs, incluant la création, la récupération, la mise à jour et la suppression des calendriers. Les noms des calendriers sont obligatoires, tandis que les autres propriétés comme la couleur, le fuseau horaire et la description sont facultatives."
    },
    {
      "name": "Messages",
      "description": "Points de terminaison de gestion des messages d'alias (IMAP/POP3)\n\n>[!NOTE]\n> Contrairement aux autres points de terminaison d'API, ceux-ci nécessitent [Authentication](#description/authentication) « username » (nom d'utilisateur) correspondant au nom d'alias et « password » (mot de passe) correspondant au mot de passe généré par l'alias comme en-têtes d'autorisation de base.\n\n>[!TIP]\n> Ces points de terminaison offrent une gestion complète des messages avec des fonctionnalités de recherche avancées. Vous pouvez effectuer des recherches par dossier, indicateurs, contenu, en-têtes, plages de dates, taille, etc. Les messages peuvent être créés au format Nodemailer standard et prennent en charge le déplacement entre les dossiers et la gestion des indicateurs.\n\nVeuillez vous assurer d'avoir suivi les instructions de configuration de votre domaine.\nCes instructions sont disponibles dans notre section FAQ [Prend-vous en charge la réception d'e-mails via IMAP ?](/faq#est-ce-que-vous-prend-en-charge-la-reception-d-e-mails-avec-imap)."
    },
    {
      "name": "Dossiers",
      "description": "Points de terminaison de gestion des dossiers d'alias (IMAP/POP3)\n\n>[!TIP]\n> Les points de terminaison de dossier dont le chemin d'accès est <code>/v1/folders/:path</code> sont interchangeables avec l'ID de dossier <code>:id</code>. Cela signifie que vous pouvez faire référence au dossier par sa valeur <code>path</code> ou <code>id</code>.\n\n>[!NOTE]\n> Contrairement aux autres points de terminaison d'API, ceux-ci nécessitent [Authentication](#description/authentication) \"username\" égal au nom d'utilisateur de l'alias et \"password\" égal au mot de passe généré par l'alias comme en-têtes d'autorisation de base.\n\n>[!TIP]\n> Ces points de terminaison offrent une gestion complète des dossiers, y compris la création, le changement de nom et la suppression. Les chemins de dossier peuvent inclure des dossiers parents (par exemple, « BOÎTE DE RÉCEPTION/Sous-dossier »), et les dossiers parents seront créés automatiquement s'ils n'existent pas."
    }
  ]
}