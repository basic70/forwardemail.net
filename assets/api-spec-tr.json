{
  "openapi": "3.0.0",
  "info": {
    "title": "Forward Email API",
    "description": "<img src=\"/img/articles/email-api.webp\" alt=\"\"/><br />Forward Email için kapsamlı API belgelerine hoş geldiniz. Bu API, e-posta yönlendirmeyi, alan adlarını, takma adları, giden e-postaları ve daha fazlasını programatik olarak yönetmenizi sağlar.\n\n## Temel Özellikler\n* **Alan Adı Yönetimi:** Alan adlarını oluşturun, alın, güncelleyin, silin ve doğrulayın.\n* **Takma Ad Yönetimi:** Oluşturma, güncelleme ve alıcı yönetimi dahil olmak üzere e-posta takma adlarını yönetin.\n* **Giden SMTP:** SMTP üzerinden e-posta gönderin, limitleri yönetin ve gönderilen e-postaları takip edin.\n* **Hesap ve Günlükler:** Hesap bilgilerinizi yönetin ve etkinlik günlüklerini indirin.\n* **Güvenlik:** TXT kayıtlarını şifreleyin ve alan adı üyelerini/davetlerini yönetin.\n* **CardDAV Kişileri:** vCard desteğiyle kişi yönetimi için tam CRUD işlemleri. * **CalDAV Takvimleri:** Saat dilimi ve renk desteğiyle eksiksiz takvim yönetimi.\n* **IMAP/POP3 Mesajları:** Gelişmiş arama özelliklerine sahip kapsamlı mesaj yönetimi.\n* **IMAP/POP3 Klasörleri:** Oluşturma, yeniden adlandırma ve silme dahil olmak üzere tam klasör yönetimi.\n\n## Kimlik Doğrulama\nÇoğu uç nokta, **API Anahtarınızı** kullanarak kimlik doğrulaması gerektirir. Temel Kimlik Doğrulama başlığında `kullanıcı adı` olarak API Anahtarını girin, parolayı boş bırakın.\n\n```http\nYetkilendirme: Temel QVBJX1RPS0VOOg==\n```\n(`API_TOKEN` ifadesini Base64 kodlamasından önce gerçek anahtarınızla değiştirin)\n\n**Takma Adlı Kişiler, Takvimler, Mesajlar ve Klasörler** ile ilgili uç noktalar, Temel Kimlik Doğrulama için oluşturulmuş bir takma ad kullanıcı adı ve parolası gerektirir.\n\n## Hatalar\nAPI, başarı veya başarısızlığı belirtmek için standart HTTP durum kodlarını kullanır. Hata yanıtları, hatayı ayrıntılı olarak açıklayan bir `mesaj` alanı içeren bir JSON gövdesi içerir.\n\n| Durum Kodu | Anlamı |\n|-------------|----------------------|\n| 200 | Tamam |\n| 400 | Hatalı İstek |\n| 401 | Yetkisiz |\n| 403 | Yasak |\n| 404 | Bulunamadı |\n| 409 | Çakışma |\n| 412 | Ön Koşul Başarısız |\n| 429 | Çok Fazla İstek |\n| 500 | Dahili Sunucu Hatası |\n| 501 | Uygulanmadı |\n| 502 | Hatalı Ağ Geçidi |\n| 503 | Hizmet Kullanılamıyor |\n| 504 | Ağ Geçidi Zaman Aşımı |\n\n*`5xx` hatasıyla karşılaşırsanız, lütfen [api@forwardemail.net](mailto:api@forwardemail.net) ile iletişime geçin.*\n\n## Yerelleştirme\nAPI yanıtları, kullanıcının algıladığı yerel ayarlara veya `Accept-Language` başlığına göre çevrilir. 25'ten fazla dil desteklenmektedir.\n\n## Sayfalandırma\nListe döndüren uç noktalar, sorgu parametreleri aracılığıyla sayfalandırmayı destekler.\n\n| Parametre | Tür | İsteğe Bağlı | Açıklama | Varsayılan | Kısıtlamalar |\n|--------------|----------|---------------------------------------------------------------------------------------------|----------|-----------------------|\n| `page` | Integer | Evet | Alınacak sayfa numarası. | 1 | `>= 1` |\n| `limit` | Integer | Evet | Sayfa başına sonuç sayısı. | 10 | `>= 1`, `<= 50` |\n| `pagination` | Boolean | Evet | Sayfalandırma davranışına katılım (bazı uç noktalar için 1 Kasım 2024'ten önce gereklidir). | false | |\n\n**Sayfalandırma Başlıkları:**\n* `X-Page-Count`: Toplam sayfa sayısı.\n* `X-Page-Current`: Geçerli sayfa numarası.\n* `X-Page-Size`: Geçerli sayfadaki öğe sayısı.\n* `X-Item-Count`: Tüm sayfalardaki toplam öğe sayısı.\n* `Link`: Gezinme bağlantıları (önceki, sonraki, ilk, son).\n\n**Örnek:**\n```bash\ncurl \"https://api.forwardemail.net/v1/domains?page=2&limit=20&pagination=true\" \\\n-u API_TOKEN:\n```\n\n## Önerilen Kütüphaneler\n* **Ruby:** [Faraday](https://github.com/lostisland/faraday)\n* **Python:** [requests](https://requests.readthedocs.io/en/latest/)\n* **Java:** [OkHttp](https://square.github.io/okhttp/)\n* **PHP:** [Guzzle](https://docs.guzzlephp.org/en/stable/)\n* **JavaScript/Node.js:** [superagent](https://github.com/visionmedia/superagent) (Forward Email tarafından yönetilir)\n* **Git:** `net/http`\n* **.NET:** [RestSharp](https://restsharp.dev/)",
    "version": "1.0.0",
    "contact": {
      "name": "Forward Email Support",
      "url": "https://forwardemail.net",
      "email": "api@forwardemail.net"
    }
  },
  "servers": [
    {
      "url": "https://api.forwardemail.net",
      "description": "E-posta API Sunucusunu İlet"
    }
  ],
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "http",
        "scheme": "basic",
        "description": "\nTemel Kimlik Doğrulama için **kullanıcı adı** olarak API Anahtarınızı kullanın. Parola alanını boş bırakın.\n\n**Örnek:**\nAPI Anahtarınız `YOUR_API_KEY` ise, `Authorization` başlığı için Base64 kodlu değer `echo -n \"YOUR_API_KEY:\" | base64` olacaktır.\n\n```http\nYetkilendirme: Temel WU9VUl9BUElfS0VZOg==\n```\n"
      },
      "AliasAuth": {
        "type": "http",
        "scheme": "basic",
        "description": "\nTemel Kimlik Doğrulama için oluşturulan **takma ad kullanıcı adı ve parolasını** kullanın. Bu, aşağıdaki uç noktalar için geçerlidir:\n* Takma Ad Kişiler (CardDAV)\n* Takma Ad Takvimler (CalDAV)\n* Takma Ad Mesajlar (IMAP/POP3)\n* Takma Ad Klasörler (IMAP/POP3)\n\n**Örnek:**\nTakma ad kullanıcı adı `alias@domain.com` ve parola `GENERATED_PASSWORD` ise, Base64 kodlu değer `echo -n \"alias@domain.com:GENERATED_PASSWORD\" | base64` olur.\n\n```http\nYetkilendirme: Temel YWxpYXNAZG9tYWluLmNvbTpHRU5FUkFURURfUEFTU1dPUkQ=\n```\n"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "type": "string",
            "description": "Hata mesajı"
          }
        }
      },
      "Account": {
        "type": "object",
        "required": [
          "id",
          "email",
          "plan",
          "object"
        ],
        "properties": {
          "sessions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "has_newsletter": {
            "type": "boolean"
          },
          "plan": {
            "type": "string",
            "example": "free"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "max_quota_per_alias": {
            "type": "integer",
            "format": "int64"
          },
          "full_email": {
            "type": "string",
            "format": "email"
          },
          "display_name": {
            "type": "string"
          },
          "otp_enabled": {
            "type": "boolean"
          },
          "last_locale": {
            "type": "string"
          },
          "address_country": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "example": "user"
          },
          "locale": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "address_html": {
            "type": "string"
          },
          "api_token": {
            "type": "string",
            "format": "uuid"
          }
        },
        "example": {
          "sessions": [],
          "has_newsletter": true,
          "plan": "free",
          "email": "test1@test1.com",
          "max_quota_per_alias": 10737418240,
          "full_email": "test1@test1.com",
          "display_name": "test1@test1.com",
          "otp_enabled": false,
          "last_locale": "en",
          "address_country": "None",
          "id": "683fb2e81cc5d449a0d4cd9d",
          "object": "user",
          "locale": "en",
          "created_at": "2025-06-04T02:43:52.646Z",
          "updated_at": "2025-06-04T02:43:55.350Z",
          "address_html": "",
          "api_token": "15ac16ae21784aa2cb4d5508"
        }
      },
      "Contact": {
        "type": "object",
        "required": [
          "id",
          "uid",
          "full_name",
          "content",
          "etag",
          "is_group",
          "emails",
          "phone_numbers",
          "created_at",
          "updated_at",
          "object"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "İletişim Kimliği (CardDAV'dan contact_id)"
          },
          "uid": {
            "type": "string",
            "description": "UID ile iletişime geçin"
          },
          "full_name": {
            "type": "string",
            "description": "Kişinin tam adı"
          },
          "content": {
            "type": "string",
            "description": "vCard içeriği"
          },
          "etag": {
            "type": "string",
            "description": "Sürümleme için ETag"
          },
          "is_group": {
            "type": "boolean",
            "description": "İletişimin bir grup olup olmadığı"
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string",
                  "format": "email"
                },
                "type": {
                  "type": "string",
                  "default": "INTERNET"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "E-posta adresleri dizisi"
          },
          "phone_numbers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "default": "CELL"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "Telefon numaraları dizisi"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "enum": [
              "contact"
            ]
          }
        },
        "example": {
          "id": "contact123",
          "uid": "uid123",
          "full_name": "John Doe",
          "content": "BEGIN:VCARD\\nVERSION:3.0\\nUID:uid123\\nFN:John Doe\\nEMAIL;TYPE=INTERNET:john@example.com\\nEND:VCARD",
          "etag": "etag123",
          "is_group": false,
          "emails": [
            {
              "value": "john@example.com",
              "type": "INTERNET"
            }
          ],
          "phone_numbers": [
            {
              "value": "+1234567890",
              "type": "CELL"
            }
          ],
          "created_at": "2025-01-01T00:00:00.000Z",
          "updated_at": "2025-01-01T00:00:00.000Z",
          "object": "contact"
        }
      },
      "ContactInput": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "vCard içeriği (sağlanmazsa, diğer alanlardan oluşturulacaktır)"
          },
          "full_name": {
            "type": "string",
            "description": "Kişinin tam adı"
          },
          "contact_id": {
            "type": "string",
            "description": "Özel iletişim kimliği (sağlanmazsa otomatik olarak oluşturulacaktır)"
          },
          "uid": {
            "type": "string",
            "description": "İletişim UID'si (sağlanmazsa otomatik olarak oluşturulacaktır)"
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string",
                  "format": "email"
                },
                "type": {
                  "type": "string",
                  "default": "INTERNET"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "E-posta adresleri dizisi"
          },
          "phone_numbers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "default": "CELL"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "Telefon numaraları dizisi"
          },
          "phones": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "default": "CELL"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "Telefon numaraları dizisi (phone_numbers için takma ad)"
          },
          "addresses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "street": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "postalCode": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              }
            },
            "description": "Adres dizisi"
          },
          "is_group": {
            "type": "boolean",
            "description": "İletişimin bir grup olup olmadığı"
          }
        }
      },
      "ContactUpdateInput": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "vCard içeriği"
          },
          "full_name": {
            "type": "string",
            "description": "Kişinin tam adı"
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string",
                  "format": "email"
                },
                "type": {
                  "type": "string",
                  "default": "INTERNET"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "E-posta adresleri dizisi"
          },
          "phone_numbers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "default": "CELL"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "Telefon numaraları dizisi"
          },
          "phones": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "default": "CELL"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "Telefon numaraları dizisi (phone_numbers için takma ad)"
          },
          "addresses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "street": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "postalCode": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              }
            },
            "description": "Adres dizisi"
          },
          "is_group": {
            "type": "boolean",
            "description": "İletişimin bir grup olup olmadığı"
          }
        }
      },
      "Calendar": {
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "color",
          "timezone",
          "order",
          "created_at",
          "updated_at",
          "object"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Takvim Kimliği (CalDAV'dan takvim kimliği)"
          },
          "name": {
            "type": "string",
            "description": "Takvim adı"
          },
          "description": {
            "type": "string",
            "description": "Takvim açıklaması"
          },
          "color": {
            "type": "string",
            "description": "Takvim rengi (onaltılık biçim)"
          },
          "timezone": {
            "type": "string",
            "description": "Takvim saat dilimi"
          },
          "order": {
            "type": "integer",
            "description": "Takvim görüntüleme sırası"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "enum": [
              "calendar"
            ]
          }
        },
        "example": {
          "id": "calendar123",
          "name": "Personal Calendar",
          "description": "My personal calendar",
          "color": "#ff0000",
          "timezone": "America/New_York",
          "order": 0,
          "created_at": "2025-01-01T00:00:00.000Z",
          "updated_at": "2025-01-01T00:00:00.000Z",
          "object": "calendar"
        }
      },
      "CalendarInput": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Takvim adı"
          },
          "calendar_id": {
            "type": "string",
            "description": "Özel takvim kimliği (sağlanmazsa otomatik olarak oluşturulacaktır)"
          },
          "description": {
            "type": "string",
            "description": "Takvim açıklaması"
          },
          "color": {
            "type": "string",
            "description": "Takvim rengi (hex formatı sağlanmazsa otomatik olarak oluşturulacaktır)"
          },
          "timezone": {
            "type": "string",
            "description": "Takvim saat dilimi (varsayılan olarak kullanıcının saat dilimi veya UTC'dir)"
          },
          "order": {
            "type": "integer",
            "description": "Takvim görüntüleme sırası (varsayılan 0'dır)"
          }
        }
      },
      "CalendarUpdateInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Takvim adı"
          },
          "description": {
            "type": "string",
            "description": "Takvim açıklaması"
          },
          "color": {
            "type": "string",
            "description": "Takvim rengi (onaltılık biçim)"
          },
          "timezone": {
            "type": "string",
            "description": "Takvim saat dilimi"
          },
          "order": {
            "type": "integer",
            "description": "Takvim görüntüleme sırası"
          }
        }
      },
      "Folder": {
        "type": "object",
        "required": [
          "id",
          "path",
          "name",
          "parent",
          "uid_validity",
          "uid_next",
          "modify_index",
          "subscribed",
          "flags",
          "retention",
          "special_use",
          "created_at",
          "updated_at",
          "object"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Klasör Kimliği"
          },
          "path": {
            "type": "string",
            "description": "Tam klasör yolu"
          },
          "name": {
            "type": "string",
            "description": "Klasör adı (yolun son kısmı)"
          },
          "parent": {
            "type": "string",
            "nullable": true,
            "description": "Üst klasör yolu"
          },
          "uid_validity": {
            "type": "integer",
            "description": "IMAP UID geçerliliği"
          },
          "uid_next": {
            "type": "integer",
            "description": "Sonraki UID değeri"
          },
          "modify_index": {
            "type": "integer",
            "description": "Değişiklik endeksi"
          },
          "subscribed": {
            "type": "boolean",
            "description": "Klasöre abone olunup olunmadığı"
          },
          "flags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Klasör bayrakları"
          },
          "retention": {
            "type": "integer",
            "nullable": true,
            "description": "Mesaj saklama süresi"
          },
          "special_use": {
            "type": "string",
            "nullable": true,
            "description": "Özel kullanım tanımı"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "enum": [
              "folder"
            ]
          }
        },
        "example": {
          "id": "folder123",
          "path": "INBOX/Subfolder",
          "name": "Subfolder",
          "parent": "INBOX",
          "uid_validity": 123456,
          "uid_next": 1,
          "modify_index": 1,
          "subscribed": true,
          "flags": [],
          "retention": null,
          "special_use": null,
          "created_at": "2025-01-01T00:00:00.000Z",
          "updated_at": "2025-01-01T00:00:00.000Z",
          "object": "folder"
        }
      },
      "FolderInput": {
        "type": "object",
        "required": [
          "path"
        ],
        "properties": {
          "path": {
            "type": "string",
            "description": "Klasör yolu/adı"
          }
        }
      },
      "FolderUpdateInput": {
        "type": "object",
        "required": [
          "path"
        ],
        "properties": {
          "path": {
            "type": "string",
            "description": "Yeni klasör yolu/adı"
          }
        }
      },
      "Message": {
        "type": "object",
        "required": [
          "id",
          "root_id",
          "folder_id",
          "folder_path",
          "thread_id",
          "header_message_id",
          "is_unread",
          "is_flagged",
          "is_deleted",
          "is_draft",
          "is_junk",
          "is_copied",
          "is_searchable",
          "is_expired",
          "has_attachment",
          "retention_date",
          "internal_date",
          "header_date",
          "subject",
          "flags",
          "size",
          "uid",
          "modseq",
          "transaction",
          "remote_address",
          "object"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Mesaj Kimliği"
          },
          "root_id": {
            "type": "string",
            "description": "İş parçacığı için kök ileti kimliği"
          },
          "folder_id": {
            "type": "string",
            "description": "Mesajı içeren klasör kimliği"
          },
          "folder_path": {
            "type": "string",
            "description": "Mesajı içeren klasör yolu"
          },
          "thread_id": {
            "type": "string",
            "description": "Konuşma gruplandırması için konu başlığı kimliği"
          },
          "header_message_id": {
            "type": "string",
            "description": "İleti Kimliği başlık değeri"
          },
          "is_unread": {
            "type": "boolean",
            "description": "Mesaj okunmamış mı?"
          },
          "is_flagged": {
            "type": "boolean",
            "description": "Mesajın işaretlenip işaretlenmediği"
          },
          "is_deleted": {
            "type": "boolean",
            "description": "Mesaj silinir mi?"
          },
          "is_draft": {
            "type": "boolean",
            "description": "Mesajın taslak olup olmadığı"
          },
          "is_junk": {
            "type": "boolean",
            "description": "Mesajın önemsiz/spam olup olmadığı"
          },
          "is_copied": {
            "type": "boolean",
            "description": "Mesajın kopyalanıp kopyalanmadığı"
          },
          "is_searchable": {
            "type": "boolean",
            "description": "Mesajın aranabilir olup olmadığı"
          },
          "is_expired": {
            "type": "boolean",
            "description": "Mesajın süresi doldu mu?"
          },
          "has_attachment": {
            "type": "boolean",
            "description": "Mesajın ekleri var mı?"
          },
          "retention_date": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Mesaj saklama tarihi"
          },
          "internal_date": {
            "type": "string",
            "format": "date-time",
            "description": "Dahili tarih (IMAP)"
          },
          "header_date": {
            "type": "string",
            "format": "date-time",
            "description": "Mesaj başlıklarından tarih"
          },
          "subject": {
            "type": "string",
            "description": "Mesaj konusu"
          },
          "flags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "IMAP bayrakları"
          },
          "size": {
            "type": "integer",
            "description": "Mesaj boyutu (bayt cinsinden)"
          },
          "uid": {
            "type": "integer",
            "description": "IMAP UID"
          },
          "modseq": {
            "type": "integer",
            "description": "Modifikasyon dizisi"
          },
          "transaction": {
            "type": "string",
            "description": "İşlem türü"
          },
          "remote_address": {
            "type": "string",
            "description": "Uzak IP adresi"
          },
          "nodemailer": {
            "type": "object",
            "description": "Ayrıştırılmış ileti nesnesi (varsayılan olarak dahil edilir, hariç tutmak için ?nodemailer=false değerini ayarlayın)"
          },
          "raw": {
            "type": "string",
            "description": "Ham ileti içeriği (varsayılan olarak dahil edilir, hariç tutmak için ?raw=false değerini ayarlayın)"
          },
          "object": {
            "type": "string",
            "enum": [
              "message"
            ]
          }
        },
        "example": {
          "id": "message123",
          "root_id": "root123",
          "folder_id": "folder123",
          "folder_path": "INBOX",
          "thread_id": "thread123",
          "header_message_id": "<message123@example.com>",
          "is_unread": true,
          "is_flagged": false,
          "is_deleted": false,
          "is_draft": false,
          "is_junk": false,
          "is_copied": false,
          "is_searchable": true,
          "is_expired": false,
          "has_attachment": false,
          "retention_date": null,
          "internal_date": "2025-01-01T00:00:00.000Z",
          "header_date": "2025-01-01T00:00:00.000Z",
          "subject": "Test Message",
          "flags": [
            "\\Seen"
          ],
          "size": 1024,
          "uid": 1,
          "modseq": 1,
          "transaction": "API",
          "remote_address": "127.0.0.1",
          "object": "message"
        }
      },
      "MessageInput": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "email",
            "description": "Gönderen e-posta adresi"
          },
          "to": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "Alıcı e-posta adresleri"
          },
          "cc": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "CC alıcı e-posta adresleri"
          },
          "bcc": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "BCC alıcı e-posta adresleri"
          },
          "subject": {
            "type": "string",
            "description": "Mesaj konusu"
          },
          "text": {
            "type": "string",
            "description": "Düz metin içeriği"
          },
          "html": {
            "type": "string",
            "description": "HTML içeriği"
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Mesaj ekleri (Nodemailer biçimi)"
          },
          "folder": {
            "type": "string",
            "description": "Hedef klasör (varsayılan olarak GİRİŞ KUTUSU)"
          },
          "flags": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "description": "Mesajda ayarlanacak IMAP bayrakları"
          }
        }
      },
      "MessageUpdateInput": {
        "type": "object",
        "properties": {
          "flags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Mesajda ayarlanacak IMAP bayrakları"
          },
          "folder": {
            "type": "string",
            "description": "Mesajı bu klasöre taşı"
          }
        }
      },
      "Email": {
        "type": "object",
        "required": [
          "id",
          "object",
          "status",
          "alias",
          "domain",
          "user"
        ],
        "properties": {
          "is_redacted": {
            "type": "boolean"
          },
          "hard_bounces": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "soft_bounces": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "is_bounce": {
            "type": "boolean"
          },
          "alias": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "example": "sent"
          },
          "is_locked": {
            "type": "boolean"
          },
          "envelope": {
            "type": "object",
            "properties": {
              "from": {
                "type": "string",
                "format": "email"
              },
              "to": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            }
          },
          "messageId": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "subject": {
            "type": "string"
          },
          "accepted": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "example": "email"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "link": {
            "type": "string",
            "format": "uri"
          }
        },
        "example": {
          "is_redacted": true,
          "hard_bounces": [],
          "soft_bounces": [],
          "is_bounce": false,
          "alias": "67a180fxxxxxxxe46a3f0edf",
          "domain": "5efae85dxxxxxxxf4bb53c7a",
          "user": "5efabd3907xxxxxxx12890b8",
          "status": "sent",
          "is_locked": false,
          "envelope": {
            "from": "test@test.com",
            "to": [
              "test@test1.com"
            ]
          },
          "messageId": "1a04fee3-5230-4a85-9111-a2c376835885@shaunwarman.com",
          "date": "2025-06-04T03:32:19.000Z",
          "subject": "testing",
          "accepted": [
            "test@test1.com"
          ],
          "id": "683fbe4d5baef1b583a1xxxx",
          "object": "email",
          "created_at": "2025-06-04T03:32:29.138Z",
          "updated_at": "2025-06-04T03:32:33.847Z",
          "link": "https://forwardemail.net/my-account/emails/683fbe4d5baef1b583a11e54"
        }
      },
      "EmailList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Email"
        }
      },
      "SMTP": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "email",
            "description": "Gönderenin e-posta adresi (alan adının takma adı olarak bulunmalıdır)."
          },
          "to": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "'Kime' başlığı için virgülle ayrılmış liste veya alıcı dizisi."
          },
          "cc": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "'Cc' başlığı için virgülle ayrılmış liste veya alıcı dizisi."
          },
          "bcc": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "'Bcc' başlığı için virgülle ayrılmış liste veya alıcı dizisi."
          },
          "subject": {
            "type": "string",
            "description": "E-postanın konusu."
          },
          "text": {
            "type": "string",
            "description": "Mesajın düz metin versiyonu."
          },
          "html": {
            "type": "string",
            "description": "Mesajın HTML versiyonu."
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Bir dizi ek nesnesi (Nodemailer'ın ortak alanlarına bakın)."
          },
          "sender": {
            "type": "string",
            "format": "email",
            "description": "'Gönderen' başlığı için e-posta adresi."
          },
          "replyTo": {
            "type": "string",
            "format": "email",
            "description": "'Yanıtla' başlığı için e-posta adresi."
          },
          "inReplyTo": {
            "type": "string",
            "description": "Mesajın cevap olarak gönderildiği Mesaj Kimliği."
          },
          "references": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "description": "Boşlukla ayrılmış liste veya Mesaj Kimlikleri dizisi."
          },
          "attachDataUrls": {
            "type": "boolean",
            "description": "Doğruysa, HTML içeriğindeki verileri: görüntüleri gömülü eklere dönüştürür."
          },
          "watchHtml": {
            "type": "string",
            "description": "Mesajın Apple Watch'a özel HTML versiyonu."
          },
          "amp": {
            "type": "string",
            "description": "Mesajın AMP4EMAIL'e özgü HTML sürümü."
          },
          "icalEvent": {
            "type": "object",
            "description": "Alternatif mesaj içeriği olarak bir iCalendar etkinliği."
          },
          "alternatives": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Alternatif mesaj içeriklerinin bir dizisi."
          },
          "encoding": {
            "type": "string",
            "description": "Metin ve HTML dizeleri için kodlama (örneğin, 'utf-8', 'hex', 'base64')."
          },
          "raw": {
            "type": "string",
            "description": "Özel olarak oluşturulmuş RFC822 biçimli mesaj (Nodemailer oluşturma yerine)."
          },
          "textEncoding": {
            "type": "string",
            "enum": [
              "quoted-printable",
              "base64"
            ],
            "description": "Metin değerleri için zorunlu olarak kodlama kullanılması."
          },
          "priority": {
            "type": "string",
            "enum": [
              "high",
              "normal",
              "low"
            ],
            "description": "E-postanın öncelik düzeyi."
          },
          "headers": {
            "oneOf": [
              {
                "type": "object",
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            ],
            "description": "Ek başlık alanlarının nesnesi veya dizisi."
          },
          "messageId": {
            "type": "string",
            "description": "'Message-ID' başlığı için isteğe bağlı Message-ID."
          },
          "date": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "description": "İsteğe bağlı Tarih başlığı. 30 günden daha ileri bir tarih olamaz."
          },
          "list": {
            "type": "object",
            "description": "List-* başlıklarının isteğe bağlı nesnesi."
          }
        }
      },
      "Domain": {
        "type": "object",
        "properties": {
          "has_newsletter": {
            "type": "boolean"
          },
          "ignore_mx_check": {
            "type": "boolean"
          },
          "retention_days": {
            "type": "integer"
          },
          "has_regex": {
            "type": "boolean"
          },
          "has_catchall": {
            "type": "boolean"
          },
          "allowlist": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "denylist": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "restricted_alias_names": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "has_adult_content_protection": {
            "type": "boolean"
          },
          "has_phishing_protection": {
            "type": "boolean"
          },
          "has_executable_protection": {
            "type": "boolean"
          },
          "has_virus_protection": {
            "type": "boolean"
          },
          "is_catchall_regex_disabled": {
            "type": "boolean"
          },
          "has_smtp": {
            "type": "boolean"
          },
          "is_smtp_suspended": {
            "type": "boolean"
          },
          "plan": {
            "type": "string"
          },
          "max_recipients_per_alias": {
            "type": "integer"
          },
          "smtp_port": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "has_mx_record": {
            "type": "boolean"
          },
          "has_txt_record": {
            "type": "boolean"
          },
          "has_dkim_record": {
            "type": "boolean"
          },
          "has_return_path_record": {
            "type": "boolean"
          },
          "has_dmarc_record": {
            "type": "boolean"
          },
          "has_recipient_verification": {
            "type": "boolean"
          },
          "has_custom_verification": {
            "type": "boolean"
          },
          "verification_record": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "enum": [
              "domain"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "storage_used": {
            "type": "integer"
          },
          "storage_used_by_aliases": {
            "type": "integer"
          },
          "storage_quota": {
            "type": "integer"
          },
          "smtp_dns_records": {
            "type": "object",
            "properties": {
              "dkim": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              },
              "return_path": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              },
              "dmarc": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "link": {
            "type": "string",
            "format": "uri"
          }
        },
        "example": [
          {
            "has_newsletter": false,
            "ignore_mx_check": false,
            "retention_days": 0,
            "has_regex": false,
            "has_catchall": true,
            "allowlist": [],
            "denylist": [],
            "restricted_alias_names": [],
            "has_adult_content_protection": true,
            "has_phishing_protection": true,
            "has_executable_protection": true,
            "has_virus_protection": true,
            "is_catchall_regex_disabled": false,
            "has_smtp": false,
            "is_smtp_suspended": false,
            "plan": "team",
            "max_recipients_per_alias": 10,
            "smtp_port": "25",
            "name": "test.com",
            "has_mx_record": false,
            "has_txt_record": false,
            "has_dkim_record": false,
            "has_return_path_record": false,
            "has_dmarc_record": false,
            "has_recipient_verification": false,
            "has_custom_verification": false,
            "verification_record": "kcjg6vrO8Q",
            "id": "683f1172c4bad2524410b857",
            "object": "domain",
            "created_at": "2025-06-03T15:14:59.000Z",
            "updated_at": "2025-06-03T15:14:59.254Z",
            "storage_used": 0,
            "storage_used_by_aliases": 0,
            "storage_quota": 10737418240,
            "smtp_dns_records": {
              "dkim": {
                "name": "fe-ebf3212716._domainkey",
                "value": "v=DKIM1; k=rsa; p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCcG+YBDPhyH8bLmyflmU9w1klYDeWpEufIlVqyWqly9lC+J/ntkKn4gum28EeE6vR+55x4JFCR8qSaw0YO1eCRwBgpFB0kKzbELHh2i2TKKwrqB3gPLXp4q4lbcGX2eD6fPCRwckTHqmiOzMhX8GD60zVlEvabok4LJ1i/BOyh6wIDAQAB;"
              },
              "return_path": {
                "name": "fe-bounces",
                "value": "forwardemail.net"
              },
              "dmarc": {
                "name": "_dmarc",
                "value": "v=DMARC1; p=reject; pct=100; rua=mailto:dmarc-683f1172c4bad2524410b857@localhost;"
              }
            },
            "link": "http://localhost:3000/my-account/domains/test.com"
          }
        ]
      },
      "CreateDomainInput": {
        "type": "object",
        "required": [
          "domain"
        ],
        "properties": {
          "domain": {
            "type": "string",
            "description": "Tam nitelikli alan adı (FQDN) veya IP adresi"
          },
          "team_domain": {
            "type": "string",
            "nullable": true,
            "description": "Başka bir etki alanından aynı takıma atayın; etki alanı kimliği veya tam alan adı (FQDN) olabilir. Açıkça devre dışı bırakmak için \"none\" kullanın."
          },
          "plan": {
            "type": "string",
            "enum": [
              "free",
              "enhanced_protection",
              "team"
            ],
            "description": "Plan türü (varsayılan olarak 'ücretsiz' veya kullanıcının mevcut ücretli planıdır)"
          },
          "catchall": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "type": "string",
                "description": "E-posta adreslerinin ayrılmış listesi (virgül, boşluk veya yeni satırla ayrılmış)"
              }
            ],
            "description": "Varsayılan bir genel takma ad oluşturun (varsayılanı true'dur)"
          },
          "has_adult_content_protection": {
            "type": "boolean",
            "description": "Spam Tarayıcısının yetişkin içerik korumasını etkinleştirin"
          },
          "has_phishing_protection": {
            "type": "boolean",
            "description": "Spam Tarayıcısının kimlik avı korumasını etkinleştirin"
          },
          "has_executable_protection": {
            "type": "boolean",
            "description": "Spam Tarayıcısı yürütülebilir korumasını etkinleştirin"
          },
          "has_virus_protection": {
            "type": "boolean",
            "description": "Spam Tarayıcı virüs korumasını etkinleştirin"
          },
          "has_recipient_verification": {
            "type": "boolean",
            "description": "Takma ad alıcılarının e-posta doğrulama bağlantısına tıklamasını zorunlu kılın"
          },
          "ignore_mx_check": {
            "type": "boolean",
            "description": "Gelişmiş posta yönlendirme kurulumları için MX kayıt denetimini yoksay"
          },
          "retention_days": {
            "type": "integer",
            "minimum": 0,
            "maximum": 30,
            "description": "Giden SMTP günlüklerinin saklanacağı gün sayısı (0–30, varsayılan: 0)"
          },
          "bounce_webhook": {
            "oneOf": [
              {
                "type": "string",
                "format": "uri",
                "description": "Geri dönme olaylarını almak için Webhook URL'si"
              },
              {
                "type": "boolean",
                "enum": [
                  false
                ],
                "description": "Geri tepme web kancasını devre dışı bırak"
              }
            ]
          },
          "max_quota_per_alias": {
            "type": "string",
            "description": "Takma ad başına depolama maksimum kotası (örn. '1 GB')"
          }
        }
      },
      "UpdateDomainInput": {
        "type": "object",
        "properties": {
          "smtp_port": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ],
            "description": "SMTP yönlendirmesi için yapılandırılacak özel bağlantı noktası (varsayılan '25'tir)"
          },
          "has_adult_content_protection": {
            "type": "boolean",
            "description": "Bu etki alanında Spam Tarayıcısının yetişkinlere yönelik içerik korumasının etkinleştirilip etkinleştirilmeyeceği"
          },
          "has_phishing_protection": {
            "type": "boolean",
            "description": "Bu etki alanında Spam Tarayıcı kimlik avı korumasının etkinleştirilip etkinleştirilmeyeceği"
          },
          "has_executable_protection": {
            "type": "boolean",
            "description": "Bu etki alanında Spam Tarayıcısı yürütülebilir korumasının etkinleştirilip etkinleştirilmeyeceği"
          },
          "has_virus_protection": {
            "type": "boolean",
            "description": "Bu etki alanında Spam Tarayıcı virüs korumasının etkinleştirilip etkinleştirilmeyeceği"
          },
          "has_recipient_verification": {
            "type": "boolean",
            "description": "E-postaların iletilmesi için takma ad alıcılarının bir e-posta doğrulama bağlantısına tıklamasını zorunlu kılmak için küresel etki alanı varsayılanı"
          },
          "ignore_mx_check": {
            "type": "boolean",
            "description": "Alan adındaki MX kayıt denetiminin doğrulama için göz ardı edilip edilmeyeceği (çoğunlukla gelişmiş MX yönlendirme kurulumları için)"
          },
          "retention_days": {
            "type": "integer",
            "minimum": 0,
            "maximum": 30,
            "description": "Giden SMTP e-postalarının depolanacağı gün sayısı (0 = hemen temizle)"
          },
          "bounce_webhook": {
            "oneOf": [
              {
                "type": "string",
                "format": "uri"
              },
              {
                "type": "boolean",
                "enum": [
                  false
                ]
              }
            ],
            "description": "Geri dönme bildirimlerini almak için Webhook URL'sini veya devre dışı bırakmak için false değerini kullanın"
          },
          "max_quota_per_alias": {
            "type": "string",
            "description": "Takma ad başına depolama kotası (örneğin, '1 GB', baytlara ayrıştırılır)"
          }
        }
      },
      "Alias": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email"
              },
              "display_name": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "email",
              "display_name",
              "id"
            ]
          },
          "domain": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "id"
            ]
          },
          "name": {
            "type": "string"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "is_enabled": {
            "type": "boolean"
          },
          "has_recipient_verification": {
            "type": "boolean"
          },
          "verified_recipients": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "pending_recipients": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "recipients": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "enum": [
              "alias"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "storage_location": {
            "type": "string"
          },
          "has_imap": {
            "type": "boolean"
          }
        },
        "required": [
          "user",
          "domain",
          "name",
          "labels",
          "is_enabled",
          "has_recipient_verification",
          "verified_recipients",
          "pending_recipients",
          "recipients",
          "id",
          "object",
          "created_at",
          "updated_at",
          "storage_location",
          "has_imap"
        ],
        "example": {
          "user": {
            "email": "test@test.com",
            "display_name": "test@test.com",
            "id": "5efabd39xxxxxxx4512890b8"
          },
          "domain": {
            "name": "mailsire.com",
            "id": "5e3c0550xxxxxxx09b7ba023"
          },
          "name": "abc123",
          "labels": [],
          "is_enabled": true,
          "has_recipient_verification": false,
          "verified_recipients": [],
          "pending_recipients": [],
          "recipients": [
            "abc@test1.com"
          ],
          "id": "62fa3dcxxxxxxx79dda83ff2",
          "object": "alias",
          "created_at": "2022-08-15T12:36:26.593Z",
          "updated_at": "2022-08-15T12:36:26.593Z",
          "storage_location": "storage_loc",
          "has_imap": false
        }
      },
      "AliasInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Takma ad (sağlanmazsa veya boş bırakılırsa, rastgele bir takma ad oluşturulur)"
          },
          "recipients": {
            "oneOf": [
              {
                "type": "string",
                "description": "Geçerli e-posta adresleri, tam alan adları (FQDN), IP'ler veya webhook URL'lerinin satır sonu/boşluk/virgülle ayrılmış dizesi"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                },
                "description": "Geçerli alıcıların dizisi"
              }
            ],
            "description": "Alıcı listesi. Sağlanmamışsa veya boşsa, varsayılan olarak talep edenin e-posta adresi kullanılır."
          },
          "description": {
            "type": "string",
            "description": "Takma ad açıklaması"
          },
          "labels": {
            "oneOf": [
              {
                "type": "string",
                "description": "Satır sonu/boşluk/virgülle ayrılmış etiket dizisi"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Etiket dizisi"
              }
            ]
          },
          "has_recipient_verification": {
            "type": "boolean",
            "description": "Alıcıların doğrulama bağlantısına tıklamasını gerektir (varsayılan olarak alan adı ayarı)"
          },
          "is_enabled": {
            "type": "boolean",
            "description": "Bu takma adın etkinleştirilmesi mi yoksa devre dışı bırakılması mı gerektiği"
          },
          "error_code_if_disabled": {
            "type": "number",
            "enum": [
              250,
              421,
              550
            ],
            "description": "Takma ad devre dışıysa hata kodu. Varsayılan değer 250'dir"
          },
          "has_imap": {
            "type": "boolean",
            "description": "Bu takma ad için IMAP depolama alanını etkinleştirin veya devre dışı bırakın"
          },
          "has_pgp": {
            "type": "boolean",
            "description": "Bu takma ad için OpenPGP şifrelemesini etkinleştirin veya devre dışı bırakın"
          },
          "public_key": {
            "type": "string",
            "description": "ASCII Armor formatında OpenPGP genel anahtarı"
          },
          "max_quota": {
            "type": "string",
            "description": "Depolama maksimum kotası (örneğin '1 GB')"
          },
          "vacation_responder_is_enabled": {
            "type": "boolean",
            "description": "Tatil yanıtlayıcısını etkinleştirin veya devre dışı bırakın"
          },
          "vacation_responder_start_date": {
            "type": "string",
            "description": "Tatil yanıtlayıcısı için başlangıç tarihi (örneğin 'YYYY-AA-GG')"
          },
          "vacation_responder_end_date": {
            "type": "string",
            "description": "Tatil yanıtlayıcısı için bitiş tarihi (örneğin 'YYYY-AA-GG')"
          },
          "vacation_responder_subject": {
            "type": "string",
            "description": "Tatil yanıtlayıcısı için düz metin konusu"
          },
          "vacation_responder_message": {
            "type": "string",
            "description": "Tatil yanıtlayıcısı için düz metin mesajı"
          }
        }
      },
      "AliasUpdateInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Takma ad"
          },
          "recipients": {
            "oneOf": [
              {
                "type": "string",
                "description": "Geçerli e-posta adresleri, tam alan adları (FQDN), IP'ler veya webhook URL'lerinden oluşan satır sonu/boşluk/virgülle ayrılmış dize"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                },
                "description": "Geçerli alıcıların dizisi"
              }
            ]
          },
          "description": {
            "type": "string",
            "description": "Takma ad açıklaması"
          },
          "labels": {
            "oneOf": [
              {
                "type": "string",
                "description": "Satır sonu/boşluk/virgülle ayrılmış etiket dizisi"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Etiket dizisi"
              }
            ]
          },
          "has_recipient_verification": {
            "type": "boolean",
            "description": "Alıcıların doğrulama bağlantısına tıklamasını gerektir (varsayılan olarak alan adı ayarı)"
          },
          "is_enabled": {
            "type": "boolean",
            "description": "Takma adı etkinleştir veya devre dışı bırak"
          },
          "error_code_if_disabled": {
            "type": "number",
            "enum": [
              250,
              421,
              550
            ],
            "description": "Takma ad devre dışı bırakıldığında kullanılacak hata kodu (varsayılanı 250'dir)"
          },
          "has_imap": {
            "type": "boolean",
            "description": "IMAP depolama alanını etkinleştirin veya devre dışı bırakın"
          },
          "has_pgp": {
            "type": "boolean",
            "description": "OpenPGP şifrelemesini etkinleştirin veya devre dışı bırakın"
          },
          "public_key": {
            "type": "string",
            "description": "ASCII Armor formatında OpenPGP genel anahtarı"
          },
          "max_quota": {
            "type": "string",
            "description": "Depolama maksimum kotası (örneğin, '1 GB')"
          },
          "vacation_responder_is_enabled": {
            "type": "boolean",
            "description": "Tatil yanıtlayıcısını etkinleştirin veya devre dışı bırakın"
          },
          "vacation_responder_start_date": {
            "type": "string",
            "description": "Tatil yanıtlayıcısının başlangıç tarihi (örneğin YYYY-AA-GG)"
          },
          "vacation_responder_end_date": {
            "type": "string",
            "description": "Tatil yanıtlayıcısının bitiş tarihi (örneğin YYYY-AA-GG)"
          },
          "vacation_responder_subject": {
            "type": "string",
            "description": "Tatil yanıtlayıcısının düz metin konusu"
          },
          "vacation_responder_message": {
            "type": "string",
            "description": "Tatil yanıtlayıcısının düz metin mesajı"
          }
        }
      },
      "GenerateAliasPasswordInput": {
        "type": "object",
        "properties": {
          "new_password": {
            "type": "string",
            "description": "Takma ad için kullanacağınız özel yeni parolanız"
          },
          "password": {
            "type": "string",
            "description": "Posta kutusu depolama alanını silmeden değiştirmek için takma adın mevcut parolası"
          },
          "is_override": {
            "type": "boolean",
            "description": "Mevcut parolayı geçersiz kılın ve IMAP depolama alanını silin (dikkatli kullanın)"
          },
          "emailed_instructions": {
            "type": "string",
            "format": "email",
            "description": "Takma ad parolası ve kurulum talimatlarının gönderileceği e-posta adresi"
          }
        }
      },
      "EmailLimit": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Gönderilen e-postaların güncel sayısı"
          },
          "limit": {
            "type": "integer",
            "description": "İzin verilen maksimum e-posta sayısı"
          }
        }
      },
      "Member": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Üye Kimliği"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Üyenin e-posta adresi"
          },
          "role": {
            "type": "string",
            "description": "Üyenin rolü"
          }
        }
      },
      "Invite": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "Davet edilen e-posta adresi"
          }
        }
      }
    },
    "parameters": {
      "page": {
        "name": "page",
        "in": "query",
        "description": "Döndürülecek sonuçların sayfası. Belirtilmezse, değer 1 olacaktır. 1'den büyük veya ona eşit bir sayı olmalıdır.",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "default": 1
        }
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "description": "Sayfa başına döndürülecek sonuç sayısı. Belirtilmediği takdirde varsayılan değer 10'dur. 1'den büyük veya ona eşit ve 50'den küçük veya ona eşit bir sayı olmalıdır.",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 50,
          "default": 10
        }
      },
      "pagination": {
        "name": "pagination",
        "in": "query",
        "description": "1 Kasım 2024'ten önce sayfalandırmaya katılın",
        "schema": {
          "type": "boolean"
        }
      },
      "domainId": {
        "name": "domain_id",
        "in": "path",
        "required": true,
        "description": "Alan Adı Kimliği",
        "schema": {
          "type": "string"
        }
      },
      "aliasId": {
        "name": "alias_id",
        "in": "path",
        "required": true,
        "description": "Takma ad kimliği",
        "schema": {
          "type": "string"
        }
      },
      "memberId": {
        "name": "member_id",
        "in": "path",
        "required": true,
        "description": "Üye Kimliği",
        "schema": {
          "type": "string"
        }
      },
      "emailId": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "E-posta kimliği",
        "schema": {
          "type": "string"
        }
      },
      "contactId": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "İletişim Kimliği",
        "schema": {
          "type": "string"
        }
      },
      "calendarId": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "Takvim Kimliği",
        "schema": {
          "type": "string"
        }
      },
      "folderId": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "Klasör kimliği veya yolu",
        "schema": {
          "type": "string"
        }
      },
      "messageId": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "Mesaj Kimliği",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "Error": {
        "description": "Error response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "BadRequest": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotFound": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Conflict": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "PreconditionFailed": {
        "description": "Precondition Failed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "TooManyRequests": {
        "description": "Too Many Requests",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotImplemented": {
        "description": "Not Implemented",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "BadGateway": {
        "description": "Bad Gateway",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "ServiceUnavailable": {
        "description": "Service Unavailable",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "GatewayTimeout": {
        "description": "Gateway Time-out",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  },
  "paths": {
    "/v1/account": {
      "get": {
        "tags": [
          "Hesap"
        ],
        "summary": "Hesabı al",
        "description": "Hesap bilgilerinizi alın.",
        "operationId": "retrieveAccount",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Account retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Hesap"
        ],
        "summary": "Hesabı güncelle",
        "description": "Hesap bilgilerinizi güncelleyin.",
        "operationId": "updateAccount",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "display_name": {
                    "type": "string",
                    "description": "Ekran adı"
                  },
                  "locale": {
                    "type": "string",
                    "description": "Yerel tercih"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/contacts": {
      "get": {
        "tags": [
          "İletişim"
        ],
        "summary": "Kişileri listele",
        "description": "Kimliği doğrulanmış takma ad için tüm kişilerin listesini alın. Bu uç nokta, sayfalandırmayı destekler ve kişileri CardDAV biçiminde döndürür.",
        "operationId": "listContacts",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Contacts retrieved successfully",
            "headers": {
              "X-Page-Count": {
                "description": "Total number of pages",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Current": {
                "description": "Current page number",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Size": {
                "description": "Number of items on current page",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Item-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Contact"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "İletişim"
        ],
        "summary": "İletişim oluştur",
        "description": "Yeni bir kişi oluşturun. Doğrudan vCard içeriği sağlayabilir veya vCard formatına dönüştürülecek ayrı kişi alanları sağlayabilirsiniz. Aynı kimliğe sahip bir kişi zaten mevcutsa, bir çakışma hatası döndürülür.",
        "operationId": "createContact",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contact created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/contacts/{id}": {
      "get": {
        "tags": [
          "İletişim"
        ],
        "summary": "İletişim bilgilerini al",
        "description": "Belirli bir kişiyi kimliğine göre alın. Kişi, vCard içeriği ve ayrıştırılmış alanlarla standart Kişi biçiminde döndürülür.",
        "operationId": "retrieveContact",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/contactId"
          }
        ],
        "responses": {
          "200": {
            "description": "Contact retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "İletişim"
        ],
        "summary": "İletişim bilgilerini güncelle",
        "description": "Mevcut bir kişiyi güncelleyin. Güncellenmiş vCard içeriği veya güncellenecek ayrı alanlar sağlayabilirsiniz. Ayrı alanlar sağlanırsa, kişinin vCard'ı yeniden oluşturulur.",
        "operationId": "updateContact",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/contactId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "İletişim"
        ],
        "summary": "Kişiyi sil",
        "description": "Belirli bir kişiyi kalıcı olarak silin. Bu işlem geri alınamaz.",
        "operationId": "deleteContact",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/contactId"
          }
        ],
        "responses": {
          "200": {
            "description": "Contact deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/calendars": {
      "get": {
        "tags": [
          "Takvimler"
        ],
        "summary": "Liste takvimleri",
        "description": "Kimliği doğrulanmış takma ad için tüm takvimlerin listesini alın. Bu uç nokta, sayfalandırmayı destekler ve takvimleri CalDAV biçiminde döndürür.",
        "operationId": "listCalendars",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Calendars retrieved successfully",
            "headers": {
              "X-Page-Count": {
                "description": "Total number of pages",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Current": {
                "description": "Current page number",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Size": {
                "description": "Number of items on current page",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Item-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Calendar"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Takvimler"
        ],
        "summary": "Takvim oluştur",
        "description": "Yeni bir takvim oluşturun. Takvim adı zorunludur; renk, saat dilimi ve açıklama gibi diğer özellikler ise isteğe bağlıdır. Aynı ada sahip bir takvim zaten mevcutsa, çakışma hatası döndürülür.",
        "operationId": "createCalendar",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Calendar created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Calendar"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/calendars/{id}": {
      "get": {
        "tags": [
          "Takvimler"
        ],
        "summary": "Takvimi al",
        "description": "Belirli bir takvimi kimliğine göre alın. Takvim, adı, açıklaması, rengi, saat dilimi ve sırası dahil olmak üzere tüm özellikleriyle birlikte döndürülür.",
        "operationId": "retrieveCalendar",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/calendarId"
          }
        ],
        "responses": {
          "200": {
            "description": "Calendar retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Calendar"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Takvimler"
        ],
        "summary": "Takvimi güncelle",
        "description": "Mevcut bir takvimi güncelleyin. Ad, açıklama, renk, saat dilimi ve sıra dahil olmak üzere takvim özelliklerinin herhangi birini güncelleyebilirsiniz. Adı zaten mevcut olan bir adla değiştirirseniz, çakışma hatası döndürülür.",
        "operationId": "updateCalendar",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/calendarId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Calendar updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Calendar"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Takvimler"
        ],
        "summary": "Takvimi sil",
        "description": "Belirli bir takvimi kalıcı olarak silin. Bu işlem geri alınamaz ve takvimdeki tüm etkinlikleri de siler.",
        "operationId": "deleteCalendar",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/calendarId"
          }
        ],
        "responses": {
          "200": {
            "description": "Calendar deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Calendar"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/folders": {
      "get": {
        "tags": [
          "Klasörler"
        ],
        "summary": "Klasörleri listele",
        "description": "Kimliği doğrulanmış takma ad için tüm IMAP klasörlerinin/posta kutularının listesini alın. Bu uç nokta, abonelik durumuna göre sayfalandırma ve filtrelemeyi destekler.",
        "operationId": "listFolders",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "name": "subscribed",
            "in": "query",
            "description": "Klasörleri abonelik durumuna göre filtrele",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Folders retrieved successfully",
            "headers": {
              "X-Page-Count": {
                "description": "Total number of pages",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Current": {
                "description": "Current page number",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Size": {
                "description": "Number of items on current page",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Item-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Folder"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Klasörler"
        ],
        "summary": "Klasör oluştur",
        "description": "Yeni bir IMAP klasörü/posta kutusu oluşturun. Klasör yolu gereklidir ve üst klasörleri içerebilir (örneğin, 'GİRİŞ KUTUSU/Alt Klasör'). Üst klasörler mevcut değilse, otomatik olarak oluşturulurlar.",
        "operationId": "createFolder",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FolderInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Folder created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/folders/{id}": {
      "get": {
        "tags": [
          "Klasörler"
        ],
        "summary": "Klasörü al",
        "description": "Belirli bir klasörü kimliğine veya yoluna göre alın. Tanımlayıcı olarak klasörün ObjectID'sini veya tam yolunu (örneğin, 'GİRİŞ KUTUSU/Alt Klasör') kullanabilirsiniz.",
        "operationId": "retrieveFolder",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/folderId"
          }
        ],
        "responses": {
          "200": {
            "description": "Folder retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Klasörler"
        ],
        "summary": "Güncelleme klasörü",
        "description": "Mevcut bir klasörü güncelleyin/yeniden adlandırın. Bu işlem, klasörü istek gövdesinde belirtilen yeni yola yeniden adlandırır. Tanımlayıcı olarak klasörün ObjectID'sini veya geçerli yolunu kullanabilirsiniz.",
        "operationId": "updateFolder",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/folderId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FolderUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Folder updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Klasörler"
        ],
        "summary": "Klasörü sil",
        "description": "Belirli bir klasörü kalıcı olarak silin. Bu işlem geri alınamaz ve klasördeki tüm iletileri de siler. Tanımlayıcı olarak klasörün ObjectID'sini veya yolunu kullanabilirsiniz.",
        "operationId": "deleteFolder",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/folderId"
          }
        ],
        "responses": {
          "200": {
            "description": "Folder deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/messages": {
      "get": {
        "tags": [
          "Mesajlar"
        ],
        "summary": "Mesajları listele ve ara",
        "description": "Gelişmiş arama ve filtreleme özellikleriyle mesajların bir listesini alın. Bu uç nokta, mesaj içeriği, başlıklar, işaretler ve meta veriler arasında sayfalama ve kapsamlı aramayı destekler. Klasöre, işaretlere, içeriğe, başlıklara, tarih aralıklarına, boyuta ve daha fazlasına göre arama yapabilirsiniz.",
        "operationId": "listMessages",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "name": "folder",
            "in": "query",
            "description": "İletileri klasör yoluna göre filtrele",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_unread",
            "in": "query",
            "description": "Okunma durumuna göre filtrele",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_flagged",
            "in": "query",
            "description": "İşaretli duruma göre filtrele",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_deleted",
            "in": "query",
            "description": "Silinen durumuna göre filtrele",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_draft",
            "in": "query",
            "description": "Taslak durumuna göre filtrele",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_junk",
            "in": "query",
            "description": "Önemsiz/spam durumuna göre filtrele",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_copied",
            "in": "query",
            "description": "Kopyalanan duruma göre filtrele",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_searchable",
            "in": "query",
            "description": "Aranabilir duruma göre filtrele",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_expired",
            "in": "query",
            "description": "Süresi dolmuş durumuna göre filtrele",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "has_attachments",
            "in": "query",
            "description": "Ek varlığına göre filtrele",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "has_attachment",
            "in": "query",
            "description": "Ek varlığına göre filtrele (has_attachments için takma ad)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "subject",
            "in": "query",
            "description": "Mesaj konusuna göre ara",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "query",
            "description": "Mesaj gövdesinde/metninde ara",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "text",
            "in": "query",
            "description": "Mesaj metninde arama (gövde için takma ad)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "headers",
            "in": "query",
            "description": "Tüm mesaj başlıklarında ara",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "message_id",
            "in": "query",
            "description": "Mesaj Kimliği başlığına göre arama",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Başlıklar ve metinler arasında genel arama",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Genel arama (arama takma adı)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "since",
            "in": "query",
            "description": "Bu tarihten itibaren iletileri filtrele (ISO 8601 formatı)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Bu tarihten önceki mesajları filtrele (ISO 8601 formatı)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "min_size",
            "in": "query",
            "description": "Minimum bayt boyutundaki iletileri filtrele",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "max_size",
            "in": "query",
            "description": "Maksimum bayt boyutundaki mesajları filtrele",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Başlığa göre ara",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Başlığa göre ara",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cc",
            "in": "query",
            "description": "CC başlığına göre arama",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bcc",
            "in": "query",
            "description": "BCC başlığına göre arama",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Tarih başlığına göre arama",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reply-to",
            "in": "query",
            "description": "Yanıtla-Başlığına Göre Arama",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Messages retrieved successfully",
            "headers": {
              "X-Page-Count": {
                "description": "Total number of pages",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Current": {
                "description": "Current page number",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Size": {
                "description": "Number of items on current page",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Item-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Mesajlar"
        ],
        "summary": "Mesaj oluştur",
        "description": "Bir klasöre yeni bir mesaj oluşturun/ekleyin. Bu uç nokta, standart Nodemailer mesaj biçimini kabul eder ve hedef klasörü ve başlangıç işaretlerini belirtmenize olanak tanır. Hedef klasör mevcut değilse, otomatik olarak oluşturulur.",
        "operationId": "createMessage",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Message created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/messages/{id}": {
      "get": {
        "tags": [
          "Mesajlar"
        ],
        "summary": "Mesajı al",
        "description": "Belirli bir mesajı kimliğine göre alın. Varsayılan olarak, yanıt ayrıştırılmış Nodemailer nesnesini ve ham mesaj içeriğini içerir. Sorgu parametrelerini kullanarak nelerin dahil edileceğini kontrol edebilirsiniz.",
        "operationId": "retrieveMessage",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/messageId"
          },
          {
            "name": "eml",
            "in": "query",
            "description": "JSON yerine ham EML biçimini döndür",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "nodemailer",
            "in": "query",
            "description": "Ayrıştırılmış Nodemailer nesnesini dahil et",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "attachments",
            "in": "query",
            "description": "Nodemailer nesnesine ekleri dahil et",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "raw",
            "in": "query",
            "description": "Ham mesaj içeriğini ekle",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Message retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              },
              "message/rfc822": {
                "description": "Raw EML format (when ?eml=true)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Mesajlar"
        ],
        "summary": "Güncelleme mesajı",
        "description": "Mevcut bir mesajı güncelleyin. Mesaj işaretlerini değiştirebilir veya farklı bir klasöre taşıyabilirsiniz. Hedef klasör mevcut değilse, otomatik olarak oluşturulur.",
        "operationId": "updateMessage",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/messageId"
          },
          {
            "name": "eml",
            "in": "query",
            "description": "JSON yerine ham EML biçimini döndür",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              },
              "message/rfc822": {
                "description": "Raw EML format (when ?eml=true)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Mesajlar"
        ],
        "summary": "Mesajı sil",
        "description": "Belirli bir mesajı kalıcı olarak silin. Bu işlem geri alınamaz ve mesajı depolama alanından kalıcı olarak kaldırır. Mesajları genellikle Çöp Kutusu'na taşıyan IMAP istemcilerinin aksine, bu uç nokta kalıcı silme işlemi gerçekleştirir.",
        "operationId": "deleteMessage",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/messageId"
          }
        ],
        "responses": {
          "200": {
            "description": "Message deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/logs/download": {
      "get": {
        "summary": "Günlükleri indirin",
        "description": "**Günlükleri İndir**\n\nAçıklama: API'miz, hesabınız için günlükleri programatik olarak indirmenize olanak tanır. Bu uç noktaya bir istek gönderdiğinizde, hesabınızdaki tüm günlükler işlenir ve tamamlandığında ek olarak (Gzip sıkıştırılmış CSV elektronik tablo dosyası) size e-postayla gönderilir.\n\nBu, bir Cron işi ile arka plan işleri oluşturmanıza veya istediğiniz zaman günlükleri almak için Node.js iş planlama yazılımı Bree'yi kullanmanıza olanak tanır. Bu uç noktanın günlük `10` istekle sınırlı olduğunu unutmayın.\n\nEk, `email-deliverability-logs-YYYY-AA-GG-s-dd-A-z.csv.gz` dosyasının küçük harfli biçimidir ve e-postanın kendisi, alınan günlüklerin kısa bir özetini içerir.",
        "tags": [
          "Günlükler"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "query",
            "description": "Günlükleri tam nitelikli etki alanına (\"FQDN\") göre filtreleyin. Belirtilmezse, tüm etki alanlarındaki tüm günlükler alınacaktır.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Günlükleri e-postaya, etki alanına, takma ada, IP adresine veya tarihe (A/Y, A/G/YY, A-G, A-G-YY veya A.G.YY biçimi) göre arayın.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bounce_category",
            "in": "query",
            "description": "Belirli bir geri dönüş kategorisine göre (örneğin \"engelleme listesi\") günlükleri arayın.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "response_code",
            "in": "query",
            "description": "Belirli bir hata yanıt koduna göre (örneğin 421 veya 550) günlükleri arayın.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Logs will be emailed as an attachment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Logs will be emailed to you shortly"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/v1/emails": {
      "get": {
        "summary": "Giden SMTP e-postalarını listeleyin",
        "description": "**Giden SMTP e-postalarını listele**\n\nBu uç noktanın, bir e-postanın `message`, `headers` veya `rejectedErrors` için özellik değerleri döndürmediğini unutmayın.\n\nBu özellikleri ve değerlerini döndürmek için lütfen bir e-posta kimliğiyle [E-postayı al](https://github.com/forwardemail/forwardemail.net/blob/master/app/views/api/index.md#retrieve-email) uç noktasını kullanın.",
        "tags": [
          "E-postalar"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "E-postaları meta verilere göre arayın.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "domain",
            "in": "query",
            "description": "Alan adına göre e-postaları arayın.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Belirli bir alana göre sırala (tek bir tire ile önek ekle - o alanın ters yönünde sıralamak için). Ayarlanmamışsa varsayılan olarak created_at olur.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Daha fazla bilgi için Sayfalandırmaya bakın.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Daha fazla bilgi için Sayfalandırmaya bakın.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of outbound SMTP emails",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Email"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "summary": "Giden SMTP e-postası oluşturun",
        "description": "E-posta oluşturma API'miz, Nodemailer'ın mesaj seçeneği yapılandırmasından esinlenmiştir ve bu yapılandırmayı kullanır. Lütfen aşağıdaki tüm gövde parametreleri için [Nodemailer mesaj yapılandırmasına](https://nodemailer.com/message/) bakın.\n\n`Envelope` ve `dkim` hariç (bunları sizin için otomatik olarak ayarladığımız için), tüm Nodemailer seçeneklerini desteklediğimizi unutmayın. Güvenlik amacıyla `disableFileAccess` ve `disableUrlAccess` seçeneklerini otomatik olarak `true` olarak ayarlıyoruz.\n\nBaşlıklar dahil olmak üzere ham e-postanızla birlikte `raw` seçeneğini tek başına iletmeli veya aşağıdaki gövde parametresi seçeneklerini ayrı ayrı iletmelisiniz.\n\nBu API uç noktası, başlıklarda bulunan emojileri sizin için otomatik olarak kodlayacaktır (örneğin, `Konu: 🤓 Merhaba` şeklinde bir konu satırı otomatik olarak `Konu: =?UTF-8?Q?=F0=9F=A4=93?= Merhaba` şeklinde dönüştürülür). Amacımız, son derece geliştirici dostu ve sahte metinlere karşı dayanıklı bir e-posta API'si oluşturmaktı.",
        "tags": [
          "E-postalar"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SMTP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email sent successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/emails/limit": {
      "get": {
        "summary": "Giden SMTP e-posta sınırını alın",
        "description": "Bu, hesap bazında günlük SMTP giden mesajlarının sayısını içeren `count` ve `limit` değerlerini içeren bir JSON nesnesi döndüren basit bir uç noktadır.",
        "tags": [
          "E-postalar"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Email limit information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailLimit"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/emails/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/emailId"
        }
      ],
      "get": {
        "summary": "Giden SMTP e-postasını al",
        "description": "Belirli bir giden SMTP e-postasını alın.",
        "tags": [
          "E-postalar"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Email retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Giden SMTP e-postasını sil",
        "description": "E-posta silme işlemi, yalnızca mevcut durum ``bekliyor``, ``sırada`` veya ``ertelenmiş`` ise durumu ``reddedildi`` olarak ayarlar (ve daha sonra kuyrukta işlemez). E-postaları oluşturulduktan ve/veya gönderildikten 30 gün sonra otomatik olarak temizleyebiliriz; bu nedenle, giden SMTP e-postalarının bir kopyasını istemcinizde, veritabanınızda veya uygulamanızda saklamalısınız. İsterseniz veritabanınızda e-posta kimliği değerimize başvurabilirsiniz; bu değer hem [E-posta oluştur](https://github.com/forwardemail/forwardemail.net/blob/master/app/views/api/index.md#create-email) hem de [E-posta al](https://github.com/forwardemail/forwardemail.net/blob/master/app/views/api/index.md#retrieve-email) uç noktalarından döndürülür.",
        "tags": [
          "E-postalar"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Email deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains": {
      "get": {
        "summary": "Alan adlarını listele",
        "description": "> [!NOTE]\n>1 Kasım 2024 itibarıyla, Liste alan adları ve Liste alan adı takma adları için API uç noktaları, sayfa başına maksimum `1000` sonuç içerecektir. Bu davranışı erkenden etkinleştirmek isterseniz, uç nokta sorgusu için URL'ye ek bir sorgu dizesi parametresi olarak `?paginate=true` değerini iletebilirsiniz. Daha fazla bilgi için Sayfalandırma bölümüne bakın.",
        "tags": [
          "Alan Adları"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Alan adlarını meta verilere göre arayın.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "domain",
            "in": "query",
            "description": "Alan adına göre alan adı arayın.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Belirli bir alana göre sırala (tek bir tire ile önek ekle - o alanın ters yönünde sıralamak için). Ayarlanmamışsa varsayılan olarak created_at olur.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Daha fazla bilgi için Sayfalandırmaya bakın.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Daha fazla bilgi için Sayfalandırmaya bakın.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of domains",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "summary": "Alan adı oluştur",
        "description": "Sistemde yeni bir alan adı oluşturur. Bu uç nokta, platformla kullanılmak üzere tam nitelikli bir alan adı (FQDN) veya IP adresi kaydetmenize olanak tanır.\n\nİsteğe bağlı yapılandırma seçenekleri arasında alan adını mevcut bir ekibe atamak, bir plan türü belirlemek (örneğin, ücretsiz, gelişmiş koruma veya ekip) ve spam filtreleme, virüs tarama ve alıcı doğrulama gibi gelişmiş korumaları yapılandırmak bulunur. Ayrıca, varsayılan olarak her şeyi kapsayan bir takma ad oluşturulup oluşturulmayacağını yapılandırabilir, SMTP hataları için özel bir geri dönüş webhook URL'si ayarlayabilir ve bu alan adındaki e-posta takma adları için depolama kotası sınırları tanımlayabilirsiniz. Bu uç nokta, alan adı düzeyinde doğrulama ve sağlama gerçekleştirir. `ignore_mx_check` seçeneği etkinleştirilirse, MX kaydı doğrulaması atlanır (yalnızca gelişmiş yönlendirme kurulumları için önerilir). Yanıt, yapılandırma için gereken DNS kayıtları da dahil olmak üzere oluşturulan alan adı nesnesinin tüm ayrıntılarını içerir.",
        "tags": [
          "Alan Adları"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDomainInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/v1/domains/{domain_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        }
      ],
      "get": {
        "summary": "Alan adını al",
        "description": "Belirli bir etki alanını alın",
        "tags": [
          "Alan Adları"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "Alan adını güncelle",
        "description": "Belirli bir etki alanını güncelleyin.",
        "tags": [
          "Alan Adları"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDomainInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Alan adını sil",
        "description": "Belirli bir etki alanını silin.",
        "tags": [
          "Alan Adları"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Domain deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/verify-records": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        }
      ],
      "get": {
        "summary": "Alan adı kayıtlarını doğrulayın",
        "description": "Belirli bir etki alanı için DNS kayıtlarını doğrulayın.",
        "tags": [
          "Alan Adları"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "DNS records successfully verified",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Domain's DNS records have been verified."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/verify-smtp": {
      "get": {
        "summary": "Alan SMTP kayıtlarını doğrulayın",
        "description": "Belirtilen etki alanı için SMTP ile ilgili DNS kayıtlarını doğrular.",
        "operationId": "verifySmtpRecords",
        "tags": [
          "Alan Adları"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "description": "Doğrulanması gereken tam nitelikli alan adı (FQDN)",
            "schema": {
              "type": "string",
              "format": "hostname"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "SMTP records successfully verified",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "You have successfully configured and verified DNS records for outbound SMTP."
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/catch-all-passwords": {
      "post": {
        "summary": "Alan adı genelinde kapsayıcı parola oluşturun",
        "description": "Alan adı genelinde geçerli bir parola oluşturur. Parola girilmezse, güvenli ve rastgele bir parola oluşturulur.",
        "tags": [
          "Alan Adları"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Her şeyi kapsayan parolanın oluşturulacağı alan adı"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "new_password": {
                    "type": "string",
                    "description": "Alan adı genelinde geçerli parola için kullanacağınız özel yeni parolanız. Güçlü bir parola oluşturmak için boş bırakın."
                  },
                  "description": {
                    "type": "string",
                    "description": "Açıklama yalnızca organizasyon amaçlıdır."
                  }
                }
              },
              "example": {
                "new_password": "myCustomStrongPassword123!",
                "description": "Password for team-wide access"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created a catch-all password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of the created catch-all password"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the catch-all password"
                    }
                  },
                  "required": [
                    "id",
                    "description"
                  ]
                },
                "example": {
                  "id": "6841ec462bd583c73d0632dd",
                  "username": "*@quas.com",
                  "password": "6Yq14XhAUaupdZE",
                  "description": "foo bar"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Alan adı genelindeki tüm parolaları listele",
        "description": "Belirtilen etki alanı için şu anda yapılandırılmış olan etki alanı genelindeki tüm parolaların listesini döndürür.",
        "operationId": "listCatchAllPasswords",
        "tags": [
          "Alan Adları"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "description": "Tüm parolaları listelemek için tam nitelikli alan adı (FQDN)",
            "schema": {
              "type": "string",
              "format": "hostname"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of domain-wide catch-all passwords",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier for the item",
                        "example": "6841ec442bd583c73d0632d0"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the item",
                        "example": "foo bar"
                      }
                    },
                    "required": [
                      "id",
                      "description"
                    ]
                  },
                  "example": [
                    {
                      "id": "6841ec442bd583c73d0632d0",
                      "description": ""
                    },
                    {
                      "id": "6841ec462bd583c73d0632dd",
                      "description": "foo bar"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/catch-all-passwords/{token_id}": {
      "delete": {
        "summary": "Alan adı genelinde geçerli olan genel parolayı kaldırın",
        "description": "Sağlanan belirteç kimliğini kullanarak etki alanı genelindeki genel parolayı siler.",
        "tags": [
          "Alan Adları"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Genel parola ile ilişkili alan adı"
          },
          {
            "name": "token_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Silinecek alan çapındaki genel parolanın belirteç kimliği"
          }
        ],
        "responses": {
          "200": {
            "description": "Catch-all password successfully removed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Catch-all password deleted successfully."
                    }
                  },
                  "example": {
                    "id": "6841ec442bd583c73d0632d0",
                    "description": ""
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/invites": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        }
      ],
      "get": {
        "summary": "Alan adı davetini kabul et",
        "description": "Bir alan adına gelen daveti kabul edin.",
        "tags": [
          "Davetler"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain invite accepted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invite accepted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "post": {
        "summary": "Alan adı daveti oluştur",
        "description": ">[!IMPORTANT]\n>Davet edilen kullanıcı, davet eden yöneticinin üyesi olduğu başka bir alan adının kabul edilmiş bir üyesiyse, daveti otomatik olarak kabul edecek ve e-posta göndermeyecektir.",
        "tags": [
          "Davetler"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Alan adı üyeleri listesine davet edilecek e-posta adresi"
                  },
                  "group": {
                    "type": "string",
                    "format": "string",
                    "description": "Kullanıcının etki alanı üyeliğine ekleneceği grup (`\"admin\"` veya `\"user\"` olabilir)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain invite created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invite"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      },
      "delete": {
        "summary": "Alan davetini kaldır",
        "description": "Bir alan adına gelen daveti kaldırın.",
        "tags": [
          "Davetler"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Etki alanı üyeleri listesinden kaldırılacak e-posta adresi"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain invite removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invite removed successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/members/{member_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        },
        {
          "$ref": "#/components/parameters/memberId"
        }
      ],
      "put": {
        "summary": "Etki alanı üyesini güncelle",
        "description": "Bir etki alanı üyesini güncelleyin.",
        "tags": [
          "Üyeler"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "group": {
                    "required": true,
                    "type": "string",
                    "description": "Kullanıcıyı etki alanı üyeliğine güncellemek için kullanılacak grup (`\"admin\"` veya `\"user\"`'dan biri olabilir)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain member updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Etki alanı üyesini kaldır",
        "description": "Bir etki alanı üyesini kaldırın.",
        "tags": [
          "Üyeler"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain member removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Member removed successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/aliases/{alias_id}/generate-password": {
      "post": {
        "summary": "Bir takma ad parolası oluşturun",
        "description": "Bir takma ad için bir parola oluşturun. `emailed_instructions` sağlanmazsa, yanıt oluşturulan kullanıcı adı ve parolayı içerecektir.",
        "tags": [
          "Takma adlar"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Tam nitelikli alan adı (FQDN)"
          },
          {
            "name": "alias_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Takma adın benzersiz tanımlayıcısı"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateAliasPasswordInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Alias credentials returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string",
                      "example": "alias@yourdomain.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "some-generated-password"
                    }
                  },
                  "required": [
                    "username",
                    "password"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/aliases": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        }
      ],
      "get": {
        "summary": "Alan adı takma adlarını listeleyin",
        "description": ">__ÇEVİRİ_NOTU__\n>1 Kasım 2024 itibarıyla, ``Alan Adlarını Listele`` ve ``Alan Adı Takma Adlarını Listele`` API uç noktaları, sayfa başına maksimum ``1000`` sonuç içerecektir. Bu davranışı erkenden etkinleştirmek isterseniz, uç nokta sorgusu için URL'ye ek bir sorgu dizesi parametresi olarak `?paginate=true` değerini iletebilirsiniz. Daha fazla bilgi için Sayfalandırma bölümüne bakın.",
        "tags": [
          "Takma adlar"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Bir etki alanındaki takma adları ad, etiket veya alıcıya göre arayın (RegExp desteklenir)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Bir etki alanındaki takma adları adına göre arayın (RegExp desteklenir)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipient",
            "in": "query",
            "description": "Alıcıya göre bir etki alanındaki takma adları arayın (RegExp desteklenir)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Belirli bir alana göre sırala (ters sıralama için önek olarak tek tire kullanın). Varsayılan olarak created_at'dir.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "List of domain aliases",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Alias"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "post": {
        "summary": "Yeni alan adı oluşturun",
        "description": "Belirli bir alan adı için yeni bir takma ad oluşturun.",
        "tags": [
          "Takma adlar"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AliasInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain alias created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alias"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/aliases/{alias_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        },
        {
          "$ref": "#/components/parameters/aliasId"
        }
      ],
      "get": {
        "summary": "Alan adı takma adını al",
        "description": "Bir alan adı için belirli bir takma ad alın.",
        "tags": [
          "Takma adlar"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain alias retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alias"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "Alan adı takma adını güncelle",
        "description": "Belirli bir alan adı için belirli bir takma adı güncelleyin.",
        "tags": [
          "Takma adlar"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AliasUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain alias updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alias"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          },
          "401": {
            "$ref": "#/components/responses/Error"
          },
          "403": {
            "$ref": "#/components/responses/Error"
          },
          "404": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "summary": "Alan adı takma adını sil",
        "description": "Belirli bir alan adına ait takma adı silin.",
        "tags": [
          "Takma adlar"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain alias deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Alias deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/encrypt": {
      "post": {
        "summary": "TXT Kaydını Şifrele",
        "description": "Ücretsiz planda bile kayıtlarınızı ücretsiz olarak şifrelemenize olanak tanıyoruz. Gizlilik bir özellik olmamalı, ürünün tüm yönlerine entegre edilmelidir. [Gizlilik Kılavuzları tartışmasında](https://discuss.privacyguides.net/t/forward-email-email-provider/13370) ve [GitHub sorunlarımızda](https://github.com/forwardemail/forwardemail.net/issues/254) yoğun talep üzerine bunu ekledik.",
        "tags": [
          "Şifrele"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "text"
                ],
                "properties": {
                  "input": {
                    "required": true,
                    "type": "string",
                    "description": "Herhangi bir geçerli Yönlendirilmiş E-posta düz metin TXT kaydı"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Text encrypted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "encrypted": {
                      "type": "string",
                      "description": "Encrypted text"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          },
          "401": {
            "$ref": "#/components/responses/Error"
          },
          "429": {
            "description": "Rate limit exceeded (50 requests for 'encrypt')",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Hesap",
      "description": "Hesap yönetimi uç noktaları"
    },
    {
      "name": "Günlükler",
      "description": "Günlük yönetimi uç noktaları"
    },
    {
      "name": "E-postalar",
      "description": "E-posta yönetimi uç noktaları"
    },
    {
      "name": "Alan Adları",
      "description": "> [!TIP]\n> Uç noktası olarak alan adı <code>/v1/domains/:domain\\_name</code> olan alan adı uç noktaları, alan adı kimliği <code>:domain\\_id</code> ile değiştirilebilir. Bu, alan adına <code>name</code> veya <code>id</code> değeriyle başvurabileceğiniz anlamına gelir."
    },
    {
      "name": "Davetler",
      "description": "Alan davet yönetimi uç noktaları"
    },
    {
      "name": "Üyeler",
      "description": "Etki alanı üye yönetimi uç noktaları"
    },
    {
      "name": "Takma adlar",
      "description": "Alan adı takma adı yönetimi uç noktaları"
    },
    {
      "name": "Şifrele",
      "description": "Şifreleme uç noktaları"
    },
    {
      "name": "İletişim",
      "description": "Takma ad kişileri yönetimi uç noktaları (CardDAV)\n\n>[!NOTE]\n>Diğer API uç noktalarının aksine, bunlar Temel Yetkilendirme başlıkları olarak takma ad kullanıcı adına eşit \"kullanıcı adı\" ve takma ad tarafından oluşturulan parolaya eşit \"şifre\" gerektirir.\n\n>[!TIP]\n>Bu uç noktalar, vCard desteğiyle kişi yönetimi için kişilerin oluşturulması, alınması, güncellenmesi ve silinmesi dahil olmak üzere tam CRUD işlemleri sağlar. Doğrudan vCard içeriği sağlayabilir veya vCard formatına dönüştürülecek bireysel kişi alanları sağlayabilirsiniz."
    },
    {
      "name": "Takvimler",
      "description": "Takma ad takvimleri yönetim uç noktaları (CalDAV)\n\n>[!NOTE]\n> Diğer API uç noktalarından farklı olarak, bunlar Temel Yetkilendirme başlıkları olarak takma ad kullanıcı adına eşit [Authentication](#description/authentication) \"kullanıcı adı\" ve takma ad tarafından oluşturulan parolaya eşit \"parola\" gerektirir.\n\n>[!TIP]\n> Bu uç noktalar, takvimlerin oluşturulması, alınması, güncellenmesi ve silinmesi dahil olmak üzere saat dilimi ve renk desteğiyle eksiksiz takvim yönetimi sağlar. Takvim adları zorunludur, renk, saat dilimi ve açıklama gibi diğer özellikler ise isteğe bağlıdır."
    },
    {
      "name": "Mesajlar",
      "description": "Takma ad ileti yönetimi uç noktaları (IMAP/POP3)\n\n>[!NOTE]\n> Diğer API uç noktalarından farklı olarak, bunlar Temel Yetkilendirme başlıkları olarak takma ad kullanıcı adına eşit [Authentication](#description/authentication) \"kullanıcı adı\" ve takma ad tarafından oluşturulan parolaya eşit \"şifre\" gerektirir.\n\n>[!TIP]\n> Bu uç noktalar, gelişmiş arama özellikleriyle kapsamlı ileti yönetimi sağlar. Klasöre, bayraklara, içeriğe, başlıklara, tarih aralıklarına, boyuta ve daha fazlasına göre arama yapabilirsiniz. İletiler standart Nodemailer biçimi kullanılarak oluşturulabilir ve klasörler arasında geçiş ve bayrak yönetimi desteklenir.\n\nLütfen alan adınız için kurulum talimatlarını izlediğinizden emin olun.\nBu talimatlar SSS bölümümüzde [IMAP ile e-posta almayı destekliyor musunuz?](/faq#do-you-support-receiving-email-with-imap) bulunabilir."
    },
    {
      "name": "Klasörler",
      "description": "Takma ad klasör yönetimi uç noktaları (IMAP/POP3)\n\n>[!TIP]\n> Uç noktası olarak bir klasörün yolunu <code>/v1/folders/:path</code> kullanan klasör uç noktaları, klasörün kimliği <code>:id</code> ile değiştirilebilir. Bu, klasöre <code>path</code> veya <code>id</code> değeriyle başvurabileceğiniz anlamına gelir.\n\n>[!NOTE]\n> Diğer API uç noktalarından farklı olarak, bunlar Temel Yetkilendirme başlıkları olarak takma ad kullanıcı adına eşit [Authentication](#description/authentication) \"kullanıcı adı\" ve takma ad tarafından oluşturulan parolaya eşit \"parola\" gerektirir.\n\n>[!TIP]\n> Bu uç noktalar, oluşturma, yeniden adlandırma ve silme dahil olmak üzere tam klasör yönetimi sağlar. Klasör yolları üst klasörleri (örneğin, 'GİRİŞ KUTUSU/Alt Klasör') içerebilir ve üst klasörler mevcut değilse otomatik olarak oluşturulur."
    }
  ]
}