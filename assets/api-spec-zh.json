{
  "openapi": "3.0.0",
  "info": {
    "title": "Forward Email API",
    "description": "<img src=\"/img/articles/email-api.webp\" alt=\"\"/><br />欢迎使用“转发邮件”的全面 API 文档。此 API 允许您以编程方式管理邮件转发、域名、别名、外发邮件等。\n\n## 主要功能\n* **域名管理**：创建、检索、更新、删除和验证域名。\n* **别名管理**：管理邮件别名，包括创建、更新和收件人管理。\n* **外发 SMTP 邮件**：通过 SMTP 发送电子邮件、管理限制并跟踪已发送的邮件。\n* **账户和日志**：管理您的账户详情并下载活动日志。\n* **安全性**：加密 TXT 记录并管理域名成员/邀请。\n* **即将推出**：CardDAV 联系人、CalDAV 日历以及 IMAP/POP3 消息/文件夹管理等功能正在计划中。\n\n## 身份验证\n大多数端点都需要使用您的**API 密钥**进行身份验证。请在基本身份验证标头中将 API 密钥作为“用户名”提供，密码留空。\n\n```http\nAuthorization: Basic QVBJX1RPS0VOOg==\n```\n（请在 Base64 编码之前将 `API_TOKEN` 替换为您的实际密钥）\n\n与**别名联系人、日历、消息和文件夹**相关的端点（目前标记为“即将推出”）将使用生成的别名用户名和密码进行基本身份验证。\n\n## 错误\nAPI 使用标准 HTTP 状态代码来指示成功或失败。错误响应包含一个 JSON 正文，其中包含一个详细说明错误的“message”字段。\n\n| 状态代码 | 含义 |\n|-------------|---------------------|\n| 200 | 正常 |\n| 400 | 错误请求 |\n| 401 | 未授权 |\n| 403 |禁止访问 |\n| 404 | 未找到 |\n| 429 | 请求过多 |\n| 500 | 内部服务器错误 |\n| 501 | 未实现 |\n| 502 | 网关错误 |\n| 503 | 服务不可用 |\n| 504 | 网关超时 |\n\n*如果您遇到 `5xx` 错误，请联系 [api@forwardemail.net](mailto:api@forwardemail.net)。*\n\n## 本地化\nAPI 响应会根据检测到的用户语言环境或 `Accept-Language` 标头进行翻译。支持超过 25 种语言。\n\n## 分页\n返回列表的端点支持通过查询参数进行分页。\n\n| 参数 | 类型 | 可选 | 描述 | 默认值 | 约束 |\n|--------------|---------|----------|-----------------------------------------------------------------------------|---------|--------------------|\n| `page` | 整数 | 是 | 要检索的页码。| 1 | `>= 1` |\n| `limit` | 整数 | 是 | 每页的结果数。| 10 | `>= 1`, `<= 50` |\n| `pagination` | 布尔值 | 是 | 选择启用分页行为（某些端点需要在 2024 年 11 月 1 日之前启用）。| false | |\n\n**分页标题：**\n* `X-Page-Count`：总页数。\n* `X-Page-Current`：当前页码。\n* `X-Page-Size`：当前页面上的项目数。\n* `X-Item-Count`：所有页面上的项目总数。\n* `Link`：导航链接（上一页、下一页、第一页、最后一页）。\n\n**示例：**\n```bash\ncurl \"https://api.forwardemail.net/v1/domains?page=2&limit=20&pagination=true\" \\\n-u API_TOKEN:\n```\n\n## 推荐库\n* **Ruby：** [Faraday](https://github.com/lostisland/faraday)\n* **Python：** [requests](https://requests.readthedocs.io/en/latest/)\n* **Java：** [OkHttp](https://square.github.io/okhttp/)\n* **PHP：** [Guzzle](https://docs.guzzlephp.org/en/stable/)\n* **JavaScript/Node.js：** [superagent](https://github.com/visionmedia/superagent)（由 Forward Email 维护）\n* **Go：** `net/http`\n* **.NET：** RestSharp",
    "version": "1.0.0",
    "contact": {
      "name": "Forward Email Support",
      "url": "https://forwardemail.net",
      "email": "api@forwardemail.net"
    }
  },
  "servers": [
    {
      "url": "https://api.forwardemail.net",
      "description": "转发电子邮件 API 服务器"
    }
  ],
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "http",
        "scheme": "basic",
        "description": "\n使用您的 API 密钥作为基本身份验证的**用户名**。密码字段请留空。\n\n**示例：**\n如果您的 API 密钥是“YOUR_API_KEY”，则“Authorization”标头的 Base64 编码值应为“echo -n \"YOUR_API_KEY:\" | base64”。\n\n```http\nAuthorization: Basic WU9VUl9BUElfS0VZOg==\n```\n"
      },
      "AliasAuth": {
        "type": "http",
        "scheme": "basic",
        "description": "\n使用生成的**别名用户名和密码**进行基本身份验证。这适用于以下终端：\n* 别名联系人 (CardDAV)\n* 别名日历 (CalDAV)\n* 别名邮件 (IMAP/POP3)\n* 别名文件夹 (IMAP/POP3)\n\n*（注意：这些功能目前标记为“即将推出”）*\n\n**示例：**\n如果别名用户名为 `alias@domain.com`，密码为 `GENERATED_PASSWORD`，则 Base64 编码值为 `echo -n \"alias@domain.com:GENERATED_PASSWORD\" | base64`。\n\n```http\n授权：基本 YWxpYXNAZG9tYWluLmNvbTpHRU5FUkFURURfUEFTU1dPUkQ=\n```\n"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "type": "string",
            "description": "错误信息"
          }
        }
      },
      "Account": {
        "type": "object",
        "required": [
          "id",
          "email",
          "plan",
          "object"
        ],
        "properties": {
          "sessions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "has_newsletter": {
            "type": "boolean"
          },
          "plan": {
            "type": "string",
            "example": "free"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "max_quota_per_alias": {
            "type": "integer",
            "format": "int64"
          },
          "full_email": {
            "type": "string",
            "format": "email"
          },
          "display_name": {
            "type": "string"
          },
          "otp_enabled": {
            "type": "boolean"
          },
          "last_locale": {
            "type": "string"
          },
          "address_country": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "example": "user"
          },
          "locale": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "address_html": {
            "type": "string"
          },
          "api_token": {
            "type": "string",
            "format": "uuid"
          }
        },
        "example": {
          "sessions": [],
          "has_newsletter": true,
          "plan": "free",
          "email": "test1@test1.com",
          "max_quota_per_alias": 10737418240,
          "full_email": "test1@test1.com",
          "display_name": "test1@test1.com",
          "otp_enabled": false,
          "last_locale": "en",
          "address_country": "None",
          "id": "683fb2e81cc5d449a0d4cd9d",
          "object": "user",
          "locale": "en",
          "created_at": "2025-06-04T02:43:52.646Z",
          "updated_at": "2025-06-04T02:43:55.350Z",
          "address_html": "",
          "api_token": "15ac16ae21784aa2cb4d5508"
        }
      },
      "Email": {
        "type": "object",
        "required": [
          "id",
          "object",
          "status",
          "alias",
          "domain",
          "user"
        ],
        "properties": {
          "is_redacted": {
            "type": "boolean"
          },
          "hard_bounces": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "soft_bounces": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "is_bounce": {
            "type": "boolean"
          },
          "alias": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "example": "sent"
          },
          "is_locked": {
            "type": "boolean"
          },
          "envelope": {
            "type": "object",
            "properties": {
              "from": {
                "type": "string",
                "format": "email"
              },
              "to": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            }
          },
          "messageId": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "subject": {
            "type": "string"
          },
          "accepted": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "example": "email"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "link": {
            "type": "string",
            "format": "uri"
          }
        },
        "example": {
          "is_redacted": true,
          "hard_bounces": [],
          "soft_bounces": [],
          "is_bounce": false,
          "alias": "67a180fxxxxxxxe46a3f0edf",
          "domain": "5efae85dxxxxxxxf4bb53c7a",
          "user": "5efabd3907xxxxxxx12890b8",
          "status": "sent",
          "is_locked": false,
          "envelope": {
            "from": "test@test.com",
            "to": [
              "test@test1.com"
            ]
          },
          "messageId": "1a04fee3-5230-4a85-9111-a2c376835885@shaunwarman.com",
          "date": "2025-06-04T03:32:19.000Z",
          "subject": "testing",
          "accepted": [
            "test@test1.com"
          ],
          "id": "683fbe4d5baef1b583a1xxxx",
          "object": "email",
          "created_at": "2025-06-04T03:32:29.138Z",
          "updated_at": "2025-06-04T03:32:33.847Z",
          "link": "https://forwardemail.net/my-account/emails/683fbe4d5baef1b583a11e54"
        }
      },
      "EmailList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Email"
        }
      },
      "SMTP": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "email",
            "description": "发件人的电子邮件地址（必须作为域的别名存在）。"
          },
          "to": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "“收件人”标头的收件人逗号分隔列表或数组。"
          },
          "cc": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "“抄送”标头的收件人逗号分隔列表或数组。"
          },
          "bcc": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "“密件抄送”标头的收件人逗号分隔列表或数组。"
          },
          "subject": {
            "type": "string",
            "description": "电子邮件的主题。"
          },
          "text": {
            "type": "string",
            "description": "消息的纯文本版本。"
          },
          "html": {
            "type": "string",
            "description": "消息的 HTML 版本。"
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "附件对象数组（参见 Nodemailer 的常用字段）。"
          },
          "sender": {
            "type": "string",
            "format": "email",
            "description": "“发件人”标头的电子邮件地址。"
          },
          "replyTo": {
            "type": "string",
            "format": "email",
            "description": "“回复”标题的电子邮件地址。"
          },
          "inReplyTo": {
            "type": "string",
            "description": "该消息所回复的消息 ID。"
          },
          "references": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "description": "以空格分隔的消息 ID 列表或数组。"
          },
          "attachDataUrls": {
            "type": "boolean",
            "description": "如果为真，则将数据：HTML 内容中的图像转换为嵌入的附件。"
          },
          "watchHtml": {
            "type": "string",
            "description": "Apple Watch 特定的 HTML 版本消息。"
          },
          "amp": {
            "type": "string",
            "description": "AMP4EMAIL 消息的特定 HTML 版本。"
          },
          "icalEvent": {
            "type": "object",
            "description": "iCalendar 事件作为替代消息内容。"
          },
          "alternatives": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "备选消息内容的数组。"
          },
          "encoding": {
            "type": "string",
            "description": "文本和 HTML 字符串的编码（例如“utf-8”、“hex”、“base64”）。"
          },
          "raw": {
            "type": "string",
            "description": "自定义生成 RFC822 格式的消息（而不是使用 Nodemailer 生成）。"
          },
          "textEncoding": {
            "type": "string",
            "enum": [
              "quoted-printable",
              "base64"
            ],
            "description": "强制对文本值使用编码。"
          },
          "priority": {
            "type": "string",
            "enum": [
              "high",
              "normal",
              "low"
            ],
            "description": "电子邮件的优先级。"
          },
          "headers": {
            "oneOf": [
              {
                "type": "object",
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            ],
            "description": "附加标头字段的对象或数组。"
          },
          "messageId": {
            "type": "string",
            "description": "“Message-ID”标头的可选 Message-ID。"
          },
          "date": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "description": "可选的日期标题。不能超过未来 30 天。"
          },
          "list": {
            "type": "object",
            "description": "List-* 标题的可选对象。"
          }
        }
      },
      "Domain": {
        "type": "object",
        "properties": {
          "has_newsletter": {
            "type": "boolean"
          },
          "ignore_mx_check": {
            "type": "boolean"
          },
          "retention_days": {
            "type": "integer"
          },
          "has_regex": {
            "type": "boolean"
          },
          "has_catchall": {
            "type": "boolean"
          },
          "allowlist": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "denylist": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "restricted_alias_names": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "has_adult_content_protection": {
            "type": "boolean"
          },
          "has_phishing_protection": {
            "type": "boolean"
          },
          "has_executable_protection": {
            "type": "boolean"
          },
          "has_virus_protection": {
            "type": "boolean"
          },
          "is_catchall_regex_disabled": {
            "type": "boolean"
          },
          "has_smtp": {
            "type": "boolean"
          },
          "is_smtp_suspended": {
            "type": "boolean"
          },
          "plan": {
            "type": "string"
          },
          "max_recipients_per_alias": {
            "type": "integer"
          },
          "smtp_port": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "has_mx_record": {
            "type": "boolean"
          },
          "has_txt_record": {
            "type": "boolean"
          },
          "has_dkim_record": {
            "type": "boolean"
          },
          "has_return_path_record": {
            "type": "boolean"
          },
          "has_dmarc_record": {
            "type": "boolean"
          },
          "has_recipient_verification": {
            "type": "boolean"
          },
          "has_custom_verification": {
            "type": "boolean"
          },
          "verification_record": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "enum": [
              "domain"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "storage_used": {
            "type": "integer"
          },
          "storage_used_by_aliases": {
            "type": "integer"
          },
          "storage_quota": {
            "type": "integer"
          },
          "smtp_dns_records": {
            "type": "object",
            "properties": {
              "dkim": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              },
              "return_path": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              },
              "dmarc": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "link": {
            "type": "string",
            "format": "uri"
          }
        },
        "example": [
          {
            "has_newsletter": false,
            "ignore_mx_check": false,
            "retention_days": 0,
            "has_regex": false,
            "has_catchall": true,
            "allowlist": [],
            "denylist": [],
            "restricted_alias_names": [],
            "has_adult_content_protection": true,
            "has_phishing_protection": true,
            "has_executable_protection": true,
            "has_virus_protection": true,
            "is_catchall_regex_disabled": false,
            "has_smtp": false,
            "is_smtp_suspended": false,
            "plan": "team",
            "max_recipients_per_alias": 10,
            "smtp_port": "25",
            "name": "test.com",
            "has_mx_record": false,
            "has_txt_record": false,
            "has_dkim_record": false,
            "has_return_path_record": false,
            "has_dmarc_record": false,
            "has_recipient_verification": false,
            "has_custom_verification": false,
            "verification_record": "kcjg6vrO8Q",
            "id": "683f1172c4bad2524410b857",
            "object": "domain",
            "created_at": "2025-06-03T15:14:59.000Z",
            "updated_at": "2025-06-03T15:14:59.254Z",
            "storage_used": 0,
            "storage_used_by_aliases": 0,
            "storage_quota": 10737418240,
            "smtp_dns_records": {
              "dkim": {
                "name": "fe-ebf3212716._domainkey",
                "value": "v=DKIM1; k=rsa; p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCcG+YBDPhyH8bLmyflmU9w1klYDeWpEufIlVqyWqly9lC+J/ntkKn4gum28EeE6vR+55x4JFCR8qSaw0YO1eCRwBgpFB0kKzbELHh2i2TKKwrqB3gPLXp4q4lbcGX2eD6fPCRwckTHqmiOzMhX8GD60zVlEvabok4LJ1i/BOyh6wIDAQAB;"
              },
              "return_path": {
                "name": "fe-bounces",
                "value": "forwardemail.net"
              },
              "dmarc": {
                "name": "_dmarc",
                "value": "v=DMARC1; p=reject; pct=100; rua=mailto:dmarc-683f1172c4bad2524410b857@localhost;"
              }
            },
            "link": "http://localhost:3000/my-account/domains/test.com"
          }
        ]
      },
      "CreateDomainInput": {
        "type": "object",
        "required": [
          "domain"
        ],
        "properties": {
          "domain": {
            "type": "string",
            "description": "完全限定域名 (FQDN) 或 IP 地址"
          },
          "team_domain": {
            "type": "string",
            "nullable": true,
            "description": "分配给来自其他域的同一团队；可以是域 ID 或 FQDN。使用“none”可明确禁用。"
          },
          "plan": {
            "type": "string",
            "enum": [
              "free",
              "enhanced_protection",
              "team"
            ],
            "description": "计划类型（默认为“免费”或用户当前的付费计划）"
          },
          "catchall": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "type": "string",
                "description": "电子邮件地址的分隔列表（以逗号、空格或换行符分隔）"
              }
            ],
            "description": "创建默认的 catch-all 别名（默认为 true）"
          },
          "has_adult_content_protection": {
            "type": "boolean",
            "description": "启用垃圾邮件扫描程序成人内容保护"
          },
          "has_phishing_protection": {
            "type": "boolean",
            "description": "启用垃圾邮件扫描程序网络钓鱼防护"
          },
          "has_executable_protection": {
            "type": "boolean",
            "description": "启用垃圾邮件扫描程序可执行保护"
          },
          "has_virus_protection": {
            "type": "boolean",
            "description": "启用垃圾邮件扫描程序病毒防护"
          },
          "has_recipient_verification": {
            "type": "boolean",
            "description": "要求别名收件人点击电子邮件验证链接"
          },
          "ignore_mx_check": {
            "type": "boolean",
            "description": "忽略高级邮件路由设置的 MX 记录检查"
          },
          "retention_days": {
            "type": "integer",
            "minimum": 0,
            "maximum": 30,
            "description": "保留出站 SMTP 日志的天数（0-30，默认值：0）"
          },
          "bounce_webhook": {
            "oneOf": [
              {
                "type": "string",
                "format": "uri",
                "description": "用于接收退回事件的 Webhook URL"
              },
              {
                "type": "boolean",
                "enum": [
                  false
                ],
                "description": "禁用反弹 webhook"
              }
            ]
          },
          "max_quota_per_alias": {
            "type": "string",
            "description": "每个别名的最大存储配额（例如“1 GB”）"
          }
        }
      },
      "UpdateDomainInput": {
        "type": "object",
        "properties": {
          "smtp_port": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ],
            "description": "用于配置 SMTP 转发的自定义端口（默认为“25”）"
          },
          "has_adult_content_protection": {
            "type": "boolean",
            "description": "是否在此域上启用垃圾邮件扫描程序成人内容保护"
          },
          "has_phishing_protection": {
            "type": "boolean",
            "description": "是否在此域上启用垃圾邮件扫描程序钓鱼保护"
          },
          "has_executable_protection": {
            "type": "boolean",
            "description": "是否在此域上启用垃圾邮件扫描程序可执行保护"
          },
          "has_virus_protection": {
            "type": "boolean",
            "description": "是否在此域上启用垃圾邮件扫描程序病毒防护"
          },
          "has_recipient_verification": {
            "type": "boolean",
            "description": "全局域默认是否要求别名收件人单击电子邮件验证链接才能让电子邮件流过"
          },
          "ignore_mx_check": {
            "type": "boolean",
            "description": "是否忽略域上的 MX 记录检查以进行验证（主要用于高级 MX 路由设置）"
          },
          "retention_days": {
            "type": "integer",
            "minimum": 0,
            "maximum": 30,
            "description": "存储出站 SMTP 电子邮件的天数（0 = 立即清除）"
          },
          "bounce_webhook": {
            "oneOf": [
              {
                "type": "string",
                "format": "uri"
              },
              {
                "type": "boolean",
                "enum": [
                  false
                ]
              }
            ],
            "description": "用于接收退回通知的 Webhook URL，或使用 false 来禁用"
          },
          "max_quota_per_alias": {
            "type": "string",
            "description": "每个别名的存储配额（例如“1 GB”，解析为字节）"
          }
        }
      },
      "Alias": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email"
              },
              "display_name": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "email",
              "display_name",
              "id"
            ]
          },
          "domain": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "id"
            ]
          },
          "name": {
            "type": "string"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "is_enabled": {
            "type": "boolean"
          },
          "has_recipient_verification": {
            "type": "boolean"
          },
          "verified_recipients": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "pending_recipients": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "recipients": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "enum": [
              "alias"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "storage_location": {
            "type": "string"
          },
          "has_imap": {
            "type": "boolean"
          }
        },
        "required": [
          "user",
          "domain",
          "name",
          "labels",
          "is_enabled",
          "has_recipient_verification",
          "verified_recipients",
          "pending_recipients",
          "recipients",
          "id",
          "object",
          "created_at",
          "updated_at",
          "storage_location",
          "has_imap"
        ],
        "example": {
          "user": {
            "email": "test@test.com",
            "display_name": "test@test.com",
            "id": "5efabd39xxxxxxx4512890b8"
          },
          "domain": {
            "name": "mailsire.com",
            "id": "5e3c0550xxxxxxx09b7ba023"
          },
          "name": "abc123",
          "labels": [],
          "is_enabled": true,
          "has_recipient_verification": false,
          "verified_recipients": [],
          "pending_recipients": [],
          "recipients": [
            "abc@test1.com"
          ],
          "id": "62fa3dcxxxxxxx79dda83ff2",
          "object": "alias",
          "created_at": "2022-08-15T12:36:26.593Z",
          "updated_at": "2022-08-15T12:36:26.593Z",
          "storage_location": "storage_loc",
          "has_imap": false
        }
      },
      "AliasInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "别名（如果未提供或为空，则生成随机别名）"
          },
          "recipients": {
            "oneOf": [
              {
                "type": "string",
                "description": "以换行符/空格/逗号分隔的有效电子邮件地址、FQDN、IP 或 webhook URL 的字符串"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                },
                "description": "有效收件人数组"
              }
            ],
            "description": "收件人列表。如果未提供或为空，则默认为请求者的电子邮件"
          },
          "description": {
            "type": "string",
            "description": "别名描述"
          },
          "labels": {
            "oneOf": [
              {
                "type": "string",
                "description": "以换行符/空格/逗号分隔的标签字符串"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "标签数组"
              }
            ]
          },
          "has_recipient_verification": {
            "type": "boolean",
            "description": "要求收件人点击验证链接（默认为域设置）"
          },
          "is_enabled": {
            "type": "boolean",
            "description": "是否启用或禁用此别名"
          },
          "error_code_if_disabled": {
            "type": "number",
            "enum": [
              250,
              421,
              550
            ],
            "description": "如果别名被禁用，则返回错误代码。默认为 250"
          },
          "has_imap": {
            "type": "boolean",
            "description": "启用或禁用此别名的 IMAP 存储"
          },
          "has_pgp": {
            "type": "boolean",
            "description": "为该别名启用或禁用 OpenPGP 加密"
          },
          "public_key": {
            "type": "string",
            "description": "ASCII Armor 格式的 OpenPGP 公钥"
          },
          "max_quota": {
            "type": "string",
            "description": "存储最大配额（例如“1 GB”）"
          },
          "vacation_responder_is_enabled": {
            "type": "boolean",
            "description": "启用或禁用休假响应器"
          },
          "vacation_responder_start_date": {
            "type": "string",
            "description": "休假回复的开始日期（例如“YYYY-MM-DD”）"
          },
          "vacation_responder_end_date": {
            "type": "string",
            "description": "休假回复的结束日期（例如“YYYY-MM-DD”）"
          },
          "vacation_responder_subject": {
            "type": "string",
            "description": "休假响应者的纯文本主题"
          },
          "vacation_responder_message": {
            "type": "string",
            "description": "休假响应者的纯文本消息"
          }
        }
      },
      "AliasUpdateInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "别名"
          },
          "recipients": {
            "oneOf": [
              {
                "type": "string",
                "description": "以换行符/空格/逗号分隔的有效电子邮件地址、FQDN、IP 或 webhook URL 的字符串"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                },
                "description": "有效收件人数组"
              }
            ]
          },
          "description": {
            "type": "string",
            "description": "别名描述"
          },
          "labels": {
            "oneOf": [
              {
                "type": "string",
                "description": "以换行符/空格/逗号分隔的标签字符串"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "标签数组"
              }
            ]
          },
          "has_recipient_verification": {
            "type": "boolean",
            "description": "要求收件人点击验证链接（默认为域设置）"
          },
          "is_enabled": {
            "type": "boolean",
            "description": "启用或禁用别名"
          },
          "error_code_if_disabled": {
            "type": "number",
            "enum": [
              250,
              421,
              550
            ],
            "description": "如果别名被禁用则使用的错误代码（默认为 250）"
          },
          "has_imap": {
            "type": "boolean",
            "description": "启用或禁用 IMAP 存储"
          },
          "has_pgp": {
            "type": "boolean",
            "description": "启用或禁用 OpenPGP 加密"
          },
          "public_key": {
            "type": "string",
            "description": "ASCII Armor 格式的 OpenPGP 公钥"
          },
          "max_quota": {
            "type": "string",
            "description": "存储最大配额（例如“1 GB”）"
          },
          "vacation_responder_is_enabled": {
            "type": "boolean",
            "description": "启用或禁用休假响应器"
          },
          "vacation_responder_start_date": {
            "type": "string",
            "description": "休假回复开始日期（例如 YYYY-MM-DD）"
          },
          "vacation_responder_end_date": {
            "type": "string",
            "description": "休假回复结束日期（例如 YYYY-MM-DD）"
          },
          "vacation_responder_subject": {
            "type": "string",
            "description": "休假响应者的明文主题"
          },
          "vacation_responder_message": {
            "type": "string",
            "description": "休假响应者的明文消息"
          }
        }
      },
      "GenerateAliasPasswordInput": {
        "type": "object",
        "properties": {
          "new_password": {
            "type": "string",
            "description": "用于别名的自定义新密码"
          },
          "password": {
            "type": "string",
            "description": "别名的现有密码，无需删除邮箱存储即可更改"
          },
          "is_override": {
            "type": "boolean",
            "description": "覆盖现有密码并删除 IMAP 存储（谨慎使用）"
          },
          "emailed_instructions": {
            "type": "string",
            "format": "email",
            "description": "用于发送别名密码和设置说明的电子邮件地址"
          }
        }
      },
      "EmailLimit": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "当前已发送电子邮件数量"
          },
          "limit": {
            "type": "integer",
            "description": "允许的最大电子邮件数量"
          }
        }
      },
      "Member": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "会员 ID"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "会员的电子邮件地址"
          },
          "role": {
            "type": "string",
            "description": "会员角色"
          }
        }
      },
      "Invite": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "受邀电子邮件地址"
          }
        }
      }
    },
    "parameters": {
      "page": {
        "name": "page",
        "in": "query",
        "description": "返回结果页。如果未指定，则值为 1。必须为大于或等于 1 的数字。",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "default": 1
        }
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "description": "每页返回的结果数。如果未指定，则默认为 10。该值必须大于或等于 1，且小于或等于 50。",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 50,
          "default": 10
        }
      },
      "pagination": {
        "name": "pagination",
        "in": "query",
        "description": "在 2024 年 11 月 1 日之前选择加入分页",
        "schema": {
          "type": "boolean"
        }
      },
      "domainId": {
        "name": "domain_id",
        "in": "path",
        "required": true,
        "description": "域 ID",
        "schema": {
          "type": "string"
        }
      },
      "aliasId": {
        "name": "alias_id",
        "in": "path",
        "required": true,
        "description": "ID别名",
        "schema": {
          "type": "string"
        }
      },
      "memberId": {
        "name": "member_id",
        "in": "path",
        "required": true,
        "description": "会员 ID",
        "schema": {
          "type": "string"
        }
      },
      "emailId": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "电子邮件 ID",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "Error": {
        "description": "Error response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "BadRequest": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotFound": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "TooManyRequests": {
        "description": "Too Many Requests",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotImplemented": {
        "description": "Not Implemented",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "BadGateway": {
        "description": "Bad Gateway",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "ServiceUnavailable": {
        "description": "Service Unavailable",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "GatewayTimeout": {
        "description": "Gateway Time-out",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  },
  "paths": {
    "/v1/account": {
      "post": {
        "summary": "创建账户",
        "description": "创建新用户帐户",
        "tags": [
          "帐户"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "电子邮件"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "密码"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      },
      "get": {
        "summary": "找回账户",
        "description": "检索当前用户的帐户信息",
        "tags": [
          "帐户"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Account retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "更新帐户",
        "description": "更新当前用户的账户信息",
        "tags": [
          "帐户"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "电子邮件"
                  },
                  "given_name": {
                    "type": "string",
                    "description": "名"
                  },
                  "family_name": {
                    "type": "string",
                    "description": "姓"
                  },
                  "avatar_url": {
                    "type": "string",
                    "description": "头像图片链接"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/logs/download": {
      "get": {
        "summary": "下载日志",
        "description": "**下载日志**\n\n描述：我们的 API 允许您以编程方式下载您帐户的日志。向此端点提交请求后，系统将处理您帐户的所有日志，并在完成后以附件（Gzip 压缩的 CSV 电子表格文件）的形式通过电子邮件发送给您。\n\n您可以使用 Cron 作业或 Node.js 作业调度软件 Bree 创建后台作业，以便随时接收日志。请注意，此端点每天最多只能发送 10 个请求。\n\n附件是“email-deliverability-logs-YYYY-MM-DD-h-mm-A-z.csv.gz”的小写形式，电子邮件本身包含已检索日志的简要摘要。",
        "tags": [
          "日志"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "query",
            "description": "按完全限定域名（“FQDN”）过滤日志。如果未提供，则将检索所有域中的所有日志。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "通过电子邮件、域名、别名、IP 地址或日期（M/Y、M/D/YY、M-D、M-D-YY 或 M.D.YY 格式）搜索日志。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bounce_category",
            "in": "query",
            "description": "按特定退回类别（例如“阻止列表”）搜索日志。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "response_code",
            "in": "query",
            "description": "通过特定的错误响应代码（例如 421 或 550）搜索日志。",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Logs will be emailed as an attachment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Logs will be emailed to you shortly"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/v1/emails": {
      "get": {
        "summary": "列出出站 SMTP 电子邮件",
        "description": "**列出已发送的 SMTP 邮件**\n\n请注意，此端点不会返回邮件的“message”、“headers”和“rejectedErrors”的属性值。\n\n要返回这些属性及其值，请使用带有邮件 ID 的[检索邮件](https://github.com/forwardemail/forwardemail.net/blob/master/app/views/api/index.md#retrieve-email)端点。",
        "tags": [
          "电子邮件"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "通过元数据搜索电子邮件。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "domain",
            "in": "query",
            "description": "按域名搜索电子邮件。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "按特定字段排序（以单个连字符为前缀 - 表示按该字段的反向排序）。若未设置，则默认为 created_at。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "请参阅分页以了解更多见解。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "请参阅分页以了解更多见解。",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of outbound SMTP emails",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Email"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "summary": "创建出站 SMTP 电子邮件",
        "description": "我们用于创建电子邮件的 API 灵感源自 Nodemailer 的消息选项配置，并充分利用了它的配置。以下所有正文参数请遵循 [Nodemailer 消息配置](https://nodemailer.com/message/)。\n\n请注意，除了 `envelope` 和 `dkim`（因为我们会自动为您设置）外，我们支持所有 Nodemailer 选项。出于安全考虑，我们会自动将 `disableFileAccess` 和 `disableUrlAccess` 选项设置为 `true`。\n\n您应该在包含邮件头的原始完整邮件中传递单个 `raw` 选项，或者在下方单独传递正文参数选项。\n\n如果邮件头中包含表情符号，此 API 端点会自动为您编码（例如，主题行 `Subject: 🤓 Hello` 会自动转换为 `Subject: =?UTF-8?Q?=F0=9F=A4=93?= Hello`）。我们的目标是打造一个极其方便开发者且防伪的电子邮件 API。",
        "tags": [
          "电子邮件"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SMTP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email sent successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/emails/limit": {
      "get": {
        "summary": "获取出站 SMTP 电子邮件限制",
        "description": "这是一个简单的端点，它返回一个 JSON 对象，其中包含每个帐户每天 SMTP 出站消息数量的“count”和“limit”。",
        "tags": [
          "电子邮件"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Email limit information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailLimit"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/emails/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/emailId"
        }
      ],
      "get": {
        "summary": "检索出站 SMTP 电子邮件",
        "description": "检索特定的出站 SMTP 电子邮件。",
        "tags": [
          "电子邮件"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Email retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "删除出站 SMTP 电子邮件",
        "description": "当且仅当当前状态为“待处理”、“已排队”或“已延迟”之一时，删除电子邮件的状态才会设置为“已拒绝”（并且不会将其放入队列中处理）。我们可能会在电子邮件创建和/或发送 30 天后自动清除电子邮件，因此您应该在客户端、数据库或应用程序中保留一份已发送 SMTP 电子邮件的副本。如果需要，您可以在数据库中引用我们的电子邮件 ID 值，此值由[创建电子邮件](https://github.com/forwardemail/forwardemail.net/blob/master/app/views/api/index.md#create-email)和[检索电子邮件](https://github.com/forwardemail/forwardemail.net/blob/master/app/views/api/index.md#retrieve-email)端点返回。",
        "tags": [
          "电子邮件"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Email deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains": {
      "get": {
        "summary": "列出域名",
        "description": "> [!NOTE]\n>自 2024 年 11 月 1 日起，列出域名和列出域名别名的 API 端点将默认每页最多显示 1000 条结果。如果您想提前启用此行为，可以将 `?paginate=true` 作为额外的查询字符串参数传递给端点查询的 URL。更多详情，请参阅分页。",
        "tags": [
          "域"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "通过元数据搜索域。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "domain",
            "in": "query",
            "description": "按域名搜索域。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "按特定字段排序（以单个连字符为前缀 - 表示按该字段的反向排序）。若未设置，则默认为 created_at。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "请参阅分页以了解更多见解。",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "请参阅分页以了解更多见解。",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of domains",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "summary": "创建域",
        "description": "在系统中创建新域名。此端点允许您注册用于平台的完全限定域名 (FQDN) 或 IP 地址。\n\n可选配置选项包括将域名分配给现有团队、设置套餐类型（例如免费、增强防护或团队）以及配置高级防护，例如垃圾邮件过滤、病毒扫描和收件人验证。您还可以配置是否默认创建 catch-all 别名、设置用于 SMTP 失败的自定义退回 Webhook URL，以及定义此域名上电子邮件别名的存储配额限制。此端点执行域名级验证和配置。如果启用了“ignore_mx_check”选项，则会跳过 MX 记录验证（仅推荐用于高级路由设置）。响应将包含已创建域名对象的完整详细信息，包括配置所需的 DNS 记录。",
        "tags": [
          "域"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDomainInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/v1/domains/{domain_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        }
      ],
      "get": {
        "summary": "检索域名",
        "description": "检索特定域",
        "tags": [
          "域"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "更新域",
        "description": "更新特定域。",
        "tags": [
          "域"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDomainInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "删除域名",
        "description": "删除特定域。",
        "tags": [
          "域"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Domain deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/verify-records": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        }
      ],
      "get": {
        "summary": "验证域名记录",
        "description": "验证特定域的 DNS 记录。",
        "tags": [
          "域"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "DNS records successfully verified",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Domain's DNS records have been verified."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/verify-smtp": {
      "get": {
        "summary": "验证域 SMTP 记录",
        "description": "验证指定域的 SMTP 相关 DNS 记录。",
        "operationId": "verifySmtpRecords",
        "tags": [
          "域"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "description": "要验证的完全限定域名 (FQDN)",
            "schema": {
              "type": "string",
              "format": "hostname"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "SMTP records successfully verified",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "You have successfully configured and verified DNS records for outbound SMTP."
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/catch-all-passwords": {
      "post": {
        "summary": "创建域范围的万能密码",
        "description": "创建全域通用密码。如果未提供密码，则会生成一个安全的随机密码。",
        "tags": [
          "域"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "要创建万能密码的域名"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "new_password": {
                    "type": "string",
                    "description": "您的自定义新密码将用作全域通用密码。留空可生成强密码。"
                  },
                  "description": {
                    "type": "string",
                    "description": "仅用于组织目的的描述。"
                  }
                }
              },
              "example": {
                "new_password": "myCustomStrongPassword123!",
                "description": "Password for team-wide access"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created a catch-all password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of the created catch-all password"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the catch-all password"
                    }
                  },
                  "required": [
                    "id",
                    "description"
                  ]
                },
                "example": {
                  "id": "6841ec462bd583c73d0632dd",
                  "username": "*@quas.com",
                  "password": "6Yq14XhAUaupdZE",
                  "description": "foo bar"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "列出全域通用密码",
        "description": "返回当前为指定域配置的域范围的 catch-all 密码列表。",
        "operationId": "listCatchAllPasswords",
        "tags": [
          "域"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "description": "列出 catch-all 密码的完全限定域名 (FQDN)",
            "schema": {
              "type": "string",
              "format": "hostname"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of domain-wide catch-all passwords",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier for the item",
                        "example": "6841ec442bd583c73d0632d0"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the item",
                        "example": "foo bar"
                      }
                    },
                    "required": [
                      "id",
                      "description"
                    ]
                  },
                  "example": [
                    {
                      "id": "6841ec442bd583c73d0632d0",
                      "description": ""
                    },
                    {
                      "id": "6841ec462bd583c73d0632dd",
                      "description": "foo bar"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/catch-all-passwords/{token_id}": {
      "delete": {
        "summary": "删除全域通用密码",
        "description": "使用提供的令牌 ID 删除域范围的 catch-all 密码。",
        "tags": [
          "域"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "与 catch-all 密码关联的域名"
          },
          {
            "name": "token_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "要删除的全域通用密码的令牌 ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Catch-all password successfully removed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Catch-all password deleted successfully."
                    }
                  },
                  "example": {
                    "id": "6841ec442bd583c73d0632d0",
                    "description": ""
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/invites": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        }
      ],
      "get": {
        "summary": "接受域名邀请",
        "description": "接受域名邀请。",
        "tags": [
          "邀请"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain invite accepted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invite accepted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "post": {
        "summary": "创建域名邀请",
        "description": ">[!IMPORTANT]\n>如果被邀请的用户已经是邀请他们的管理员所属的任何其他域的接受成员，则系统将自动接受邀请，而不会发送电子邮件。",
        "tags": [
          "邀请"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "邀请加入域成员列表的电子邮件地址"
                  },
                  "group": {
                    "type": "string",
                    "format": "string",
                    "description": "将用户添加到域成员资格的组（可以是“admin”或“user”之一）"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain invite created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invite"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      },
      "delete": {
        "summary": "删除域名邀请",
        "description": "删除域名邀请。",
        "tags": [
          "邀请"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "要从域成员列表中删除的电子邮件地址"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain invite removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invite removed successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/members/{member_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        },
        {
          "$ref": "#/components/parameters/memberId"
        }
      ],
      "put": {
        "summary": "更新域成员",
        "description": "更新域成员。",
        "tags": [
          "成员"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "group": {
                    "required": true,
                    "type": "string",
                    "description": "用于将用户更新为域成员资格的组（可以是“admin”或“user”之一）"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain member updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "删除域成员",
        "description": "删除域成员。",
        "tags": [
          "成员"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain member removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Member removed successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/aliases/{alias_id}/generate-password": {
      "post": {
        "summary": "生成别名密码",
        "description": "为别名生成密码。如果未提供 `emailed_instructions`，则响应将包含生成的用户名和密码。",
        "tags": [
          "别名"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "完全限定域名 (FQDN)"
          },
          {
            "name": "alias_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "别名的唯一标识符"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateAliasPasswordInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Alias credentials returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string",
                      "example": "alias@yourdomain.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "some-generated-password"
                    }
                  },
                  "required": [
                    "username",
                    "password"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/aliases": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        }
      ],
      "get": {
        "summary": "列出域别名",
        "description": ">[!NOTE]\n>自 2024 年 11 月 1 日起，“列出域名”和“列出域名别名”的 API 端点将默认每页最多显示 1000 条结果。如果您想提前启用此行为，可以将“?paginate=true”作为额外的查询字符串参数传递给端点查询的 URL。更多详情，请参阅分页。",
        "tags": [
          "别名"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "按名称、标签或收件人搜索域中的别名（支持 RegExp）",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "按名称搜索域中的别名（支持正则表达式）",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipient",
            "in": "query",
            "description": "按收件人搜索域中的别名（支持 RegExp）",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "按特定字段排序（前缀单连字符 - 表示反向排序）。默认为 created_at。",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "List of domain aliases",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Alias"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "post": {
        "summary": "创建新的域别名",
        "description": "为特定域创建新的别名。",
        "tags": [
          "别名"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AliasInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain alias created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alias"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/aliases/{alias_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        },
        {
          "$ref": "#/components/parameters/aliasId"
        }
      ],
      "get": {
        "summary": "检索域别名",
        "description": "检索域的特定别名。",
        "tags": [
          "别名"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain alias retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alias"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "更新域别名",
        "description": "更新域的特定别名。",
        "tags": [
          "别名"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AliasUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain alias updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alias"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          },
          "401": {
            "$ref": "#/components/responses/Error"
          },
          "403": {
            "$ref": "#/components/responses/Error"
          },
          "404": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "summary": "删除域别名",
        "description": "删除域的特定别名。",
        "tags": [
          "别名"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain alias deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Alias deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/encrypt": {
      "post": {
        "summary": "加密 TXT 记录",
        "description": "即使是免费方案，我们也允许您免费加密记录。隐私不应只是一项功能，而应融入产品的各个方面。应[隐私指南讨论](https://discuss.privacyguides.net/t/forward-email-email-provider/13370)和我们的[GitHub issues](https://github.com/forwardemail/forwardemail.net/issues/254)中的强烈要求，我们添加了此功能。",
        "tags": [
          "加密"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "text"
                ],
                "properties": {
                  "input": {
                    "required": true,
                    "type": "string",
                    "description": "任何有效的转发电子邮件纯文本 TXT 记录"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Text encrypted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "encrypted": {
                      "type": "string",
                      "description": "Encrypted text"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          },
          "401": {
            "$ref": "#/components/responses/Error"
          },
          "429": {
            "description": "Rate limit exceeded (50 requests for 'encrypt')",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/contacts": {
      "get": {
        "summary": "列出联系人",
        "description": "列出所有联系人 (CardDAV)。此端点即将推出。",
        "tags": [
          "别名联系人"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "创建联系人",
        "description": "创建新联系人 (CardDAV)。此端点即将推出。",
        "tags": [
          "别名联系人"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/contacts/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "联系人 ID",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "检索联系人",
        "description": "检索特定联系人 (CardDAV)。此端点即将推出。",
        "tags": [
          "别名联系人"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "更新联系方式",
        "description": "更新特定联系人 (CardDAV)。此端点即将推出。",
        "tags": [
          "别名联系人"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "删除联系人",
        "description": "删除特定联系人（CardDAV）。此端点即将推出。",
        "tags": [
          "别名联系人"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/calendars": {
      "get": {
        "summary": "列出日历",
        "description": "列出所有日历 (CalDAV)。此端点即将推出。",
        "tags": [
          "别名日历"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "创建日历",
        "description": "创建新日历 (CalDAV)。此端点即将推出。",
        "tags": [
          "别名日历"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/calendars/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "日历 ID",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "检索日历",
        "description": "检索特定日历 (CalDAV)。此端点即将推出。",
        "tags": [
          "别名日历"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "更新日历",
        "description": "更新特定日历 (CalDAV)。此端点即将推出。",
        "tags": [
          "别名日历"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "删除日历",
        "description": "删除特定日历 (CalDAV)。此端点即将推出。",
        "tags": [
          "别名日历"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/messages": {
      "get": {
        "summary": "列出并搜索消息",
        "description": "列出并搜索邮件（IMAP/POP3）。此端点即将推出。",
        "tags": [
          "别名消息"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "创建消息",
        "description": "创建新邮件（IMAP/POP3）。这不会发送电子邮件，只会将邮件添加到您的邮箱文件夹（类似于 IMAP APPEND 命令）。此端点即将推出。",
        "tags": [
          "别名消息"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/messages/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "消息 ID",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "检索消息",
        "description": "检索特定消息（IMAP/POP3）。此端点即将推出。",
        "tags": [
          "别名消息"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "更新消息",
        "description": "更新特定消息（IMAP/POP3）。此端点即将推出。",
        "tags": [
          "别名消息"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "删除消息",
        "description": "删除特定邮件（IMAP/POP3）。此端点即将推出。",
        "tags": [
          "别名消息"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/folders": {
      "get": {
        "summary": "列出文件夹",
        "description": "列出所有文件夹（IMAP/POP3）。此端点即将推出。",
        "tags": [
          "别名文件夹"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "创建文件夹",
        "description": "创建新文件夹 (IMAP/POP3)。此端点即将推出。",
        "tags": [
          "别名文件夹"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/folders/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "文件夹 ID",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "检索文件夹",
        "description": "检索特定文件夹 (IMAP/POP3)。此端点即将推出。",
        "tags": [
          "别名文件夹"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "更新文件夹",
        "description": "更新特定文件夹 (IMAP/POP3)。此端点即将推出。",
        "tags": [
          "别名文件夹"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "删除文件夹",
        "description": "删除特定文件夹（IMAP/POP3）。此端点即将推出。",
        "tags": [
          "别名文件夹"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/folders/{id}/copy": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "文件夹 ID",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "复制文件夹",
        "description": "复制特定文件夹（IMAP/POP3）。此端点即将推出。",
        "tags": [
          "别名文件夹"
        ],
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "responses": {
          "501": {
            "description": "Not Implemented - This feature is coming soon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "帐户",
      "description": "帐户管理端点"
    },
    {
      "name": "日志",
      "description": "日志管理端点"
    },
    {
      "name": "电子邮件",
      "description": "电子邮件管理端点"
    },
    {
      "name": "域",
      "description": "> [!TIP]\n> 以域名 <code>/v1/domains/:domain\\_name</code> 作为端点的域名端点可以与域名 ID <code>:domain\\_id</code> 互换。这意味着您可以通过域名的 <code>name</code> 或 <code>id</code> 值来引用该域名。"
    },
    {
      "name": "邀请",
      "description": "域邀请管理端点"
    },
    {
      "name": "成员",
      "description": "域成员管理端点"
    },
    {
      "name": "别名",
      "description": "域别名管理端点"
    },
    {
      "name": "加密",
      "description": "加密端点"
    },
    {
      "name": "别名联系人",
      "description": "别名联系人管理端点 (CardDAV)\n\n>[!NOTE]\n>与其他 API 端点不同，这些端点要求身份验证“用户名”等于别名用户名，“密码”等于别名生成的密码，作为基本授权标头。\n\n>[!WARNING]\n>此端点部分尚在开发中，预计将于 2025 年发布（希望如此）。在此期间，请使用我们网站导航栏中“应用”下拉菜单中的 IMAP 客户端。"
    },
    {
      "name": "别名日历",
      "description": "别名日历管理端点 (CalDAV)\n\n>[!NOTE]\n> 与其他 API 端点不同，这些端点需要 [Authentication](#description/authentication) 将别名用户名设为“username”，将别名生成的密码设为“password”，作为基本授权标头。\n\n>[!WARNING]\n> 此端点部分尚在开发中，预计将于 2025 年发布（预计）。在此期间，请使用我们网站导航栏中“应用”下拉菜单中的 IMAP 客户端。"
    },
    {
      "name": "别名消息",
      "description": "别名邮件管理端点 (IMAP/POP3)\n\n>[!NOTE]\n> 与其他 API 端点不同，这些端点需要 [身份验证](#description/authentication) 将“用户名”设置为别名的用户名，将“密码”设置为别名生成的密码，作为基本授权标头。\n\n> [!WARNING]\n> 此端点部分尚在开发中，预计将于 2025 年发布。在此期间，请使用我们网站导航栏中“应用”下拉菜单中的 IMAP 客户端。\n请确保您已按照域名的设置说明进行操作。\n这些说明可在我们的常见问题解答部分 [您支持使用 IMAP 接收电子邮件吗？](/faq#do-you-support-receiving-email-with-imap) 中找到。"
    },
    {
      "name": "别名文件夹",
      "description": "别名文件夹管理端点 (IMAP/POP3)\n\n>[!TIP]\n> 文件夹路径为 <code>/v1/folders/:path</code> 的端点可以与文件夹 ID <code>:id</code> 互换。这意味着您可以通过 <code>path</code> 或 <code>id</code> 值来引用文件夹。\n\n>[!WARNING]\n> 此端点部分尚在开发中，预计将于 2025 年发布。在此期间，请使用我们网站导航栏中“应用”下拉菜单中的 IMAP 客户端。"
    }
  ]
}