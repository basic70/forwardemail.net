{
  "openapi": "3.0.0",
  "info": {
    "title": "Forward Email API",
    "description": "<img src=\"/img/articles/email-api.webp\" alt=\"\"/><br />Willkommen zur umfassenden API-Dokumentation für Forward Email. Mit dieser API können Sie E-Mail-Weiterleitungen, Domänen, Aliase, ausgehende E-Mails und mehr programmgesteuert verwalten.\n\n## Hauptfunktionen\n* **Domänenverwaltung:** Domänen erstellen, abrufen, aktualisieren, löschen und verifizieren.\n* **Aliasverwaltung:** E-Mail-Aliase verwalten, einschließlich Erstellung, Aktualisierung und Empfängerverwaltung.\n* **Ausgehendes SMTP:** E-Mails per SMTP versenden, Limits verwalten und gesendete E-Mails verfolgen.\n* **Konto & Protokolle:** Kontodaten verwalten und Aktivitätsprotokolle herunterladen.\n* **Sicherheit:** TXT-Einträge verschlüsseln und Domänenmitglieder/Einladungen verwalten.\n* **CardDAV-Kontakte:** Vollständige CRUD-Operationen für die Kontaktverwaltung mit vCard-Unterstützung.\n* **CalDAV-Kalender:** Umfassende Kalenderverwaltung mit Zeitzonen- und Farbunterstützung.\n* **IMAP/POP3-Nachrichten:** Umfassende Nachrichtenverwaltung mit erweiterten Suchfunktionen.\n* **IMAP/POP3-Ordner:** Vollständige Ordnerverwaltung inklusive Erstellen, Umbenennen und Löschen.\n\n## Authentifizierung\nDie meisten Endpunkte erfordern eine Authentifizierung mit Ihrem **API-Schlüssel**. Geben Sie den API-Schlüssel als „Benutzername“ im Header der Basisauthentifizierung an und lassen Sie das Passwort leer.\n\n```http\nAutorisierung: Basis QVBJX1RPS0VOOg==\n```\n(Ersetzen Sie `API_TOKEN` durch Ihren tatsächlichen Schlüssel vor der Base64-Kodierung.)\n\nEndpunkte im Zusammenhang mit **Alias-Kontakten, -Kalendern, -Nachrichten und -Ordnern** erfordern einen generierten Alias-Benutzernamen und ein Passwort für die Basisauthentifizierung.\n\n## Fehler\nDie API verwendet standardmäßige HTTP-Statuscodes, um Erfolg oder Misserfolg anzuzeigen. Fehlerantworten enthalten einen JSON-Text mit einem Feld „Nachricht“, das den Fehler detailliert beschreibt.\n\n| Statuscode | Bedeutung |\n|-------------|---------------------|\n| 200 | OK |\n| 400 | Ungültige Anfrage |\n| 401 | Nicht autorisiert |\n| 403 | Verboten |\n| 404 | Nicht gefunden |\n| 409 | Konflikt |\n| 412 | Vorbedingung fehlgeschlagen |\n| 429 | Zu viele Anfragen |\n| 500 | Interner Serverfehler |\n| 501 | Nicht implementiert |\n| 502 | Ungültiges Gateway |\n| 503 | Dienst nicht verfügbar |\n| 504 | Gateway-Timeout |\n\n*Bei einem `5xx`-Fehler wenden Sie sich bitte an [api@forwardemail.net](mailto:api@forwardemail.net).*\n\n## Lokalisierung\nAPI-Antworten werden basierend auf der vom Benutzer erkannten Gebietsschemaeinstellung oder dem `Accept-Language`-Header übersetzt. Über 25 Sprachen werden unterstützt.\n\n## Seitennummerierung\nEndpunkte, die Listen zurückgeben, unterstützen die Seitennummerierung über Abfrageparameter.\n\n| Parameter | Typ | Optional | Beschreibung | Standard | Einschränkungen |\n|--------------|---------|----------|--------------------------------------------------------------|---------|--------------------|\n| `page` | Integer | Ja | Abzurufende Seitenzahl. | 1 | `>= 1` |\n| `limit` | Integer | Ja | Anzahl der Ergebnisse pro Seite. | 10 | `>= 1`, `<= 50` |\n| `pagination` | Boolean | Ja | Aktivierung der Seitennummerierung (für einige Endpunkte vor dem 1. November 2024 erforderlich). | false | |\n\n**Seitennummerierungsüberschriften:**\n* `X-Page-Count`: Gesamtseitenzahl.\n* `X-Page-Current`: Aktuelle Seitenzahl.\n* „X-Seitengröße“: Anzahl der Elemente auf der aktuellen Seite.\n* „X-Elementanzahl“: Gesamtzahl der Elemente auf allen Seiten.\n* „Link“: Navigationslinks (vorherige, nächste, erste, letzte).\n\n**Beispiel:**\n```bash\ncurl \"https://api.forwardemail.net/v1/domains?page=2&limit=20&pagination=true\" \\\n-u API_TOKEN:\n```\n\n## Empfohlene Bibliotheken\n* **Ruby:** [Faraday](https://github.com/lostisland/faraday)\n* **Python:** [requests](https://requests.readthedocs.io/en/latest/)\n* **Java:** [OkHttp](https://square.github.io/okhttp/)\n* **PHP:** [Guzzle](https://docs.guzzlephp.org/en/stable/)\n* **JavaScript/Node.js:** [superagent](https://github.com/visionmedia/superagent) (Verwaltet von Forward Email)\n* **Go:** `net/http`\n* **.NET:** [RestSharp](https://restsharp.dev/)",
    "version": "1.0.0",
    "contact": {
      "name": "Forward Email Support",
      "url": "https://forwardemail.net",
      "email": "api@forwardemail.net"
    }
  },
  "servers": [
    {
      "url": "https://api.forwardemail.net",
      "description": "Weiterleitungs-E-Mail-API-Server"
    }
  ],
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "http",
        "scheme": "basic",
        "description": "Verwenden Sie Ihren API-Schlüssel als **Benutzernamen** für die Basisauthentifizierung. Lassen Sie das Passwortfeld leer.\n\n**Beispiel:**\nWenn Ihr API-Schlüssel „IHR_API_SCHLÜSSEL“ lautet, lautet der Base64-kodierte Wert für den Header „Authorization“: „echo -n \"IHR_API_SCHLÜSSEL:\" | base64“.\n\n```http\nAuthorization: Basic WU9VUl9BUElfS0VZOg==\n```\n"
      },
      "AliasAuth": {
        "type": "http",
        "scheme": "basic",
        "description": "Verwenden Sie den generierten **Alias-Benutzernamen und das generierte Passwort** für die Standardauthentifizierung. Dies gilt für Endpunkte unter:\n* Alias-Kontakte (CardDAV)\n* Alias-Kalender (CalDAV)\n* Alias-Nachrichten (IMAP/POP3)\n* Alias-Ordner (IMAP/POP3)\n\n**Beispiel:**\nWenn der Alias-Benutzername `alias@domain.com` und das Passwort `GENERATED_PASSWORD` lautet, lautet der Base64-kodierte Wert `echo -n \"alias@domain.com:GENERATED_PASSWORD\" | base64`.\n\n```http\nAuthorization: Basic YWxpYXNAZG9tYWluLmNvbTpHRU5FUkFURURfUEFTU1dPUkQ=\n```\n"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "type": "string",
            "description": "Fehlermeldung"
          }
        }
      },
      "Account": {
        "type": "object",
        "required": [
          "id",
          "email",
          "plan",
          "object"
        ],
        "properties": {
          "sessions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "has_newsletter": {
            "type": "boolean"
          },
          "plan": {
            "type": "string",
            "example": "free"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "max_quota_per_alias": {
            "type": "integer",
            "format": "int64"
          },
          "full_email": {
            "type": "string",
            "format": "email"
          },
          "display_name": {
            "type": "string"
          },
          "otp_enabled": {
            "type": "boolean"
          },
          "last_locale": {
            "type": "string"
          },
          "address_country": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "example": "user"
          },
          "locale": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "address_html": {
            "type": "string"
          },
          "api_token": {
            "type": "string",
            "format": "uuid"
          }
        },
        "example": {
          "sessions": [],
          "has_newsletter": true,
          "plan": "free",
          "email": "test1@test1.com",
          "max_quota_per_alias": 10737418240,
          "full_email": "test1@test1.com",
          "display_name": "test1@test1.com",
          "otp_enabled": false,
          "last_locale": "en",
          "address_country": "None",
          "id": "683fb2e81cc5d449a0d4cd9d",
          "object": "user",
          "locale": "en",
          "created_at": "2025-06-04T02:43:52.646Z",
          "updated_at": "2025-06-04T02:43:55.350Z",
          "address_html": "",
          "api_token": "15ac16ae21784aa2cb4d5508"
        }
      },
      "Contact": {
        "type": "object",
        "required": [
          "id",
          "uid",
          "full_name",
          "content",
          "etag",
          "is_group",
          "emails",
          "phone_numbers",
          "created_at",
          "updated_at",
          "object"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Kontakt-ID (contact_id von CardDAV)"
          },
          "uid": {
            "type": "string",
            "description": "Kontakt UID"
          },
          "full_name": {
            "type": "string",
            "description": "Vollständiger Name des Kontakts"
          },
          "content": {
            "type": "string",
            "description": "vCard-Inhalt"
          },
          "etag": {
            "type": "string",
            "description": "ETag zur Versionierung"
          },
          "is_group": {
            "type": "boolean",
            "description": "Ob der Kontakt eine Gruppe ist"
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string",
                  "format": "email"
                },
                "type": {
                  "type": "string",
                  "default": "INTERNET"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "Array von E-Mail-Adressen"
          },
          "phone_numbers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "default": "CELL"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "Array von Telefonnummern"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "enum": [
              "contact"
            ]
          }
        },
        "example": {
          "id": "contact123",
          "uid": "uid123",
          "full_name": "John Doe",
          "content": "BEGIN:VCARD\\nVERSION:3.0\\nUID:uid123\\nFN:John Doe\\nEMAIL;TYPE=INTERNET:john@example.com\\nEND:VCARD",
          "etag": "etag123",
          "is_group": false,
          "emails": [
            {
              "value": "john@example.com",
              "type": "INTERNET"
            }
          ],
          "phone_numbers": [
            {
              "value": "+1234567890",
              "type": "CELL"
            }
          ],
          "created_at": "2025-01-01T00:00:00.000Z",
          "updated_at": "2025-01-01T00:00:00.000Z",
          "object": "contact"
        }
      },
      "ContactInput": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "vCard-Inhalt (falls nicht angegeben, wird aus anderen Feldern generiert)"
          },
          "full_name": {
            "type": "string",
            "description": "Vollständiger Name des Kontakts"
          },
          "contact_id": {
            "type": "string",
            "description": "Benutzerdefinierte Kontakt-ID (falls nicht angegeben, wird sie automatisch generiert)"
          },
          "uid": {
            "type": "string",
            "description": "Kontakt-UID (falls nicht angegeben, wird automatisch generiert)"
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string",
                  "format": "email"
                },
                "type": {
                  "type": "string",
                  "default": "INTERNET"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "Array von E-Mail-Adressen"
          },
          "phone_numbers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "default": "CELL"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "Array von Telefonnummern"
          },
          "phones": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "default": "CELL"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "Array von Telefonnummern (Alias für Telefonnummern)"
          },
          "addresses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "street": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "postalCode": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              }
            },
            "description": "Array von Adressen"
          },
          "is_group": {
            "type": "boolean",
            "description": "Ob der Kontakt eine Gruppe ist"
          }
        }
      },
      "ContactUpdateInput": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "vCard-Inhalt"
          },
          "full_name": {
            "type": "string",
            "description": "Vollständiger Name des Kontakts"
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string",
                  "format": "email"
                },
                "type": {
                  "type": "string",
                  "default": "INTERNET"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "Array von E-Mail-Adressen"
          },
          "phone_numbers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "default": "CELL"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "Array von Telefonnummern"
          },
          "phones": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "default": "CELL"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "Array von Telefonnummern (Alias für Telefonnummern)"
          },
          "addresses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "street": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "postalCode": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              }
            },
            "description": "Array von Adressen"
          },
          "is_group": {
            "type": "boolean",
            "description": "Ob der Kontakt eine Gruppe ist"
          }
        }
      },
      "Calendar": {
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "color",
          "timezone",
          "order",
          "created_at",
          "updated_at",
          "object"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Kalender-ID (calendarId von CalDAV)"
          },
          "name": {
            "type": "string",
            "description": "Kalendername"
          },
          "description": {
            "type": "string",
            "description": "Kalenderbeschreibung"
          },
          "color": {
            "type": "string",
            "description": "Kalenderfarbe (Hex-Format)"
          },
          "timezone": {
            "type": "string",
            "description": "Kalenderzeitzone"
          },
          "order": {
            "type": "integer",
            "description": "Kalenderanzeigereihenfolge"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "enum": [
              "calendar"
            ]
          }
        },
        "example": {
          "id": "calendar123",
          "name": "Personal Calendar",
          "description": "My personal calendar",
          "color": "#ff0000",
          "timezone": "America/New_York",
          "order": 0,
          "created_at": "2025-01-01T00:00:00.000Z",
          "updated_at": "2025-01-01T00:00:00.000Z",
          "object": "calendar"
        }
      },
      "CalendarInput": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Kalendername"
          },
          "calendar_id": {
            "type": "string",
            "description": "Benutzerdefinierte Kalender-ID (falls nicht angegeben, wird automatisch generiert)"
          },
          "description": {
            "type": "string",
            "description": "Kalenderbeschreibung"
          },
          "color": {
            "type": "string",
            "description": "Kalenderfarbe (Hex-Format, falls nicht angegeben, wird automatisch generiert)"
          },
          "timezone": {
            "type": "string",
            "description": "Kalenderzeitzone (standardmäßig die Zeitzone des Benutzers oder UTC)"
          },
          "order": {
            "type": "integer",
            "description": "Kalenderanzeigereihenfolge (Standardwert: 0)"
          }
        }
      },
      "CalendarUpdateInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Kalendername"
          },
          "description": {
            "type": "string",
            "description": "Kalenderbeschreibung"
          },
          "color": {
            "type": "string",
            "description": "Kalenderfarbe (Hex-Format)"
          },
          "timezone": {
            "type": "string",
            "description": "Kalenderzeitzone"
          },
          "order": {
            "type": "integer",
            "description": "Kalenderanzeigereihenfolge"
          }
        }
      },
      "Folder": {
        "type": "object",
        "required": [
          "id",
          "path",
          "name",
          "parent",
          "uid_validity",
          "uid_next",
          "modify_index",
          "subscribed",
          "flags",
          "retention",
          "special_use",
          "created_at",
          "updated_at",
          "object"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Ordner-ID"
          },
          "path": {
            "type": "string",
            "description": "Vollständiger Ordnerpfad"
          },
          "name": {
            "type": "string",
            "description": "Ordnername (letzter Teil des Pfads)"
          },
          "parent": {
            "type": "string",
            "nullable": true,
            "description": "Pfad des übergeordneten Ordners"
          },
          "uid_validity": {
            "type": "integer",
            "description": "Gültigkeit der IMAP-UID"
          },
          "uid_next": {
            "type": "integer",
            "description": "Nächster UID-Wert"
          },
          "modify_index": {
            "type": "integer",
            "description": "Änderungsindex"
          },
          "subscribed": {
            "type": "boolean",
            "description": "Ob Ordner abonniert ist"
          },
          "flags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Ordnerflaggen"
          },
          "retention": {
            "type": "integer",
            "nullable": true,
            "description": "Aufbewahrungszeitraum für Nachrichten"
          },
          "special_use": {
            "type": "string",
            "nullable": true,
            "description": "Besondere Verwendungsbezeichnung"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "enum": [
              "folder"
            ]
          }
        },
        "example": {
          "id": "folder123",
          "path": "INBOX/Subfolder",
          "name": "Subfolder",
          "parent": "INBOX",
          "uid_validity": 123456,
          "uid_next": 1,
          "modify_index": 1,
          "subscribed": true,
          "flags": [],
          "retention": null,
          "special_use": null,
          "created_at": "2025-01-01T00:00:00.000Z",
          "updated_at": "2025-01-01T00:00:00.000Z",
          "object": "folder"
        }
      },
      "FolderInput": {
        "type": "object",
        "required": [
          "path"
        ],
        "properties": {
          "path": {
            "type": "string",
            "description": "Ordnerpfad/-name"
          }
        }
      },
      "FolderUpdateInput": {
        "type": "object",
        "required": [
          "path"
        ],
        "properties": {
          "path": {
            "type": "string",
            "description": "Neuer Ordnerpfad/Name"
          }
        }
      },
      "Message": {
        "type": "object",
        "required": [
          "id",
          "root_id",
          "folder_id",
          "folder_path",
          "thread_id",
          "header_message_id",
          "is_unread",
          "is_flagged",
          "is_deleted",
          "is_draft",
          "is_junk",
          "is_copied",
          "is_searchable",
          "is_expired",
          "has_attachment",
          "retention_date",
          "internal_date",
          "header_date",
          "subject",
          "flags",
          "size",
          "uid",
          "modseq",
          "transaction",
          "remote_address",
          "object"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Nachrichten-ID"
          },
          "root_id": {
            "type": "string",
            "description": "Stammnachrichten-ID für Threading"
          },
          "folder_id": {
            "type": "string",
            "description": "Ordner-ID, die die Nachricht enthält"
          },
          "folder_path": {
            "type": "string",
            "description": "Ordnerpfad, der die Nachricht enthält"
          },
          "thread_id": {
            "type": "string",
            "description": "Thread-ID zur Konversationsgruppierung"
          },
          "header_message_id": {
            "type": "string",
            "description": "Message-ID-Headerwert"
          },
          "is_unread": {
            "type": "boolean",
            "description": "Ob die Nachricht ungelesen ist"
          },
          "is_flagged": {
            "type": "boolean",
            "description": "Ob die Nachricht markiert ist"
          },
          "is_deleted": {
            "type": "boolean",
            "description": "Ob die Nachricht gelöscht wird"
          },
          "is_draft": {
            "type": "boolean",
            "description": "Ob die Nachricht ein Entwurf ist"
          },
          "is_junk": {
            "type": "boolean",
            "description": "Ob die Nachricht Junk/Spam ist"
          },
          "is_copied": {
            "type": "boolean",
            "description": "Ob die Nachricht kopiert wird"
          },
          "is_searchable": {
            "type": "boolean",
            "description": "Ob die Nachricht durchsuchbar ist"
          },
          "is_expired": {
            "type": "boolean",
            "description": "Ob die Nachricht abgelaufen ist"
          },
          "has_attachment": {
            "type": "boolean",
            "description": "Ob die Nachricht Anhänge hat"
          },
          "retention_date": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Aufbewahrungsdatum der Nachricht"
          },
          "internal_date": {
            "type": "string",
            "format": "date-time",
            "description": "Internes Datum (IMAP)"
          },
          "header_date": {
            "type": "string",
            "format": "date-time",
            "description": "Datum aus Nachrichtenkopfzeilen"
          },
          "subject": {
            "type": "string",
            "description": "Betreff der Nachricht"
          },
          "flags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "IMAP-Flags"
          },
          "size": {
            "type": "integer",
            "description": "Nachrichtengröße in Bytes"
          },
          "uid": {
            "type": "integer",
            "description": "IMAP-UID"
          },
          "modseq": {
            "type": "integer",
            "description": "Änderungssequenz"
          },
          "transaction": {
            "type": "string",
            "description": "Transaktionstyp"
          },
          "remote_address": {
            "type": "string",
            "description": "Remote-IP-Adresse"
          },
          "nodemailer": {
            "type": "object",
            "description": "Analysiertes Nachrichtenobjekt (standardmäßig enthalten, zum Ausschließen ?nodemailer=false festlegen)"
          },
          "raw": {
            "type": "string",
            "description": "Roher Nachrichteninhalt (standardmäßig enthalten, zum Ausschließen ?raw=false festlegen)"
          },
          "object": {
            "type": "string",
            "enum": [
              "message"
            ]
          }
        },
        "example": {
          "id": "message123",
          "root_id": "root123",
          "folder_id": "folder123",
          "folder_path": "INBOX",
          "thread_id": "thread123",
          "header_message_id": "<message123@example.com>",
          "is_unread": true,
          "is_flagged": false,
          "is_deleted": false,
          "is_draft": false,
          "is_junk": false,
          "is_copied": false,
          "is_searchable": true,
          "is_expired": false,
          "has_attachment": false,
          "retention_date": null,
          "internal_date": "2025-01-01T00:00:00.000Z",
          "header_date": "2025-01-01T00:00:00.000Z",
          "subject": "Test Message",
          "flags": [
            "\\Seen"
          ],
          "size": 1024,
          "uid": 1,
          "modseq": 1,
          "transaction": "API",
          "remote_address": "127.0.0.1",
          "object": "message"
        }
      },
      "MessageInput": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "email",
            "description": "E-Mail-Adresse des Absenders"
          },
          "to": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "E-Mail-Adressen der Empfänger"
          },
          "cc": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "E-Mail-Adressen der CC-Empfänger"
          },
          "bcc": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "E-Mail-Adressen von BCC-Empfängern"
          },
          "subject": {
            "type": "string",
            "description": "Betreff der Nachricht"
          },
          "text": {
            "type": "string",
            "description": "Nur-Text-Inhalt"
          },
          "html": {
            "type": "string",
            "description": "HTML-Inhalt"
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Nachrichtenanhänge (Nodemailer-Format)"
          },
          "folder": {
            "type": "string",
            "description": "Zielordner (standardmäßig INBOX)"
          },
          "flags": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "description": "Für die Nachricht zu setzende IMAP-Flags"
          }
        }
      },
      "MessageUpdateInput": {
        "type": "object",
        "properties": {
          "flags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Für die Nachricht zu setzende IMAP-Flags"
          },
          "folder": {
            "type": "string",
            "description": "Nachricht in diesen Ordner verschieben"
          }
        }
      },
      "Email": {
        "type": "object",
        "required": [
          "id",
          "object",
          "status",
          "alias",
          "domain",
          "user"
        ],
        "properties": {
          "is_redacted": {
            "type": "boolean"
          },
          "hard_bounces": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "soft_bounces": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "is_bounce": {
            "type": "boolean"
          },
          "alias": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "example": "sent"
          },
          "is_locked": {
            "type": "boolean"
          },
          "envelope": {
            "type": "object",
            "properties": {
              "from": {
                "type": "string",
                "format": "email"
              },
              "to": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            }
          },
          "messageId": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "subject": {
            "type": "string"
          },
          "accepted": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "example": "email"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "link": {
            "type": "string",
            "format": "uri"
          }
        },
        "example": {
          "is_redacted": true,
          "hard_bounces": [],
          "soft_bounces": [],
          "is_bounce": false,
          "alias": "67a180fxxxxxxxe46a3f0edf",
          "domain": "5efae85dxxxxxxxf4bb53c7a",
          "user": "5efabd3907xxxxxxx12890b8",
          "status": "sent",
          "is_locked": false,
          "envelope": {
            "from": "test@test.com",
            "to": [
              "test@test1.com"
            ]
          },
          "messageId": "1a04fee3-5230-4a85-9111-a2c376835885@shaunwarman.com",
          "date": "2025-06-04T03:32:19.000Z",
          "subject": "testing",
          "accepted": [
            "test@test1.com"
          ],
          "id": "683fbe4d5baef1b583a1xxxx",
          "object": "email",
          "created_at": "2025-06-04T03:32:29.138Z",
          "updated_at": "2025-06-04T03:32:33.847Z",
          "link": "https://forwardemail.net/my-account/emails/683fbe4d5baef1b583a11e54"
        }
      },
      "EmailList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Email"
        }
      },
      "SMTP": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "email",
            "description": "Die E-Mail-Adresse des Absenders (muss als Alias der Domäne vorhanden sein)."
          },
          "to": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "Durch Kommas getrennte Liste oder ein Array von Empfängern für die Kopfzeile „An“."
          },
          "cc": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "Durch Kommas getrennte Liste oder ein Array von Empfängern für den „Cc“-Header."
          },
          "bcc": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "Durch Kommas getrennte Liste oder ein Array von Empfängern für den „Bcc“-Header."
          },
          "subject": {
            "type": "string",
            "description": "Der Betreff der E-Mail."
          },
          "text": {
            "type": "string",
            "description": "Die Klartextversion der Nachricht."
          },
          "html": {
            "type": "string",
            "description": "Die HTML-Version der Nachricht."
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Ein Array von Anhangsobjekten (siehe allgemeine Felder von Nodemailer)."
          },
          "sender": {
            "type": "string",
            "format": "email",
            "description": "Die E-Mail-Adresse für den Header „Absender“."
          },
          "replyTo": {
            "type": "string",
            "format": "email",
            "description": "Die E-Mail-Adresse für den „Antwort-An“-Header."
          },
          "inReplyTo": {
            "type": "string",
            "description": "Die Nachrichten-ID, auf die die Nachricht antwortet."
          },
          "references": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "description": "Durch Leerzeichen getrennte Liste oder ein Array von Nachrichten-IDs."
          },
          "attachDataUrls": {
            "type": "boolean",
            "description": "Wenn „true“, werden Daten konvertiert: Bilder im HTML-Inhalt in eingebettete Anhänge."
          },
          "watchHtml": {
            "type": "string",
            "description": "Apple Watch-spezifische HTML-Version der Nachricht."
          },
          "amp": {
            "type": "string",
            "description": "AMP4EMAIL-spezifische HTML-Version der Nachricht."
          },
          "icalEvent": {
            "type": "object",
            "description": "Ein iCalendar-Ereignis als alternativer Nachrichteninhalt."
          },
          "alternatives": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Ein Array mit alternativen Nachrichteninhalten."
          },
          "encoding": {
            "type": "string",
            "description": "Kodierung für den Text und die HTML-Zeichenfolgen (z. B. „utf-8“, „hex“, „base64“)."
          },
          "raw": {
            "type": "string",
            "description": "Benutzerdefiniert generierte Nachricht im RFC822-Format (anstelle der Verwendung der Nodemailer-Generierung)."
          },
          "textEncoding": {
            "type": "string",
            "enum": [
              "quoted-printable",
              "base64"
            ],
            "description": "Für Textwerte muss die Kodierung verwendet werden."
          },
          "priority": {
            "type": "string",
            "enum": [
              "high",
              "normal",
              "low"
            ],
            "description": "Prioritätsstufe für die E-Mail."
          },
          "headers": {
            "oneOf": [
              {
                "type": "object",
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            ],
            "description": "Objekt oder Array zusätzlicher Headerfelder."
          },
          "messageId": {
            "type": "string",
            "description": "Optionale Nachrichten-ID für den Header „Nachrichten-ID“."
          },
          "date": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "description": "Optionaler Datumsheader. Darf nicht mehr als 30 Tage in der Zukunft liegen."
          },
          "list": {
            "type": "object",
            "description": "Optionales Objekt von List-*-Headern."
          }
        }
      },
      "Domain": {
        "type": "object",
        "properties": {
          "has_newsletter": {
            "type": "boolean"
          },
          "ignore_mx_check": {
            "type": "boolean"
          },
          "retention_days": {
            "type": "integer"
          },
          "has_regex": {
            "type": "boolean"
          },
          "has_catchall": {
            "type": "boolean"
          },
          "allowlist": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "denylist": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "restricted_alias_names": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "has_adult_content_protection": {
            "type": "boolean"
          },
          "has_phishing_protection": {
            "type": "boolean"
          },
          "has_executable_protection": {
            "type": "boolean"
          },
          "has_virus_protection": {
            "type": "boolean"
          },
          "is_catchall_regex_disabled": {
            "type": "boolean"
          },
          "has_smtp": {
            "type": "boolean"
          },
          "is_smtp_suspended": {
            "type": "boolean"
          },
          "plan": {
            "type": "string"
          },
          "max_recipients_per_alias": {
            "type": "integer"
          },
          "smtp_port": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "has_mx_record": {
            "type": "boolean"
          },
          "has_txt_record": {
            "type": "boolean"
          },
          "has_dkim_record": {
            "type": "boolean"
          },
          "has_return_path_record": {
            "type": "boolean"
          },
          "has_dmarc_record": {
            "type": "boolean"
          },
          "has_recipient_verification": {
            "type": "boolean"
          },
          "has_custom_verification": {
            "type": "boolean"
          },
          "verification_record": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "enum": [
              "domain"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "storage_used": {
            "type": "integer"
          },
          "storage_used_by_aliases": {
            "type": "integer"
          },
          "storage_quota": {
            "type": "integer"
          },
          "smtp_dns_records": {
            "type": "object",
            "properties": {
              "dkim": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              },
              "return_path": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              },
              "dmarc": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "link": {
            "type": "string",
            "format": "uri"
          }
        },
        "example": [
          {
            "has_newsletter": false,
            "ignore_mx_check": false,
            "retention_days": 0,
            "has_regex": false,
            "has_catchall": true,
            "allowlist": [],
            "denylist": [],
            "restricted_alias_names": [],
            "has_adult_content_protection": true,
            "has_phishing_protection": true,
            "has_executable_protection": true,
            "has_virus_protection": true,
            "is_catchall_regex_disabled": false,
            "has_smtp": false,
            "is_smtp_suspended": false,
            "plan": "team",
            "max_recipients_per_alias": 10,
            "smtp_port": "25",
            "name": "test.com",
            "has_mx_record": false,
            "has_txt_record": false,
            "has_dkim_record": false,
            "has_return_path_record": false,
            "has_dmarc_record": false,
            "has_recipient_verification": false,
            "has_custom_verification": false,
            "verification_record": "kcjg6vrO8Q",
            "id": "683f1172c4bad2524410b857",
            "object": "domain",
            "created_at": "2025-06-03T15:14:59.000Z",
            "updated_at": "2025-06-03T15:14:59.254Z",
            "storage_used": 0,
            "storage_used_by_aliases": 0,
            "storage_quota": 10737418240,
            "smtp_dns_records": {
              "dkim": {
                "name": "fe-ebf3212716._domainkey",
                "value": "v=DKIM1; k=rsa; p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCcG+YBDPhyH8bLmyflmU9w1klYDeWpEufIlVqyWqly9lC+J/ntkKn4gum28EeE6vR+55x4JFCR8qSaw0YO1eCRwBgpFB0kKzbELHh2i2TKKwrqB3gPLXp4q4lbcGX2eD6fPCRwckTHqmiOzMhX8GD60zVlEvabok4LJ1i/BOyh6wIDAQAB;"
              },
              "return_path": {
                "name": "fe-bounces",
                "value": "forwardemail.net"
              },
              "dmarc": {
                "name": "_dmarc",
                "value": "v=DMARC1; p=reject; pct=100; rua=mailto:dmarc-683f1172c4bad2524410b857@localhost;"
              }
            },
            "link": "http://localhost:3000/my-account/domains/test.com"
          }
        ]
      },
      "CreateDomainInput": {
        "type": "object",
        "required": [
          "domain"
        ],
        "properties": {
          "domain": {
            "type": "string",
            "description": "Vollqualifizierter Domänenname (FQDN) oder IP-Adresse"
          },
          "team_domain": {
            "type": "string",
            "nullable": true,
            "description": "Zuweisung zum selben Team aus einer anderen Domäne; kann eine Domänen-ID oder ein FQDN sein. Verwenden Sie „keine“, um dies explizit zu deaktivieren."
          },
          "plan": {
            "type": "string",
            "enum": [
              "free",
              "enhanced_protection",
              "team"
            ],
            "description": "Plantyp (standardmäßig „kostenlos“ oder der aktuelle kostenpflichtige Plan des Benutzers)"
          },
          "catchall": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "type": "string",
                "description": "Durch Komma, Leerzeichen oder Zeilenumbruch getrennte Liste von E-Mail-Adressen"
              }
            ],
            "description": "Erstellen Sie einen standardmäßigen Catch-All-Alias (Standardwert: „true“)"
          },
          "has_adult_content_protection": {
            "type": "boolean",
            "description": "Aktivieren Sie den Spam-Scanner-Schutz vor Inhalten für Erwachsene"
          },
          "has_phishing_protection": {
            "type": "boolean",
            "description": "Spam-Scanner-Phishing-Schutz aktivieren"
          },
          "has_executable_protection": {
            "type": "boolean",
            "description": "Aktivieren Sie den ausführbaren Schutz des Spam-Scanners"
          },
          "has_virus_protection": {
            "type": "boolean",
            "description": "Spam-Scanner-Virenschutz aktivieren"
          },
          "has_recipient_verification": {
            "type": "boolean",
            "description": "Alias-Empfänger müssen auf den Link zur E-Mail-Bestätigung klicken"
          },
          "ignore_mx_check": {
            "type": "boolean",
            "description": "Ignorieren Sie die MX-Eintragsprüfung für erweiterte Mail-Routing-Setups"
          },
          "retention_days": {
            "type": "integer",
            "minimum": 0,
            "maximum": 30,
            "description": "Anzahl der Tage, die ausgehende SMTP-Protokolle aufbewahrt werden sollen (0–30, Standard: 0)"
          },
          "bounce_webhook": {
            "oneOf": [
              {
                "type": "string",
                "format": "uri",
                "description": "Webhook-URL zum Empfangen von Bounce-Ereignissen"
              },
              {
                "type": "boolean",
                "enum": [
                  false
                ],
                "description": "Bounce-Webhook deaktivieren"
              }
            ]
          },
          "max_quota_per_alias": {
            "type": "string",
            "description": "Maximales Speicherkontingent pro Alias (z. B. „1 GB“)"
          }
        }
      },
      "UpdateDomainInput": {
        "type": "object",
        "properties": {
          "smtp_port": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ],
            "description": "Benutzerdefinierter Port zur Konfiguration für die SMTP-Weiterleitung (Standard ist „25“)"
          },
          "has_adult_content_protection": {
            "type": "boolean",
            "description": "Ob der Spam-Scanner-Schutz vor Inhalten für Erwachsene auf dieser Domain aktiviert werden soll"
          },
          "has_phishing_protection": {
            "type": "boolean",
            "description": "Ob der Spam-Scanner-Phishing-Schutz für diese Domäne aktiviert werden soll"
          },
          "has_executable_protection": {
            "type": "boolean",
            "description": "Ob der ausführbare Schutz des Spam-Scanners auf dieser Domäne aktiviert werden soll"
          },
          "has_virus_protection": {
            "type": "boolean",
            "description": "Ob der Spam-Scanner-Virenschutz für diese Domäne aktiviert werden soll"
          },
          "has_recipient_verification": {
            "type": "boolean",
            "description": "Globale Domänenvorgabe, ob Alias-Empfänger auf einen Link zur E-Mail-Bestätigung klicken müssen, damit E-Mails weitergeleitet werden können"
          },
          "ignore_mx_check": {
            "type": "boolean",
            "description": "Ob die MX-Eintragsprüfung der Domäne zur Verifizierung ignoriert werden soll (hauptsächlich für erweiterte MX-Routing-Setups)"
          },
          "retention_days": {
            "type": "integer",
            "minimum": 0,
            "maximum": 30,
            "description": "Anzahl der Tage zum Speichern ausgehender SMTP-E-Mails (0 = sofort löschen)"
          },
          "bounce_webhook": {
            "oneOf": [
              {
                "type": "string",
                "format": "uri"
              },
              {
                "type": "boolean",
                "enum": [
                  false
                ]
              }
            ],
            "description": "Webhook-URL zum Empfangen von Bounce-Benachrichtigungen oder „false“ zum Deaktivieren"
          },
          "max_quota_per_alias": {
            "type": "string",
            "description": "Speicherkontingent pro Alias (z. B. „1 GB“, in Bytes zerlegt)"
          }
        }
      },
      "Alias": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email"
              },
              "display_name": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "email",
              "display_name",
              "id"
            ]
          },
          "domain": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "id"
            ]
          },
          "name": {
            "type": "string"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "is_enabled": {
            "type": "boolean"
          },
          "has_recipient_verification": {
            "type": "boolean"
          },
          "verified_recipients": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "pending_recipients": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "recipients": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "enum": [
              "alias"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "storage_location": {
            "type": "string"
          },
          "has_imap": {
            "type": "boolean"
          }
        },
        "required": [
          "user",
          "domain",
          "name",
          "labels",
          "is_enabled",
          "has_recipient_verification",
          "verified_recipients",
          "pending_recipients",
          "recipients",
          "id",
          "object",
          "created_at",
          "updated_at",
          "storage_location",
          "has_imap"
        ],
        "example": {
          "user": {
            "email": "test@test.com",
            "display_name": "test@test.com",
            "id": "5efabd39xxxxxxx4512890b8"
          },
          "domain": {
            "name": "mailsire.com",
            "id": "5e3c0550xxxxxxx09b7ba023"
          },
          "name": "abc123",
          "labels": [],
          "is_enabled": true,
          "has_recipient_verification": false,
          "verified_recipients": [],
          "pending_recipients": [],
          "recipients": [
            "abc@test1.com"
          ],
          "id": "62fa3dcxxxxxxx79dda83ff2",
          "object": "alias",
          "created_at": "2022-08-15T12:36:26.593Z",
          "updated_at": "2022-08-15T12:36:26.593Z",
          "storage_location": "storage_loc",
          "has_imap": false
        }
      },
      "AliasInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Aliasname (falls nicht angegeben oder leer, wird ein zufälliger Alias generiert)"
          },
          "recipients": {
            "oneOf": [
              {
                "type": "string",
                "description": "Durch Zeilenumbruch/Leerzeichen/Komma getrennte Zeichenfolge gültiger E-Mail-Adressen, FQDNs, IPs oder Webhook-URLs"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                },
                "description": "Array gültiger Empfänger"
              }
            ],
            "description": "Liste der Empfänger. Falls nicht angegeben oder leer, wird standardmäßig die E-Mail-Adresse des Anforderers verwendet."
          },
          "description": {
            "type": "string",
            "description": "Aliasbeschreibung"
          },
          "labels": {
            "oneOf": [
              {
                "type": "string",
                "description": "Durch Zeilenumbruch/Leerzeichen/Komma getrennte Zeichenfolge mit Beschriftungen"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array von Beschriftungen"
              }
            ]
          },
          "has_recipient_verification": {
            "type": "boolean",
            "description": "Empfänger müssen auf den Bestätigungslink klicken (standardmäßig Domäneneinstellung)"
          },
          "is_enabled": {
            "type": "boolean",
            "description": "Ob dieser Alias aktiviert oder deaktiviert werden soll"
          },
          "error_code_if_disabled": {
            "type": "number",
            "enum": [
              250,
              421,
              550
            ],
            "description": "Fehlercode, wenn Alias deaktiviert ist. Standardmäßig 250."
          },
          "has_imap": {
            "type": "boolean",
            "description": "IMAP-Speicher für diesen Alias aktivieren oder deaktivieren"
          },
          "has_pgp": {
            "type": "boolean",
            "description": "Aktivieren oder deaktivieren Sie die OpenPGP-Verschlüsselung für diesen Alias"
          },
          "public_key": {
            "type": "string",
            "description": "Öffentlicher OpenPGP-Schlüssel im ASCII-Armor-Format"
          },
          "max_quota": {
            "type": "string",
            "description": "Maximales Speicherkontingent (z. B. „1 GB“)"
          },
          "vacation_responder_is_enabled": {
            "type": "boolean",
            "description": "Aktivieren oder Deaktivieren der Abwesenheitsnotiz"
          },
          "vacation_responder_start_date": {
            "type": "string",
            "description": "Startdatum (z. B. „JJJJ-MM-TT“) für die Abwesenheitsnotiz"
          },
          "vacation_responder_end_date": {
            "type": "string",
            "description": "Enddatum (z. B. „JJJJ-MM-TT“) für die Abwesenheitsnotiz"
          },
          "vacation_responder_subject": {
            "type": "string",
            "description": "Betreff im Klartext für Abwesenheitsnotizen"
          },
          "vacation_responder_message": {
            "type": "string",
            "description": "Klartextnachricht für Abwesenheitsnotiz"
          }
        }
      },
      "AliasUpdateInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Aliasname"
          },
          "recipients": {
            "oneOf": [
              {
                "type": "string",
                "description": "Durch Zeilenumbruch/Leerzeichen/Komma getrennte Zeichenfolge gültiger E-Mail-Adressen, FQDNs, IPs oder Webhook-URLs"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                },
                "description": "Array gültiger Empfänger"
              }
            ]
          },
          "description": {
            "type": "string",
            "description": "Aliasbeschreibung"
          },
          "labels": {
            "oneOf": [
              {
                "type": "string",
                "description": "Durch Zeilenumbruch/Leerzeichen/Komma getrennte Zeichenfolge mit Beschriftungen"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array von Beschriftungen"
              }
            ]
          },
          "has_recipient_verification": {
            "type": "boolean",
            "description": "Empfänger müssen auf den Bestätigungslink klicken (standardmäßig Domäneneinstellung)"
          },
          "is_enabled": {
            "type": "boolean",
            "description": "Alias aktivieren oder deaktivieren"
          },
          "error_code_if_disabled": {
            "type": "number",
            "enum": [
              250,
              421,
              550
            ],
            "description": "Zu verwendender Fehlercode, wenn der Alias deaktiviert ist (Standardwert: 250)"
          },
          "has_imap": {
            "type": "boolean",
            "description": "Aktivieren oder Deaktivieren des IMAP-Speichers"
          },
          "has_pgp": {
            "type": "boolean",
            "description": "Aktivieren oder Deaktivieren der OpenPGP-Verschlüsselung"
          },
          "public_key": {
            "type": "string",
            "description": "Öffentlicher OpenPGP-Schlüssel im ASCII-Armor-Format"
          },
          "max_quota": {
            "type": "string",
            "description": "Maximales Speicherkontingent (z. B. „1 GB“)"
          },
          "vacation_responder_is_enabled": {
            "type": "boolean",
            "description": "Aktivieren oder Deaktivieren der Abwesenheitsnotiz"
          },
          "vacation_responder_start_date": {
            "type": "string",
            "description": "Startdatum der Urlaubsantwort (z. B. JJJJ-MM-TT)"
          },
          "vacation_responder_end_date": {
            "type": "string",
            "description": "Enddatum der Urlaubsantwort (z. B. JJJJ-MM-TT)"
          },
          "vacation_responder_subject": {
            "type": "string",
            "description": "Betreff der Abwesenheitsnotiz im Klartext"
          },
          "vacation_responder_message": {
            "type": "string",
            "description": "Klartextnachricht des Abwesenheitsnotizgebers"
          }
        }
      },
      "GenerateAliasPasswordInput": {
        "type": "object",
        "properties": {
          "new_password": {
            "type": "string",
            "description": "Ihr neues, benutzerdefiniertes Passwort für den Alias"
          },
          "password": {
            "type": "string",
            "description": "Vorhandenes Passwort für Alias, um es zu ändern, ohne den Postfachspeicher zu löschen"
          },
          "is_override": {
            "type": "boolean",
            "description": "Vorhandenes Passwort außer Kraft setzen und IMAP-Speicher löschen (mit Vorsicht verwenden)"
          },
          "emailed_instructions": {
            "type": "string",
            "format": "email",
            "description": "E-Mail-Adresse zum Senden des Alias-Passworts und der Einrichtungsanweisungen"
          }
        }
      },
      "EmailLimit": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Aktuelle Anzahl gesendeter E-Mails"
          },
          "limit": {
            "type": "integer",
            "description": "Maximal zulässige Anzahl an E-Mails"
          }
        }
      },
      "Member": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Mitglieds-ID"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "E-Mail-Adresse des Mitglieds"
          },
          "role": {
            "type": "string",
            "description": "Rolle des Mitglieds"
          }
        }
      },
      "Invite": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "Eingeladene E-Mail-Adresse"
          }
        }
      }
    },
    "parameters": {
      "page": {
        "name": "page",
        "in": "query",
        "description": "Seite mit den zurückzugebenden Ergebnissen. Falls nicht angegeben, ist der Wert 1. Muss eine Zahl größer oder gleich 1 sein.",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "default": 1
        }
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "description": "Anzahl der Ergebnisse pro Seite. Standardmäßig 10, falls nicht anders angegeben. Muss eine Zahl größer oder gleich 1 und kleiner oder gleich 50 sein.",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 50,
          "default": 10
        }
      },
      "pagination": {
        "name": "pagination",
        "in": "query",
        "description": "Melden Sie sich vor dem 1. November 2024 für die Paginierung an.",
        "schema": {
          "type": "boolean"
        }
      },
      "domainId": {
        "name": "domain_id",
        "in": "path",
        "required": true,
        "description": "Domänen-ID",
        "schema": {
          "type": "string"
        }
      },
      "aliasId": {
        "name": "alias_id",
        "in": "path",
        "required": true,
        "description": "Alias-ID",
        "schema": {
          "type": "string"
        }
      },
      "memberId": {
        "name": "member_id",
        "in": "path",
        "required": true,
        "description": "Mitglieds-ID",
        "schema": {
          "type": "string"
        }
      },
      "emailId": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "E-Mail-ID",
        "schema": {
          "type": "string"
        }
      },
      "contactId": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "Kontakt-ID",
        "schema": {
          "type": "string"
        }
      },
      "calendarId": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "Kalender-ID",
        "schema": {
          "type": "string"
        }
      },
      "folderId": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "Ordner-ID oder Pfad",
        "schema": {
          "type": "string"
        }
      },
      "messageId": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "Nachrichten-ID",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "Error": {
        "description": "Error response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "BadRequest": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotFound": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Conflict": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "PreconditionFailed": {
        "description": "Precondition Failed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "TooManyRequests": {
        "description": "Too Many Requests",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotImplemented": {
        "description": "Not Implemented",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "BadGateway": {
        "description": "Bad Gateway",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "ServiceUnavailable": {
        "description": "Service Unavailable",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "GatewayTimeout": {
        "description": "Gateway Time-out",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  },
  "paths": {
    "/v1/account": {
      "get": {
        "tags": [
          "Konto"
        ],
        "summary": "Konto abrufen",
        "description": "Rufen Sie Ihre Kontoinformationen ab.",
        "operationId": "retrieveAccount",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Account retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Konto"
        ],
        "summary": "Konto aktualisieren",
        "description": "Aktualisieren Sie Ihre Kontoinformationen.",
        "operationId": "updateAccount",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "display_name": {
                    "type": "string",
                    "description": "Anzeigename"
                  },
                  "locale": {
                    "type": "string",
                    "description": "Gebietsschemapräferenz"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/contacts": {
      "get": {
        "tags": [
          "Kontakte"
        ],
        "summary": "Kontakte auflisten",
        "description": "Ruft eine Liste aller Kontakte für den authentifizierten Alias ab. Dieser Endpunkt unterstützt die Paginierung und gibt Kontakte im CardDAV-Format zurück.",
        "operationId": "listContacts",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Contacts retrieved successfully",
            "headers": {
              "X-Page-Count": {
                "description": "Total number of pages",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Current": {
                "description": "Current page number",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Size": {
                "description": "Number of items on current page",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Item-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Contact"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Kontakte"
        ],
        "summary": "Kontakt erstellen",
        "description": "Erstellen Sie einen neuen Kontakt. Sie können entweder vCard-Inhalte direkt oder einzelne Kontaktfelder angeben, die in das vCard-Format konvertiert werden. Falls bereits ein Kontakt mit derselben ID vorhanden ist, wird ein Konfliktfehler zurückgegeben.",
        "operationId": "createContact",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contact created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/contacts/{id}": {
      "get": {
        "tags": [
          "Kontakte"
        ],
        "summary": "Kontakt abrufen",
        "description": "Rufen Sie einen bestimmten Kontakt anhand seiner ID ab. Der Kontakt wird im Standardkontaktformat mit vCard-Inhalt und analysierten Feldern zurückgegeben.",
        "operationId": "retrieveContact",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/contactId"
          }
        ],
        "responses": {
          "200": {
            "description": "Contact retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Kontakte"
        ],
        "summary": "Kontakt aktualisieren",
        "description": "Aktualisieren Sie einen vorhandenen Kontakt. Sie können entweder aktualisierte vCard-Inhalte oder einzelne Felder angeben. Die vCard des Kontakts wird neu generiert, wenn einzelne Felder angegeben werden.",
        "operationId": "updateContact",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/contactId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Kontakte"
        ],
        "summary": "Kontakt löschen",
        "description": "Löscht einen bestimmten Kontakt dauerhaft. Diese Aktion kann nicht rückgängig gemacht werden.",
        "operationId": "deleteContact",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/contactId"
          }
        ],
        "responses": {
          "200": {
            "description": "Contact deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/calendars": {
      "get": {
        "tags": [
          "Kalender"
        ],
        "summary": "Kalender auflisten",
        "description": "Ruft eine Liste aller Kalender für den authentifizierten Alias ab. Dieser Endpunkt unterstützt die Paginierung und gibt Kalender im CalDAV-Format zurück.",
        "operationId": "listCalendars",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Calendars retrieved successfully",
            "headers": {
              "X-Page-Count": {
                "description": "Total number of pages",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Current": {
                "description": "Current page number",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Size": {
                "description": "Number of items on current page",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Item-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Calendar"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Kalender"
        ],
        "summary": "Kalender erstellen",
        "description": "Erstellen Sie einen neuen Kalender. Der Kalendername ist erforderlich, während andere Eigenschaften wie Farbe, Zeitzone und Beschreibung optional sind. Wenn bereits ein Kalender mit demselben Namen vorhanden ist, wird ein Konfliktfehler zurückgegeben.",
        "operationId": "createCalendar",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Calendar created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Calendar"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/calendars/{id}": {
      "get": {
        "tags": [
          "Kalender"
        ],
        "summary": "Kalender abrufen",
        "description": "Rufen Sie einen bestimmten Kalender anhand seiner ID ab. Der Kalender wird mit allen Eigenschaften zurückgegeben, einschließlich Name, Beschreibung, Farbe, Zeitzone und Reihenfolge.",
        "operationId": "retrieveCalendar",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/calendarId"
          }
        ],
        "responses": {
          "200": {
            "description": "Calendar retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Calendar"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Kalender"
        ],
        "summary": "Kalender aktualisieren",
        "description": "Aktualisieren Sie einen vorhandenen Kalender. Sie können alle Kalendereigenschaften wie Name, Beschreibung, Farbe, Zeitzone und Reihenfolge aktualisieren. Wenn Sie den Namen in einen bereits vorhandenen ändern, wird ein Konfliktfehler zurückgegeben.",
        "operationId": "updateCalendar",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/calendarId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Calendar updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Calendar"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Kalender"
        ],
        "summary": "Kalender löschen",
        "description": "Löscht einen bestimmten Kalender dauerhaft. Diese Aktion kann nicht rückgängig gemacht werden und löscht auch alle Ereignisse im Kalender.",
        "operationId": "deleteCalendar",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/calendarId"
          }
        ],
        "responses": {
          "200": {
            "description": "Calendar deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Calendar"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/folders": {
      "get": {
        "tags": [
          "Ordner"
        ],
        "summary": "Ordner auflisten",
        "description": "Rufen Sie eine Liste aller IMAP-Ordner/Postfächer für den authentifizierten Alias ab. Dieser Endpunkt unterstützt die Paginierung und Filterung nach Abonnementstatus.",
        "operationId": "listFolders",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "name": "subscribed",
            "in": "query",
            "description": "Filtern Sie Ordner nach Abonnementstatus",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Folders retrieved successfully",
            "headers": {
              "X-Page-Count": {
                "description": "Total number of pages",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Current": {
                "description": "Current page number",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Size": {
                "description": "Number of items on current page",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Item-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Folder"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Ordner"
        ],
        "summary": "Ordner erstellen",
        "description": "Erstellen Sie einen neuen IMAP-Ordner/ein neues IMAP-Postfach. Der Ordnerpfad ist obligatorisch und kann übergeordnete Ordner enthalten (z. B. „Posteingang/Unterordner“). Falls die übergeordneten Ordner nicht vorhanden sind, werden sie automatisch erstellt.",
        "operationId": "createFolder",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FolderInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Folder created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/folders/{id}": {
      "get": {
        "tags": [
          "Ordner"
        ],
        "summary": "Ordner abrufen",
        "description": "Rufen Sie einen bestimmten Ordner anhand seiner ID oder seines Pfads ab. Sie können entweder die ObjectID des Ordners oder seinen vollständigen Pfad (z. B. „INBOX/Unterordner“) als Kennung verwenden.",
        "operationId": "retrieveFolder",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/folderId"
          }
        ],
        "responses": {
          "200": {
            "description": "Folder retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Ordner"
        ],
        "summary": "Update-Ordner",
        "description": "Aktualisieren/Umbenennen eines vorhandenen Ordners. Dieser Vorgang benennt den Ordner in den im Anforderungstext angegebenen neuen Pfad um. Sie können entweder die ObjectID des Ordners oder seinen aktuellen Pfad als Bezeichner verwenden.",
        "operationId": "updateFolder",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/folderId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FolderUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Folder updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Ordner"
        ],
        "summary": "Ordner löschen",
        "description": "Löscht einen bestimmten Ordner dauerhaft. Diese Aktion kann nicht rückgängig gemacht werden und löscht auch alle Nachrichten im Ordner. Als Kennung können Sie entweder die ObjectID oder den Pfad des Ordners verwenden.",
        "operationId": "deleteFolder",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/folderId"
          }
        ],
        "responses": {
          "200": {
            "description": "Folder deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/messages": {
      "get": {
        "tags": [
          "Nachrichten"
        ],
        "summary": "Auflisten und Suchen von Nachrichten",
        "description": "Rufen Sie eine Nachrichtenliste mit erweiterten Such- und Filterfunktionen ab. Dieser Endpunkt unterstützt die Paginierung und umfassende Suche nach Nachrichteninhalten, Headern, Flags und Metadaten. Sie können nach Ordnern, Flags, Inhalten, Headern, Datumsbereichen, Größe und mehr suchen.",
        "operationId": "listMessages",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "name": "folder",
            "in": "query",
            "description": "Nachrichten nach Ordnerpfad filtern",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_unread",
            "in": "query",
            "description": "Nach Lesestatus filtern",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_flagged",
            "in": "query",
            "description": "Nach Markierungsstatus filtern",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_deleted",
            "in": "query",
            "description": "Nach Löschstatus filtern",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_draft",
            "in": "query",
            "description": "Nach Entwurfsstatus filtern",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_junk",
            "in": "query",
            "description": "Nach Junk-/Spam-Status filtern",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_copied",
            "in": "query",
            "description": "Nach Kopierstatus filtern",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_searchable",
            "in": "query",
            "description": "Nach Suchstatus filtern",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_expired",
            "in": "query",
            "description": "Nach abgelaufenem Status filtern",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "has_attachments",
            "in": "query",
            "description": "Nach Vorhandensein von Anhängen filtern",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "has_attachment",
            "in": "query",
            "description": "Filtern nach Vorhandensein von Anhängen (Alias für has_attachments)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "subject",
            "in": "query",
            "description": "Suche im Nachrichtenbetreff",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "query",
            "description": "Suche im Nachrichtentext",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "text",
            "in": "query",
            "description": "Suche im Nachrichtentext (Alias für Body)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "headers",
            "in": "query",
            "description": "Suche in allen Nachrichtenkopfzeilen",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "message_id",
            "in": "query",
            "description": "Suche nach Message-ID-Header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Allgemeine Suche über Überschriften und Text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Allgemeine Suche (Alias für Suche)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "since",
            "in": "query",
            "description": "Nachrichten seit diesem Datum filtern (ISO 8601-Format)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Nachrichten vor diesem Datum filtern (ISO 8601-Format)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "min_size",
            "in": "query",
            "description": "Filtern Sie Nachrichten mit der Mindestgröße in Bytes",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "max_size",
            "in": "query",
            "description": "Filtern Sie Nachrichten mit der maximalen Größe in Bytes",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Suche nach Absender-Header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Suche nach Kopfzeile",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cc",
            "in": "query",
            "description": "Suche nach CC-Header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bcc",
            "in": "query",
            "description": "Suche nach BCC-Header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Suche nach Datumsüberschrift",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reply-to",
            "in": "query",
            "description": "Suche nach Reply-To-Header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Messages retrieved successfully",
            "headers": {
              "X-Page-Count": {
                "description": "Total number of pages",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Current": {
                "description": "Current page number",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Size": {
                "description": "Number of items on current page",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Item-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Nachrichten"
        ],
        "summary": "Nachricht erstellen",
        "description": "Erstellen/Hängen Sie eine neue Nachricht in einem Ordner an. Dieser Endpunkt akzeptiert das Standard-Nodemailer-Nachrichtenformat und ermöglicht die Angabe des Zielordners und der initialen Flags. Falls der Zielordner nicht existiert, wird er automatisch erstellt.",
        "operationId": "createMessage",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Message created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/messages/{id}": {
      "get": {
        "tags": [
          "Nachrichten"
        ],
        "summary": "Nachricht abrufen",
        "description": "Rufen Sie eine bestimmte Nachricht anhand ihrer ID ab. Standardmäßig enthält die Antwort das analysierte Nodemailer-Objekt und den Rohnachrichteninhalt. Sie können den Inhalt mithilfe von Abfrageparametern steuern.",
        "operationId": "retrieveMessage",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/messageId"
          },
          {
            "name": "eml",
            "in": "query",
            "description": "Geben Sie das Roh-EML-Format anstelle von JSON zurück",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "nodemailer",
            "in": "query",
            "description": "Analysiertes Nodemailer-Objekt einschließen",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "attachments",
            "in": "query",
            "description": "Anhänge in Nodemailer-Objekt einschließen",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "raw",
            "in": "query",
            "description": "Rohnachrichteninhalt einschließen",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Message retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              },
              "message/rfc822": {
                "description": "Raw EML format (when ?eml=true)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Nachrichten"
        ],
        "summary": "Update-Nachricht",
        "description": "Aktualisieren Sie eine vorhandene Nachricht. Sie können die Nachrichtenkennzeichnung ändern oder die Nachricht in einen anderen Ordner verschieben. Falls der Zielordner nicht existiert, wird er automatisch erstellt.",
        "operationId": "updateMessage",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/messageId"
          },
          {
            "name": "eml",
            "in": "query",
            "description": "Geben Sie das Roh-EML-Format anstelle von JSON zurück",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              },
              "message/rfc822": {
                "description": "Raw EML format (when ?eml=true)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Nachrichten"
        ],
        "summary": "Nachricht löschen",
        "description": "Löscht eine bestimmte Nachricht dauerhaft. Diese Aktion kann nicht rückgängig gemacht werden und entfernt die Nachricht dauerhaft aus dem Speicher. Im Gegensatz zu IMAP-Clients, die Nachrichten normalerweise in den Papierkorb verschieben, führt dieser Endpunkt ein endgültiges Löschen durch.",
        "operationId": "deleteMessage",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/messageId"
          }
        ],
        "responses": {
          "200": {
            "description": "Message deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/logs/download": {
      "get": {
        "summary": "Protokolle herunterladen",
        "description": "**Protokolle herunterladen**\n\nBeschreibung: Unsere API ermöglicht Ihnen den programmgesteuerten Download von Protokollen für Ihr Konto. Wenn Sie eine Anfrage an diesen Endpunkt senden, werden alle Protokolle Ihres Kontos verarbeitet und Ihnen nach Abschluss per E-Mail als Anhang (Gzip-komprimierte CSV-Datei) zugesandt.\n\nSo können Sie Hintergrundjobs mit einem Cron-Job oder mit der Node.js-Jobplanungssoftware Bree erstellen, um Protokolle jederzeit abzurufen. Beachten Sie, dass dieser Endpunkt auf maximal 10 Anfragen pro Tag begrenzt ist.\n\nDer Anhang hat die kleingeschriebene Form „email-deliverability-logs-YYYY-MM-DD-h-mm-A-z.csv.gz“. Die E-Mail selbst enthält eine kurze Zusammenfassung der abgerufenen Protokolle.",
        "tags": [
          "Protokolle"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "query",
            "description": "Filtern Sie Protokolle nach vollqualifizierter Domäne („FQDN“). Wenn keine Angabe erfolgt, werden alle Protokolle aller Domänen abgerufen.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Suchen Sie nach Protokollen nach E-Mail, Domäne, Aliasname, IP-Adresse oder Datum (Format M/J, M/T/JJ, M-T, M-T-JJ oder M.T.JJ).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bounce_category",
            "in": "query",
            "description": "Suchen Sie nach Protokollen anhand einer bestimmten Bounce-Kategorie (z. B. „Blockliste“).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "response_code",
            "in": "query",
            "description": "Suchen Sie nach Protokollen anhand eines bestimmten Fehlerantwortcodes (z. B. 421 oder 550).",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Logs will be emailed as an attachment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Logs will be emailed to you shortly"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/v1/emails": {
      "get": {
        "summary": "Ausgehende SMTP-E-Mails auflisten",
        "description": "**Ausgehende SMTP-E-Mails auflisten**\n\nBeachten Sie, dass dieser Endpunkt keine Eigenschaftswerte für die E-Mail-Eigenschaften „Nachricht“, „Header“ oder „Abgelehnte Fehler“ zurückgibt.\n\nUm diese Eigenschaften und ihre Werte zurückzugeben, verwenden Sie bitte den Endpunkt [E-Mail abrufen](https://github.com/forwardemail/forwardemail.net/blob/master/app/views/api/index.md#retrieve-email) mit einer E-Mail-ID.",
        "tags": [
          "E-Mails"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Suchen Sie nach E-Mails anhand von Metadaten.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "domain",
            "in": "query",
            "description": "Suchen Sie nach E-Mails anhand des Domänennamens.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sortieren Sie nach einem bestimmten Feld (mit einem einzelnen Bindestrich als Präfix, um in die umgekehrte Richtung dieses Felds zu sortieren). Der Standardwert ist „created_at“, falls nicht festgelegt.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Weitere Informationen finden Sie unter „Paginierung“.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Weitere Informationen finden Sie unter „Paginierung“.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of outbound SMTP emails",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Email"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "summary": "Ausgehende SMTP-E-Mail erstellen",
        "description": "Unsere API zum Erstellen von E-Mails ist von der Nachrichtenkonfiguration von Nodemailer inspiriert und nutzt diese. Bitte beachten Sie die [Nodemailer-Nachrichtenkonfiguration](https://nodemailer.com/message/) für alle unten aufgeführten Textparameter.\n\nMit Ausnahme von „Envelope“ und „DKIM“ (da wir diese automatisch für Sie festlegen) unterstützen wir alle Nodemailer-Optionen. Aus Sicherheitsgründen setzen wir die Optionen „disableFileAccess“ und „disableUrlAccess“ automatisch auf „true“.\n\nSie sollten entweder die einzelne Option „raw“ mit Ihrer vollständigen E-Mail inklusive Header oder die einzelnen unten aufgeführten Textparameter angeben.\n\nDieser API-Endpunkt kodiert Emojis automatisch für Sie, wenn sie in den Headern gefunden werden (z. B. wird eine Betreffzeile von „Subject: 🤓 Hello“ automatisch in „Subject: =?UTF-8?Q?=F0=9F=A4=93?= Hello“ umgewandelt). Unser Ziel war es, eine äußerst entwicklerfreundliche und idiotensichere E-Mail-API zu erstellen.",
        "tags": [
          "E-Mails"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SMTP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email sent successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/emails/limit": {
      "get": {
        "summary": "Erhalten Sie das Limit für ausgehende SMTP-E-Mails",
        "description": "Dies ist ein einfacher Endpunkt, der ein JSON-Objekt zurückgibt, das die Anzahl und das Limit für die Anzahl der täglich ausgehenden SMTP-Nachrichten pro Konto enthält.",
        "tags": [
          "E-Mails"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Email limit information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailLimit"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/emails/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/emailId"
        }
      ],
      "get": {
        "summary": "Ausgehende SMTP-E-Mails abrufen",
        "description": "Rufen Sie eine bestimmte ausgehende SMTP-E-Mail ab.",
        "tags": [
          "E-Mails"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Email retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Ausgehende SMTP-E-Mails löschen",
        "description": "Das Löschen einer E-Mail setzt den Status auf „Abgelehnt“ (und verarbeitet sie anschließend nicht in der Warteschlange), wenn und nur wenn der aktuelle Status „Ausstehend“, „In Warteschlange“ oder „Zurückgestellt“ ist. Wir löschen E-Mails möglicherweise automatisch 30 Tage nach ihrer Erstellung und/oder ihrem Versand. Sie sollten daher eine Kopie ausgehender SMTP-E-Mails in Ihrem Client, Ihrer Datenbank oder Ihrer Anwendung aufbewahren. Sie können bei Bedarf in Ihrer Datenbank auf unseren E-Mail-ID-Wert verweisen. Dieser Wert wird sowohl von den Endpunkten [E-Mail erstellen](https://github.com/forwardemail/forwardemail.net/blob/master/app/views/api/index.md#create-email) als auch [E-Mail abrufen](https://github.com/forwardemail/forwardemail.net/blob/master/app/views/api/index.md#retrieve-email) zurückgegeben.",
        "tags": [
          "E-Mails"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Email deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains": {
      "get": {
        "summary": "Domänen auflisten",
        "description": "> [!NOTE]\n>Ab dem 1. November 2024 werden die API-Endpunkte für Listendomains und Listendomain-Aliase standardmäßig auf maximal 1000 Ergebnisse pro Seite eingestellt. Wenn Sie dieses Verhalten frühzeitig aktivieren möchten, können Sie `?paginate=true` als zusätzlichen Abfrageparameter an die URL für die Endpunktabfrage übergeben. Weitere Informationen finden Sie unter Paginierung.",
        "tags": [
          "Domänen"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Suchen Sie nach Domänen anhand von Metadaten.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "domain",
            "in": "query",
            "description": "Suchen Sie nach Domänen anhand des Domänennamens.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sortieren Sie nach einem bestimmten Feld (mit einem einzelnen Bindestrich als Präfix, um in die umgekehrte Richtung dieses Felds zu sortieren). Der Standardwert ist „created_at“, falls nicht festgelegt.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Weitere Informationen finden Sie unter „Paginierung“.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Weitere Informationen finden Sie unter „Paginierung“.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of domains",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "summary": "Domäne erstellen",
        "description": "Erstellt eine neue Domäne im System. Dieser Endpunkt ermöglicht die Registrierung eines vollqualifizierten Domänennamens (FQDN) oder einer IP-Adresse für die Plattform.\n\nZu den optionalen Konfigurationsmöglichkeiten gehören die Zuweisung der Domäne zu einem bestehenden Team, die Festlegung eines Tariftyps (z. B. kostenlos, erweiterter Schutz oder Team) und die Konfiguration erweiterter Schutzfunktionen wie Spam-Filter, Virenscans und Empfängerverifizierung. Sie können außerdem festlegen, ob standardmäßig ein Catch-All-Alias erstellt werden soll, eine benutzerdefinierte Bounce-Webhook-URL für SMTP-Fehler festlegen und Speicherkontingente für E-Mail-Aliase in dieser Domäne definieren. Dieser Endpunkt führt die Validierung und Bereitstellung auf Domänenebene durch. Wenn die Option „ignore_mx_check“ aktiviert ist, wird die MX-Eintragsprüfung übersprungen (nur für erweiterte Routing-Konfigurationen empfohlen). Die Antwort enthält alle Details zum erstellten Domänenobjekt, einschließlich der für die Konfiguration benötigten DNS-Einträge.",
        "tags": [
          "Domänen"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDomainInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/v1/domains/{domain_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        }
      ],
      "get": {
        "summary": "Domäne abrufen",
        "description": "Abrufen einer bestimmten Domäne",
        "tags": [
          "Domänen"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "Domäne aktualisieren",
        "description": "Aktualisieren Sie eine bestimmte Domäne.",
        "tags": [
          "Domänen"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDomainInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Domäne löschen",
        "description": "Löschen Sie eine bestimmte Domäne.",
        "tags": [
          "Domänen"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Domain deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/verify-records": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        }
      ],
      "get": {
        "summary": "Domäneneinträge überprüfen",
        "description": "Überprüfen Sie DNS-Einträge für eine bestimmte Domäne.",
        "tags": [
          "Domänen"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "DNS records successfully verified",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Domain's DNS records have been verified."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/verify-smtp": {
      "get": {
        "summary": "Überprüfen der Domänen-SMTP-Einträge",
        "description": "Überprüft die SMTP-bezogenen DNS-Einträge für die angegebene Domäne.",
        "operationId": "verifySmtpRecords",
        "tags": [
          "Domänen"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "description": "Vollqualifizierter Domänenname (FQDN) zur Überprüfung",
            "schema": {
              "type": "string",
              "format": "hostname"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "SMTP records successfully verified",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "You have successfully configured and verified DNS records for outbound SMTP."
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/catch-all-passwords": {
      "post": {
        "summary": "Domänenweites Catch-All-Passwort erstellen",
        "description": "Erstellt ein domänenweites Catch-All-Passwort. Falls kein Passwort angegeben wird, wird ein sicheres, zufälliges Passwort generiert.",
        "tags": [
          "Domänen"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Der Domänenname, für den das Catch-All-Passwort erstellt werden soll"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "new_password": {
                    "type": "string",
                    "description": "Ihr neues, benutzerdefiniertes Kennwort, das als domänenweites Catch-All-Kennwort verwendet werden soll. Lassen Sie das Feld leer, um ein sicheres Kennwort zu generieren."
                  },
                  "description": {
                    "type": "string",
                    "description": "Beschreibung nur zu Organisationszwecken."
                  }
                }
              },
              "example": {
                "new_password": "myCustomStrongPassword123!",
                "description": "Password for team-wide access"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created a catch-all password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of the created catch-all password"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the catch-all password"
                    }
                  },
                  "required": [
                    "id",
                    "description"
                  ]
                },
                "example": {
                  "id": "6841ec462bd583c73d0632dd",
                  "username": "*@quas.com",
                  "password": "6Yq14XhAUaupdZE",
                  "description": "foo bar"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Domänenweite Catch-All-Passwörter auflisten",
        "description": "Gibt eine Liste domänenweiter Catch-All-Passwörter zurück, die derzeit für die angegebene Domäne konfiguriert sind.",
        "operationId": "listCatchAllPasswords",
        "tags": [
          "Domänen"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "description": "Vollqualifizierter Domänenname (FQDN), für den Catch-All-Passwörter aufgelistet werden sollen",
            "schema": {
              "type": "string",
              "format": "hostname"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of domain-wide catch-all passwords",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier for the item",
                        "example": "6841ec442bd583c73d0632d0"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the item",
                        "example": "foo bar"
                      }
                    },
                    "required": [
                      "id",
                      "description"
                    ]
                  },
                  "example": [
                    {
                      "id": "6841ec442bd583c73d0632d0",
                      "description": ""
                    },
                    {
                      "id": "6841ec462bd583c73d0632dd",
                      "description": "foo bar"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/catch-all-passwords/{token_id}": {
      "delete": {
        "summary": "Domänenweites Catch-All-Passwort entfernen",
        "description": "Löscht ein domänenweites Catch-All-Passwort unter Verwendung der bereitgestellten Token-ID.",
        "tags": [
          "Domänen"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Der mit dem Catch-All-Passwort verknüpfte Domänenname"
          },
          {
            "name": "token_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Die Token-ID des domänenweiten Catch-All-Passworts, das gelöscht werden soll"
          }
        ],
        "responses": {
          "200": {
            "description": "Catch-all password successfully removed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Catch-all password deleted successfully."
                    }
                  },
                  "example": {
                    "id": "6841ec442bd583c73d0632d0",
                    "description": ""
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/invites": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        }
      ],
      "get": {
        "summary": "Domäneneinladung annehmen",
        "description": "Nehmen Sie eine Einladung zu einer Domäne an.",
        "tags": [
          "Einladungen"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain invite accepted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invite accepted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "post": {
        "summary": "Domäneneinladung erstellen",
        "description": ">[!IMPORTANT]\n>Wenn der eingeladene Benutzer bereits akzeptiertes Mitglied einer anderen Domain ist, der der einladende Administrator angehört, wird die Einladung automatisch angenommen und es wird keine E-Mail gesendet.",
        "tags": [
          "Einladungen"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "E-Mail-Adresse zum Einladen zur Domänenmitgliederliste"
                  },
                  "group": {
                    "type": "string",
                    "format": "string",
                    "description": "Gruppe, mit der der Benutzer zur Domänenmitgliedschaft hinzugefügt werden soll (kann entweder „admin“ oder „user“ sein)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain invite created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invite"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      },
      "delete": {
        "summary": "Domäneneinladung entfernen",
        "description": "Entfernen Sie eine Einladung zu einer Domäne.",
        "tags": [
          "Einladungen"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Aus der Domänenmitgliederliste zu entfernende E-Mail-Adresse"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain invite removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invite removed successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/members/{member_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        },
        {
          "$ref": "#/components/parameters/memberId"
        }
      ],
      "put": {
        "summary": "Domänenmitglied aktualisieren",
        "description": "Aktualisieren Sie ein Domänenmitglied.",
        "tags": [
          "Mitglieder"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "group": {
                    "required": true,
                    "type": "string",
                    "description": "Gruppe, mit der der Benutzer auf die Domänenmitgliedschaft aktualisiert werden soll (kann entweder „admin“ oder „user“ sein)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain member updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Domänenmitglied entfernen",
        "description": "Entfernen Sie ein Domänenmitglied.",
        "tags": [
          "Mitglieder"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain member removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Member removed successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/aliases/{alias_id}/generate-password": {
      "post": {
        "summary": "Generieren Sie ein Alias-Passwort",
        "description": "Generieren Sie ein Passwort für einen Alias. Wenn „emailed_instructions“ nicht angegeben ist, enthält die Antwort den generierten Benutzernamen und das Passwort.",
        "tags": [
          "Aliase"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Vollqualifizierter Domänenname (FQDN)"
          },
          {
            "name": "alias_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Eindeutige Kennung des Alias"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateAliasPasswordInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Alias credentials returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string",
                      "example": "alias@yourdomain.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "some-generated-password"
                    }
                  },
                  "required": [
                    "username",
                    "password"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/aliases": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        }
      ],
      "get": {
        "summary": "Domänenaliase auflisten",
        "description": ">[!NOTE]\n>Ab dem 1. November 2024 werden die API-Endpunkte für „Domains auflisten“ und „Domain-Aliase auflisten“ standardmäßig auf maximal 1000 Ergebnisse pro Seite eingestellt. Wenn Sie dieses Verhalten frühzeitig aktivieren möchten, können Sie „?paginate=true“ als zusätzlichen Abfrageparameter an die URL für die Endpunktabfrage übergeben. Weitere Informationen finden Sie unter Paginierung.",
        "tags": [
          "Aliase"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Suche nach Aliasnamen in einer Domäne nach Name, Bezeichnung oder Empfänger (RegExp wird unterstützt)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Suche nach Aliasnamen in einer Domäne nach Namen (RegExp wird unterstützt)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipient",
            "in": "query",
            "description": "Suche nach Aliasnamen in einer Domäne nach Empfänger (RegExp wird unterstützt)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sortieren Sie nach einem bestimmten Feld (mit einem einzelnen Bindestrich als Präfix versehen, um in umgekehrter Reihenfolge zu sortieren). Standardmäßig „created_at“.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "List of domain aliases",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Alias"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "post": {
        "summary": "Neuen Domänenalias erstellen",
        "description": "Erstellen Sie einen neuen Alias für eine bestimmte Domäne.",
        "tags": [
          "Aliase"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AliasInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain alias created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alias"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/aliases/{alias_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        },
        {
          "$ref": "#/components/parameters/aliasId"
        }
      ],
      "get": {
        "summary": "Domänenalias abrufen",
        "description": "Rufen Sie einen bestimmten Alias für eine Domäne ab.",
        "tags": [
          "Aliase"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain alias retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alias"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "Domänenalias aktualisieren",
        "description": "Aktualisieren Sie einen bestimmten Alias für eine Domäne.",
        "tags": [
          "Aliase"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AliasUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain alias updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alias"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          },
          "401": {
            "$ref": "#/components/responses/Error"
          },
          "403": {
            "$ref": "#/components/responses/Error"
          },
          "404": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "summary": "Domänenalias löschen",
        "description": "Löschen Sie einen bestimmten Alias für eine Domäne.",
        "tags": [
          "Aliase"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain alias deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Alias deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/encrypt": {
      "post": {
        "summary": "TXT-Eintrag verschlüsseln",
        "description": "Wir ermöglichen Ihnen die kostenlose Verschlüsselung von Datensätzen auch im kostenlosen Tarif. Datenschutz sollte kein Feature sein, sondern in alle Aspekte eines Produkts integriert sein. Wie in einer Diskussion zu Datenschutzleitfäden (https://discuss.privacyguides.net/t/forward-email-email-provider/13370) und in unseren GitHub-Problemen (https://github.com/forwardemail/forwardemail.net/issues/254) häufig gefordert, haben wir dies hinzugefügt.",
        "tags": [
          "Verschlüsseln"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "text"
                ],
                "properties": {
                  "input": {
                    "required": true,
                    "type": "string",
                    "description": "Jeder gültige TXT-Eintrag zur Weiterleitung von E-Mails im Klartext"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Text encrypted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "encrypted": {
                      "type": "string",
                      "description": "Encrypted text"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          },
          "401": {
            "$ref": "#/components/responses/Error"
          },
          "429": {
            "description": "Rate limit exceeded (50 requests for 'encrypt')",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Konto",
      "description": "Endpunkte für die Kontoverwaltung"
    },
    {
      "name": "Protokolle",
      "description": "Endpunkte der Protokollverwaltung"
    },
    {
      "name": "E-Mails",
      "description": "Endpunkte für die E-Mail-Verwaltung"
    },
    {
      "name": "Domänen",
      "description": "> [!TIP]\n> Domänenendpunkte mit dem Domänennamen <code>/v1/domains/:domain_name</code> als Endpunkt sind durch die Domänen-ID <code>:domain_id</code> austauschbar. Das bedeutet, dass Sie die Domäne entweder über ihren <code>Name</code> oder ihren <code>ID</code>-Wert referenzieren können."
    },
    {
      "name": "Einladungen",
      "description": "Endpunkte für die Domäneneinladungsverwaltung"
    },
    {
      "name": "Mitglieder",
      "description": "Endpunkte zur Domänenmitgliedsverwaltung"
    },
    {
      "name": "Aliase",
      "description": "Endpunkte zur Domänenaliasverwaltung"
    },
    {
      "name": "Verschlüsseln",
      "description": "Verschlüsselungsendpunkte"
    },
    {
      "name": "Kontakte",
      "description": "Alias-Kontaktverwaltungsendpunkte (CardDAV)\n\n>[!NOTE]\n>Im Gegensatz zu anderen API-Endpunkten erfordern diese Authentifizierungsendpunkte den Alias-Benutzernamen und das vom Alias generierte Passwort als Basisautorisierungsheader.\n\n>[!TIP]\n>Diese Endpunkte bieten vollständige CRUD-Operationen für die Kontaktverwaltung mit vCard-Unterstützung, einschließlich Erstellen, Abrufen, Aktualisieren und Löschen von Kontakten. Sie können entweder vCard-Inhalte direkt bereitstellen oder einzelne Kontaktfelder, die in das vCard-Format konvertiert werden."
    },
    {
      "name": "Kalender",
      "description": "Alias-Kalenderverwaltungsendpunkte (CalDAV)\n\n>[!NOTE]\n> Im Gegensatz zu anderen API-Endpunkten erfordern diese [Authentication](#description/authentication) „username“ (entsprechend dem Alias-Benutzernamen) und „password“ (entsprechend dem vom Alias generierten Passwort) als Basisautorisierungsheader.\n\n>[!TIP]\n> Diese Endpunkte bieten eine vollständige Kalenderverwaltung mit Zeitzonen- und Farbunterstützung, einschließlich Erstellen, Abrufen, Aktualisieren und Löschen von Kalendern. Kalendernamen sind obligatorisch, während andere Eigenschaften wie Farbe, Zeitzone und Beschreibung optional sind."
    },
    {
      "name": "Nachrichten",
      "description": "Alias-Nachrichtenverwaltungsendpunkte (IMAP/POP3)\n\n>[!NOTE]\n> Im Gegensatz zu anderen API-Endpunkten erfordern diese [Authentifizierung](#description/authentication) „Benutzername“ gleich dem Alias-Benutzernamen und „Passwort“ gleich dem vom Alias generierten Passwort als Basisautorisierungsheader.\n\n>[!TIP]\n> Diese Endpunkte bieten umfassende Nachrichtenverwaltung mit erweiterten Suchfunktionen. Sie können nach Ordnern, Flags, Inhalten, Headern, Datumsbereichen, Größe und mehr suchen. Nachrichten können im Standard-Nodemailer-Format erstellt werden und unterstützen das Verschieben zwischen Ordnern und die Verwaltung von Flags.\n\nBitte stellen Sie sicher, dass Sie die Einrichtungsanweisungen für Ihre Domain befolgt haben.\nDiese Anweisungen finden Sie in unserem FAQ-Bereich [Unterstützen Sie den E-Mail-Empfang mit IMAP?](/faq#do-you-support-receiving-email-with-imap)."
    },
    {
      "name": "Ordner",
      "description": "Alias-Ordnerverwaltungsendpunkte (IMAP/POP3)\n\n>[!TIP]\n> Ordnerendpunkte mit dem Ordnerpfad <code>/v1/folders/:path</code> als Endpunkt sind mit der Ordner-ID <code>:id</code> austauschbar. Das bedeutet, dass Sie den Ordner entweder über seinen <code>path</code>- oder <code>id</code>-Wert referenzieren können.\n\n>[!NOTE]\n> Im Gegensatz zu anderen API-Endpunkten erfordern diese [Authentication](#description/authentication) \"username\" gleich dem Alias-Benutzernamen und \"password\" gleich dem vom Alias generierten Passwort als Basisautorisierungsheader.\n\n>[!TIP]\n> Diese Endpunkte ermöglichen die vollständige Ordnerverwaltung, einschließlich Erstellen, Umbenennen und Löschen. Ordnerpfade können übergeordnete Ordner enthalten (z. B. „Posteingang/Unterordner“). Wenn keine übergeordneten Ordner vorhanden sind, werden diese automatisch erstellt."
    }
  ]
}