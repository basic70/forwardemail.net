{
  "openapi": "3.0.0",
  "info": {
    "title": "Forward Email API",
    "description": "<img src=\"/img/articles/email-api.webp\" alt=\"\"/><br />Witamy w kompleksowej dokumentacji API dla Forward Email. To API umożliwia programowe zarządzanie przekierowaniami poczty e-mail, domenami, aliasami, wiadomościami wychodzącymi i wieloma innymi funkcjami.\n\n## Kluczowe funkcje\n* **Zarządzanie domenami:** Tworzenie, pobieranie, aktualizowanie, usuwanie i weryfikowanie domen.\n* **Zarządzanie aliasami:** Zarządzanie aliasami e-mail, w tym tworzenie, aktualizowanie i zarządzanie odbiorcami.\n* **Wychodzące SMTP:** Wysyłanie wiadomości e-mail przez SMTP, zarządzanie limitami i śledzenie wysłanych wiadomości.\n* **Konto i dzienniki:** Zarządzanie danymi konta i pobieranie dzienników aktywności.\n* **Bezpieczeństwo:** Szyfrowanie rekordów TXT i zarządzanie członkami/zaproszeniami domeny.\n* **Kontakty CardDAV:** Pełne operacje CRUD do zarządzania kontaktami z obsługą vCard. * **Kalendarze CalDAV:** Pełne zarządzanie kalendarzem z obsługą stref czasowych i kolorów.\n* **Wiadomości IMAP/POP3:** Kompleksowe zarządzanie wiadomościami z zaawansowanymi funkcjami wyszukiwania.\n* **Foldery IMAP/POP3:** Pełne zarządzanie folderami, w tym tworzenie, zmiana nazwy i usuwanie.\n\n## Uwierzytelnianie\nWiększość punktów końcowych wymaga uwierzytelnienia za pomocą **Klucza API**. Podaj klucz API jako `nazwę użytkownika` w nagłówku uwierzytelniania podstawowego, pozostawiając puste hasło.\n\n```http\nAutoryzacja: Podstawowa QVBJX1RPS0VOOg==\n```\n(Zastąp `API_TOKEN` rzeczywistym kluczem przed kodowaniem Base64)\n\nPunkty końcowe powiązane z **Kontaktami, Kalendarzami, Wiadomościami i Folderami aliasów** wymagają wygenerowanej nazwy użytkownika i hasła aliasu do uwierzytelniania podstawowego.\n\n## Błędy\nInterfejs API używa standardowych kodów stanu HTTP do sygnalizowania powodzenia lub niepowodzenia. Odpowiedzi na błędy zawierają treść JSON z polem „message” szczegółowo opisującym błąd.\n\n| Kod statusu | Znaczenie |\n|-------------|---------------------|\n| 200 | OK |\n| 400 | Błędne żądanie |\n| 401 | Nieautoryzowane |\n| 403 | Zabronione |\n| 404 | Nie znaleziono |\n| 409 | Konflikt |\n| 412 | Niespełniony warunek wstępny |\n| 429 | Zbyt wiele żądań |\n| 500 | Wewnętrzny błąd serwera |\n| 501 | Nie zaimplementowano |\n| 502 | Błędna brama |\n| 503 | Usługa niedostępna |\n| 504 | Przekroczenie limitu czasu bramy |\n\n*W przypadku wystąpienia błędu `5xx` prosimy o kontakt pod adresem [api@forwardemail.net](mailto:api@forwardemail.net).*\n\n## Lokalizacja\nOdpowiedzi API są tłumaczone na podstawie wykrytej lokalizacji użytkownika lub nagłówka `Accept-Language`. Obsługiwanych jest ponad 25 języków.\n\n## Paginacja\nPunkty końcowe zwracające listy obsługują paginację za pomocą parametrów zapytania.\n\n| Parametr | Typ | Opcjonalny | Opis | Domyślne | Ograniczenia |\n|--------------|---------|----------|-----------------------------------------------------------------------------|---------|---------------------|\n| `strona` | Liczba całkowita | Tak | Numer strony do pobrania. | 1 | `>= 1` |\n| `limit` | Liczba całkowita | Tak | Liczba wyników na stronie. | 10 | `>= 1`, `<= 50` |\n| `pagination` | Wartość logiczna | Tak | Włącz paginację (wymagane przed 1 listopada 2024 r. dla niektórych punktów końcowych). | false | |\n\n**Nagłówki paginacji:**\n* `X-Page-Count`: Całkowita liczba stron.\n* `X-Page-Current`: Numer bieżącej strony.\n* `X-Page-Size`: Liczba elementów na bieżącej stronie.\n* `X-Item-Count`: Całkowita liczba elementów na wszystkich stronach.\n* `Link`: Linki nawigacyjne (poprzedni, następny, pierwszy, ostatni).\n\n**Przykład:**\n```bash\ncurl \"https://api.forwardemail.net/v1/domains?page=2&limit=20&pagination=true\" \\\n-u API_TOKEN:\n```\n\n## Polecane biblioteki\n* **Ruby:** [Faraday](https://github.com/lostisland/faraday)\n* **Python:** [requests](https://requests.readthedocs.io/en/latest/)\n* **Java:** [OkHttp](https://square.github.io/okhttp/)\n* **PHP:** [Guzzle](https://docs.guzzlephp.org/en/stable/)\n* **JavaScript/Node.js:** [superagenta](https://github.com/visionmedia/superagenta) (Obsługiwane przez Forward Email)\n* **Go:** `net/http`\n* **.NET:** [RestSharp](https://restsharp.dev/)",
    "version": "1.0.0",
    "contact": {
      "name": "Forward Email Support",
      "url": "https://forwardemail.net",
      "email": "api@forwardemail.net"
    }
  },
  "servers": [
    {
      "url": "https://api.forwardemail.net",
      "description": "Serwer API przekazywania wiadomości e-mail"
    }
  ],
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "http",
        "scheme": "basic",
        "description": "\nUżyj swojego klucza API jako **nazwy użytkownika** dla uwierzytelniania podstawowego. Pozostaw pole hasła puste.\n\n**Przykład:**\nJeśli Twój klucz API to `YOUR_API_KEY`, zakodowana w Base64 wartość nagłówka `Authorization` będzie wyglądać następująco: `echo -n \"YOUR_API_KEY:\" | base64`.\n\n```http\nAuthorization: Basic WU9VUl9BUElfS0VZOg==\n```\n"
      },
      "AliasAuth": {
        "type": "http",
        "scheme": "basic",
        "description": "\nUżyj wygenerowanej **aliasowej nazwy użytkownika i hasła** do uwierzytelniania podstawowego. Dotyczy to punktów końcowych w ramach:\n* Alias Kontaktów (CardDAV)\n* Alias Kalendarzy (CalDAV)\n* Alias Wiadomości (IMAP/POP3)\n* Alias Folderów (IMAP/POP3)\n\n**Przykład:**\nJeśli aliasowa nazwa użytkownika to `alias@domena.com`, a hasło to `GENERATED_PASSWORD`, wartość zakodowana w Base64 to `echo -n \"alias@domena.com:GENERATED_PASSWORD\" | base64`.\n\n```http\nAutoryzacja: Podstawowa YWxpYXNAZG9tYWluLmNvbTpHRU5FUkFURURfUEFTU1dPUkQ=\n```\n"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "type": "string",
            "description": "Komunikat o błędzie"
          }
        }
      },
      "Account": {
        "type": "object",
        "required": [
          "id",
          "email",
          "plan",
          "object"
        ],
        "properties": {
          "sessions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "has_newsletter": {
            "type": "boolean"
          },
          "plan": {
            "type": "string",
            "example": "free"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "max_quota_per_alias": {
            "type": "integer",
            "format": "int64"
          },
          "full_email": {
            "type": "string",
            "format": "email"
          },
          "display_name": {
            "type": "string"
          },
          "otp_enabled": {
            "type": "boolean"
          },
          "last_locale": {
            "type": "string"
          },
          "address_country": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "example": "user"
          },
          "locale": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "address_html": {
            "type": "string"
          },
          "api_token": {
            "type": "string",
            "format": "uuid"
          }
        },
        "example": {
          "sessions": [],
          "has_newsletter": true,
          "plan": "free",
          "email": "test1@test1.com",
          "max_quota_per_alias": 10737418240,
          "full_email": "test1@test1.com",
          "display_name": "test1@test1.com",
          "otp_enabled": false,
          "last_locale": "en",
          "address_country": "None",
          "id": "683fb2e81cc5d449a0d4cd9d",
          "object": "user",
          "locale": "en",
          "created_at": "2025-06-04T02:43:52.646Z",
          "updated_at": "2025-06-04T02:43:55.350Z",
          "address_html": "",
          "api_token": "15ac16ae21784aa2cb4d5508"
        }
      },
      "Contact": {
        "type": "object",
        "required": [
          "id",
          "uid",
          "full_name",
          "content",
          "etag",
          "is_group",
          "emails",
          "phone_numbers",
          "created_at",
          "updated_at",
          "object"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Identyfikator kontaktu (contact_id z CardDAV)"
          },
          "uid": {
            "type": "string",
            "description": "Identyfikator użytkownika kontaktu"
          },
          "full_name": {
            "type": "string",
            "description": "Pełna nazwa kontaktu"
          },
          "content": {
            "type": "string",
            "description": "Zawartość vCard"
          },
          "etag": {
            "type": "string",
            "description": "ETag do kontroli wersji"
          },
          "is_group": {
            "type": "boolean",
            "description": "Czy kontakt jest grupą"
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string",
                  "format": "email"
                },
                "type": {
                  "type": "string",
                  "default": "INTERNET"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "Tablica adresów e-mail"
          },
          "phone_numbers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "default": "CELL"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "Tablica numerów telefonów"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "enum": [
              "contact"
            ]
          }
        },
        "example": {
          "id": "contact123",
          "uid": "uid123",
          "full_name": "John Doe",
          "content": "BEGIN:VCARD\\nVERSION:3.0\\nUID:uid123\\nFN:John Doe\\nEMAIL;TYPE=INTERNET:john@example.com\\nEND:VCARD",
          "etag": "etag123",
          "is_group": false,
          "emails": [
            {
              "value": "john@example.com",
              "type": "INTERNET"
            }
          ],
          "phone_numbers": [
            {
              "value": "+1234567890",
              "type": "CELL"
            }
          ],
          "created_at": "2025-01-01T00:00:00.000Z",
          "updated_at": "2025-01-01T00:00:00.000Z",
          "object": "contact"
        }
      },
      "ContactInput": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "Zawartość vCard (jeśli nie zostanie podana, zostanie wygenerowana z innych pól)"
          },
          "full_name": {
            "type": "string",
            "description": "Pełna nazwa kontaktu"
          },
          "contact_id": {
            "type": "string",
            "description": "Niestandardowy identyfikator kontaktu (jeśli nie zostanie podany, zostanie wygenerowany automatycznie)"
          },
          "uid": {
            "type": "string",
            "description": "Identyfikator kontaktu (jeśli nie podano, zostanie wygenerowany automatycznie)"
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string",
                  "format": "email"
                },
                "type": {
                  "type": "string",
                  "default": "INTERNET"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "Tablica adresów e-mail"
          },
          "phone_numbers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "default": "CELL"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "Tablica numerów telefonów"
          },
          "phones": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "default": "CELL"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "Tablica numerów telefonów (alias dla phone_numbers)"
          },
          "addresses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "street": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "postalCode": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              }
            },
            "description": "Tablica adresów"
          },
          "is_group": {
            "type": "boolean",
            "description": "Czy kontakt jest grupą"
          }
        }
      },
      "ContactUpdateInput": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "Zawartość vCard"
          },
          "full_name": {
            "type": "string",
            "description": "Pełna nazwa kontaktu"
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string",
                  "format": "email"
                },
                "type": {
                  "type": "string",
                  "default": "INTERNET"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "Tablica adresów e-mail"
          },
          "phone_numbers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "default": "CELL"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "Tablica numerów telefonów"
          },
          "phones": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "default": "CELL"
                }
              },
              "required": [
                "value"
              ]
            },
            "description": "Tablica numerów telefonów (alias dla phone_numbers)"
          },
          "addresses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "street": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "postalCode": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              }
            },
            "description": "Tablica adresów"
          },
          "is_group": {
            "type": "boolean",
            "description": "Czy kontakt jest grupą"
          }
        }
      },
      "Calendar": {
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "color",
          "timezone",
          "order",
          "created_at",
          "updated_at",
          "object"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Identyfikator kalendarza (calendarId z CalDAV)"
          },
          "name": {
            "type": "string",
            "description": "Nazwa kalendarza"
          },
          "description": {
            "type": "string",
            "description": "Opis kalendarza"
          },
          "color": {
            "type": "string",
            "description": "Kolor kalendarza (format szesnastkowy)"
          },
          "timezone": {
            "type": "string",
            "description": "Strefa czasowa kalendarza"
          },
          "order": {
            "type": "integer",
            "description": "Kolejność wyświetlania kalendarza"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "enum": [
              "calendar"
            ]
          }
        },
        "example": {
          "id": "calendar123",
          "name": "Personal Calendar",
          "description": "My personal calendar",
          "color": "#ff0000",
          "timezone": "America/New_York",
          "order": 0,
          "created_at": "2025-01-01T00:00:00.000Z",
          "updated_at": "2025-01-01T00:00:00.000Z",
          "object": "calendar"
        }
      },
      "CalendarInput": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Nazwa kalendarza"
          },
          "calendar_id": {
            "type": "string",
            "description": "Niestandardowy identyfikator kalendarza (jeśli nie zostanie podany, zostanie wygenerowany automatycznie)"
          },
          "description": {
            "type": "string",
            "description": "Opis kalendarza"
          },
          "color": {
            "type": "string",
            "description": "Kolor kalendarza (format szesnastkowy; jeśli nie zostanie podany, zostanie wygenerowany automatycznie)"
          },
          "timezone": {
            "type": "string",
            "description": "Strefa czasowa kalendarza (domyślnie strefa czasowa użytkownika lub UTC)"
          },
          "order": {
            "type": "integer",
            "description": "Kolejność wyświetlania kalendarza (domyślnie 0)"
          }
        }
      },
      "CalendarUpdateInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nazwa kalendarza"
          },
          "description": {
            "type": "string",
            "description": "Opis kalendarza"
          },
          "color": {
            "type": "string",
            "description": "Kolor kalendarza (format szesnastkowy)"
          },
          "timezone": {
            "type": "string",
            "description": "Strefa czasowa kalendarza"
          },
          "order": {
            "type": "integer",
            "description": "Kolejność wyświetlania kalendarza"
          }
        }
      },
      "Folder": {
        "type": "object",
        "required": [
          "id",
          "path",
          "name",
          "parent",
          "uid_validity",
          "uid_next",
          "modify_index",
          "subscribed",
          "flags",
          "retention",
          "special_use",
          "created_at",
          "updated_at",
          "object"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Identyfikator folderu"
          },
          "path": {
            "type": "string",
            "description": "Pełna ścieżka do folderu"
          },
          "name": {
            "type": "string",
            "description": "Nazwa folderu (ostatnia część ścieżki)"
          },
          "parent": {
            "type": "string",
            "nullable": true,
            "description": "Ścieżka do folderu nadrzędnego"
          },
          "uid_validity": {
            "type": "integer",
            "description": "Ważność identyfikatora użytkownika IMAP"
          },
          "uid_next": {
            "type": "integer",
            "description": "Następna wartość UID"
          },
          "modify_index": {
            "type": "integer",
            "description": "Indeks modyfikacji"
          },
          "subscribed": {
            "type": "boolean",
            "description": "Czy folder jest subskrybowany"
          },
          "flags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Flagi folderów"
          },
          "retention": {
            "type": "integer",
            "nullable": true,
            "description": "Okres przechowywania wiadomości"
          },
          "special_use": {
            "type": "string",
            "nullable": true,
            "description": "Oznaczenie specjalnego przeznaczenia"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "enum": [
              "folder"
            ]
          }
        },
        "example": {
          "id": "folder123",
          "path": "INBOX/Subfolder",
          "name": "Subfolder",
          "parent": "INBOX",
          "uid_validity": 123456,
          "uid_next": 1,
          "modify_index": 1,
          "subscribed": true,
          "flags": [],
          "retention": null,
          "special_use": null,
          "created_at": "2025-01-01T00:00:00.000Z",
          "updated_at": "2025-01-01T00:00:00.000Z",
          "object": "folder"
        }
      },
      "FolderInput": {
        "type": "object",
        "required": [
          "path"
        ],
        "properties": {
          "path": {
            "type": "string",
            "description": "Ścieżka/nazwa folderu"
          }
        }
      },
      "FolderUpdateInput": {
        "type": "object",
        "required": [
          "path"
        ],
        "properties": {
          "path": {
            "type": "string",
            "description": "Nowa ścieżka/nazwa folderu"
          }
        }
      },
      "Message": {
        "type": "object",
        "required": [
          "id",
          "root_id",
          "folder_id",
          "folder_path",
          "thread_id",
          "header_message_id",
          "is_unread",
          "is_flagged",
          "is_deleted",
          "is_draft",
          "is_junk",
          "is_copied",
          "is_searchable",
          "is_expired",
          "has_attachment",
          "retention_date",
          "internal_date",
          "header_date",
          "subject",
          "flags",
          "size",
          "uid",
          "modseq",
          "transaction",
          "remote_address",
          "object"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Identyfikator wiadomości"
          },
          "root_id": {
            "type": "string",
            "description": "Identyfikator wiadomości głównej dla wątków"
          },
          "folder_id": {
            "type": "string",
            "description": "Identyfikator folderu zawierającego wiadomość"
          },
          "folder_path": {
            "type": "string",
            "description": "Ścieżka do folderu zawierającego wiadomość"
          },
          "thread_id": {
            "type": "string",
            "description": "Identyfikator wątku dla grupowania konwersacji"
          },
          "header_message_id": {
            "type": "string",
            "description": "Wartość nagłówka Message-ID"
          },
          "is_unread": {
            "type": "boolean",
            "description": "Czy wiadomość jest nieprzeczytana"
          },
          "is_flagged": {
            "type": "boolean",
            "description": "Czy wiadomość jest oznaczona flagą"
          },
          "is_deleted": {
            "type": "boolean",
            "description": "Czy wiadomość została usunięta"
          },
          "is_draft": {
            "type": "boolean",
            "description": "Czy wiadomość jest wersją roboczą"
          },
          "is_junk": {
            "type": "boolean",
            "description": "Czy wiadomość jest spamem/śmiecią"
          },
          "is_copied": {
            "type": "boolean",
            "description": "Czy wiadomość została skopiowana"
          },
          "is_searchable": {
            "type": "boolean",
            "description": "Czy wiadomość jest przeszukiwalna"
          },
          "is_expired": {
            "type": "boolean",
            "description": "Czy wiadomość wygasła"
          },
          "has_attachment": {
            "type": "boolean",
            "description": "Czy wiadomość zawiera załączniki"
          },
          "retention_date": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Data przechowywania wiadomości"
          },
          "internal_date": {
            "type": "string",
            "format": "date-time",
            "description": "Data wewnętrzna (IMAP)"
          },
          "header_date": {
            "type": "string",
            "format": "date-time",
            "description": "Data z nagłówków wiadomości"
          },
          "subject": {
            "type": "string",
            "description": "Temat wiadomości"
          },
          "flags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Flagi IMAP"
          },
          "size": {
            "type": "integer",
            "description": "Rozmiar wiadomości w bajtach"
          },
          "uid": {
            "type": "integer",
            "description": "Identyfikator użytkownika IMAP"
          },
          "modseq": {
            "type": "integer",
            "description": "Sekwencja modyfikacji"
          },
          "transaction": {
            "type": "string",
            "description": "Typ transakcji"
          },
          "remote_address": {
            "type": "string",
            "description": "Zdalny adres IP"
          },
          "nodemailer": {
            "type": "object",
            "description": "Przetworzony obiekt wiadomości (domyślnie uwzględniony, ustaw ?nodemailer=false, aby wykluczyć)"
          },
          "raw": {
            "type": "string",
            "description": "Surowa treść wiadomości (domyślnie uwzględniona, ustaw ?raw=false, aby wykluczyć)"
          },
          "object": {
            "type": "string",
            "enum": [
              "message"
            ]
          }
        },
        "example": {
          "id": "message123",
          "root_id": "root123",
          "folder_id": "folder123",
          "folder_path": "INBOX",
          "thread_id": "thread123",
          "header_message_id": "<message123@example.com>",
          "is_unread": true,
          "is_flagged": false,
          "is_deleted": false,
          "is_draft": false,
          "is_junk": false,
          "is_copied": false,
          "is_searchable": true,
          "is_expired": false,
          "has_attachment": false,
          "retention_date": null,
          "internal_date": "2025-01-01T00:00:00.000Z",
          "header_date": "2025-01-01T00:00:00.000Z",
          "subject": "Test Message",
          "flags": [
            "\\Seen"
          ],
          "size": 1024,
          "uid": 1,
          "modseq": 1,
          "transaction": "API",
          "remote_address": "127.0.0.1",
          "object": "message"
        }
      },
      "MessageInput": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "email",
            "description": "Adres e-mail nadawcy"
          },
          "to": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "Adresy e-mail odbiorców"
          },
          "cc": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "Adresy e-mail odbiorców DW"
          },
          "bcc": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "Adresy e-mail odbiorców w polu „UDW”"
          },
          "subject": {
            "type": "string",
            "description": "Temat wiadomości"
          },
          "text": {
            "type": "string",
            "description": "Zawartość zwykłego tekstu"
          },
          "html": {
            "type": "string",
            "description": "Zawartość HTML"
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Załączniki do wiadomości (format Nodemailer)"
          },
          "folder": {
            "type": "string",
            "description": "Folder docelowy (domyślnie SKRZYNKA ODBIORCZA)"
          },
          "flags": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "description": "Flagi IMAP do ustawienia w wiadomości"
          }
        }
      },
      "MessageUpdateInput": {
        "type": "object",
        "properties": {
          "flags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Flagi IMAP do ustawienia w wiadomości"
          },
          "folder": {
            "type": "string",
            "description": "Przenieś wiadomość do tego folderu"
          }
        }
      },
      "Email": {
        "type": "object",
        "required": [
          "id",
          "object",
          "status",
          "alias",
          "domain",
          "user"
        ],
        "properties": {
          "is_redacted": {
            "type": "boolean"
          },
          "hard_bounces": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "soft_bounces": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "is_bounce": {
            "type": "boolean"
          },
          "alias": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "example": "sent"
          },
          "is_locked": {
            "type": "boolean"
          },
          "envelope": {
            "type": "object",
            "properties": {
              "from": {
                "type": "string",
                "format": "email"
              },
              "to": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            }
          },
          "messageId": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "subject": {
            "type": "string"
          },
          "accepted": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "example": "email"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "link": {
            "type": "string",
            "format": "uri"
          }
        },
        "example": {
          "is_redacted": true,
          "hard_bounces": [],
          "soft_bounces": [],
          "is_bounce": false,
          "alias": "67a180fxxxxxxxe46a3f0edf",
          "domain": "5efae85dxxxxxxxf4bb53c7a",
          "user": "5efabd3907xxxxxxx12890b8",
          "status": "sent",
          "is_locked": false,
          "envelope": {
            "from": "test@test.com",
            "to": [
              "test@test1.com"
            ]
          },
          "messageId": "1a04fee3-5230-4a85-9111-a2c376835885@shaunwarman.com",
          "date": "2025-06-04T03:32:19.000Z",
          "subject": "testing",
          "accepted": [
            "test@test1.com"
          ],
          "id": "683fbe4d5baef1b583a1xxxx",
          "object": "email",
          "created_at": "2025-06-04T03:32:29.138Z",
          "updated_at": "2025-06-04T03:32:33.847Z",
          "link": "https://forwardemail.net/my-account/emails/683fbe4d5baef1b583a11e54"
        }
      },
      "EmailList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Email"
        }
      },
      "SMTP": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "email",
            "description": "Adres e-mail nadawcy (musi istnieć jako alias domeny)."
          },
          "to": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "Lista lub tablica odbiorców oddzielonych przecinkami dla nagłówka „Do”."
          },
          "cc": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "Lista lub tablica odbiorców oddzielonych przecinkami dla nagłówka „DW”."
          },
          "bcc": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                }
              }
            ],
            "description": "Lista lub tablica odbiorców oddzielonych przecinkami dla nagłówka „UDW”."
          },
          "subject": {
            "type": "string",
            "description": "Temat wiadomości e-mail."
          },
          "text": {
            "type": "string",
            "description": "Wersja wiadomości w postaci zwykłego tekstu."
          },
          "html": {
            "type": "string",
            "description": "Wersja HTML wiadomości."
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Tablica obiektów załącznika (zobacz wspólne pola Nodemailera)."
          },
          "sender": {
            "type": "string",
            "format": "email",
            "description": "Adres e-mail w nagłówku „Nadawca”."
          },
          "replyTo": {
            "type": "string",
            "format": "email",
            "description": "Adres e-mail dla nagłówka „Odpowiedz do”."
          },
          "inReplyTo": {
            "type": "string",
            "description": "Identyfikator wiadomości, na którą jest odpowiedź."
          },
          "references": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "description": "Lista lub tablica identyfikatorów wiadomości rozdzielonych spacjami."
          },
          "attachDataUrls": {
            "type": "boolean",
            "description": "Jeśli wartość jest równa prawda, konwertuje dane: obrazy w zawartości HTML na osadzone załączniki."
          },
          "watchHtml": {
            "type": "string",
            "description": "Wersja wiadomości HTML specyficzna dla zegarka Apple Watch."
          },
          "amp": {
            "type": "string",
            "description": "Wersja HTML wiadomości specyficzna dla AMP4EMAIL."
          },
          "icalEvent": {
            "type": "object",
            "description": "Wydarzenie iCalendar jako alternatywna treść wiadomości."
          },
          "alternatives": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Zbiór alternatywnych treści wiadomości."
          },
          "encoding": {
            "type": "string",
            "description": "Kodowanie tekstu i ciągów HTML (np. „utf-8”, „hex”, „base64”)."
          },
          "raw": {
            "type": "string",
            "description": "Niestandardowo wygenerowana wiadomość w formacie RFC822 (zamiast generowania przez Nodemailer)."
          },
          "textEncoding": {
            "type": "string",
            "enum": [
              "quoted-printable",
              "base64"
            ],
            "description": "Wymuszone kodowanie dla wartości tekstowych."
          },
          "priority": {
            "type": "string",
            "enum": [
              "high",
              "normal",
              "low"
            ],
            "description": "Poziom priorytetu wiadomości e-mail."
          },
          "headers": {
            "oneOf": [
              {
                "type": "object",
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            ],
            "description": "Obiekt lub tablica dodatkowych pól nagłówka."
          },
          "messageId": {
            "type": "string",
            "description": "Opcjonalny Message-ID dla nagłówka „Message-ID”."
          },
          "date": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "description": "Opcjonalny nagłówek daty. Data nie może przypadać później niż 30 dni w przyszłości."
          },
          "list": {
            "type": "object",
            "description": "Opcjonalny obiekt nagłówka List-*."
          }
        }
      },
      "Domain": {
        "type": "object",
        "properties": {
          "has_newsletter": {
            "type": "boolean"
          },
          "ignore_mx_check": {
            "type": "boolean"
          },
          "retention_days": {
            "type": "integer"
          },
          "has_regex": {
            "type": "boolean"
          },
          "has_catchall": {
            "type": "boolean"
          },
          "allowlist": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "denylist": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "restricted_alias_names": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "has_adult_content_protection": {
            "type": "boolean"
          },
          "has_phishing_protection": {
            "type": "boolean"
          },
          "has_executable_protection": {
            "type": "boolean"
          },
          "has_virus_protection": {
            "type": "boolean"
          },
          "is_catchall_regex_disabled": {
            "type": "boolean"
          },
          "has_smtp": {
            "type": "boolean"
          },
          "is_smtp_suspended": {
            "type": "boolean"
          },
          "plan": {
            "type": "string"
          },
          "max_recipients_per_alias": {
            "type": "integer"
          },
          "smtp_port": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "has_mx_record": {
            "type": "boolean"
          },
          "has_txt_record": {
            "type": "boolean"
          },
          "has_dkim_record": {
            "type": "boolean"
          },
          "has_return_path_record": {
            "type": "boolean"
          },
          "has_dmarc_record": {
            "type": "boolean"
          },
          "has_recipient_verification": {
            "type": "boolean"
          },
          "has_custom_verification": {
            "type": "boolean"
          },
          "verification_record": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "enum": [
              "domain"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "storage_used": {
            "type": "integer"
          },
          "storage_used_by_aliases": {
            "type": "integer"
          },
          "storage_quota": {
            "type": "integer"
          },
          "smtp_dns_records": {
            "type": "object",
            "properties": {
              "dkim": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              },
              "return_path": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              },
              "dmarc": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "link": {
            "type": "string",
            "format": "uri"
          }
        },
        "example": [
          {
            "has_newsletter": false,
            "ignore_mx_check": false,
            "retention_days": 0,
            "has_regex": false,
            "has_catchall": true,
            "allowlist": [],
            "denylist": [],
            "restricted_alias_names": [],
            "has_adult_content_protection": true,
            "has_phishing_protection": true,
            "has_executable_protection": true,
            "has_virus_protection": true,
            "is_catchall_regex_disabled": false,
            "has_smtp": false,
            "is_smtp_suspended": false,
            "plan": "team",
            "max_recipients_per_alias": 10,
            "smtp_port": "25",
            "name": "test.com",
            "has_mx_record": false,
            "has_txt_record": false,
            "has_dkim_record": false,
            "has_return_path_record": false,
            "has_dmarc_record": false,
            "has_recipient_verification": false,
            "has_custom_verification": false,
            "verification_record": "kcjg6vrO8Q",
            "id": "683f1172c4bad2524410b857",
            "object": "domain",
            "created_at": "2025-06-03T15:14:59.000Z",
            "updated_at": "2025-06-03T15:14:59.254Z",
            "storage_used": 0,
            "storage_used_by_aliases": 0,
            "storage_quota": 10737418240,
            "smtp_dns_records": {
              "dkim": {
                "name": "fe-ebf3212716._domainkey",
                "value": "v=DKIM1; k=rsa; p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCcG+YBDPhyH8bLmyflmU9w1klYDeWpEufIlVqyWqly9lC+J/ntkKn4gum28EeE6vR+55x4JFCR8qSaw0YO1eCRwBgpFB0kKzbELHh2i2TKKwrqB3gPLXp4q4lbcGX2eD6fPCRwckTHqmiOzMhX8GD60zVlEvabok4LJ1i/BOyh6wIDAQAB;"
              },
              "return_path": {
                "name": "fe-bounces",
                "value": "forwardemail.net"
              },
              "dmarc": {
                "name": "_dmarc",
                "value": "v=DMARC1; p=reject; pct=100; rua=mailto:dmarc-683f1172c4bad2524410b857@localhost;"
              }
            },
            "link": "http://localhost:3000/my-account/domains/test.com"
          }
        ]
      },
      "CreateDomainInput": {
        "type": "object",
        "required": [
          "domain"
        ],
        "properties": {
          "domain": {
            "type": "string",
            "description": "W pełni kwalifikowana nazwa domeny (FQDN) lub adres IP"
          },
          "team_domain": {
            "type": "string",
            "nullable": true,
            "description": "Przypisz do tego samego zespołu z innej domeny; może to być identyfikator domeny lub nazwa domeny w pełni kwalifikowanej (FQDN). Użyj „brak”, aby wyraźnie wyłączyć."
          },
          "plan": {
            "type": "string",
            "enum": [
              "free",
              "enhanced_protection",
              "team"
            ],
            "description": "Typ planu (domyślnie „bezpłatny” lub aktualny płatny plan użytkownika)"
          },
          "catchall": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "type": "string",
                "description": "Lista adresów e-mail rozdzielonych przecinkami, spacjami lub znakami nowej linii"
              }
            ],
            "description": "Utwórz domyślny alias typu catch-all (domyślnie true)"
          },
          "has_adult_content_protection": {
            "type": "boolean",
            "description": "Włącz ochronę antyspamową przed treściami dla dorosłych"
          },
          "has_phishing_protection": {
            "type": "boolean",
            "description": "Włącz ochronę przed phishingiem za pomocą skanera spamu"
          },
          "has_executable_protection": {
            "type": "boolean",
            "description": "Włącz ochronę pliku wykonywalnego skanera spamu"
          },
          "has_virus_protection": {
            "type": "boolean",
            "description": "Włącz ochronę antywirusową Spam Scanner"
          },
          "has_recipient_verification": {
            "type": "boolean",
            "description": "Wymagaj od odbiorców aliasów kliknięcia łącza weryfikacyjnego e-mail"
          },
          "ignore_mx_check": {
            "type": "boolean",
            "description": "Zignoruj sprawdzanie rekordu MX w przypadku zaawansowanych ustawień routingu poczty"
          },
          "retention_days": {
            "type": "integer",
            "minimum": 0,
            "maximum": 30,
            "description": "Liczba dni przechowywania dzienników SMTP wychodzących (0–30, wartość domyślna: 0)"
          },
          "bounce_webhook": {
            "oneOf": [
              {
                "type": "string",
                "format": "uri",
                "description": "Adres URL webhooka do odbierania zdarzeń odrzucenia"
              },
              {
                "type": "boolean",
                "enum": [
                  false
                ],
                "description": "Wyłącz webhook odbicia"
              }
            ]
          },
          "max_quota_per_alias": {
            "type": "string",
            "description": "Maksymalna ilość miejsca na alias (np. „1 GB”)"
          }
        }
      },
      "UpdateDomainInput": {
        "type": "object",
        "properties": {
          "smtp_port": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ],
            "description": "Niestandardowy port do skonfigurowania dla przekierowania SMTP (domyślnie „25”)"
          },
          "has_adult_content_protection": {
            "type": "boolean",
            "description": "Czy włączyć ochronę antyspamową dla treści dla dorosłych w tej domenie?"
          },
          "has_phishing_protection": {
            "type": "boolean",
            "description": "Czy włączyć ochronę przed phishingiem za pomocą Spam Scanner w tej domenie?"
          },
          "has_executable_protection": {
            "type": "boolean",
            "description": "Czy włączyć ochronę pliku wykonywalnego skanera spamu w tej domenie"
          },
          "has_virus_protection": {
            "type": "boolean",
            "description": "Czy włączyć ochronę antywirusową Spam Scanner w tej domenie"
          },
          "has_recipient_verification": {
            "type": "boolean",
            "description": "Globalna domyślna domena, która określa, czy odbiorcy aliasów mają być zobowiązani do kliknięcia łącza weryfikacyjnego adresu e-mail, aby wiadomości e-mail mogły przez nią przepływać"
          },
          "ignore_mx_check": {
            "type": "boolean",
            "description": "Czy zignorować sprawdzanie rekordu MX w domenie w celu weryfikacji (głównie w przypadku zaawansowanych konfiguracji routingu MX)"
          },
          "retention_days": {
            "type": "integer",
            "minimum": 0,
            "maximum": 30,
            "description": "Liczba dni przechowywania wiadomości e-mail SMTP wychodzących (0 = natychmiastowe czyszczenie)"
          },
          "bounce_webhook": {
            "oneOf": [
              {
                "type": "string",
                "format": "uri"
              },
              {
                "type": "boolean",
                "enum": [
                  false
                ]
              }
            ],
            "description": "Adres URL webhooka do otrzymywania powiadomień o odrzuceniu lub fałsz, aby je wyłączyć"
          },
          "max_quota_per_alias": {
            "type": "string",
            "description": "Limit pamięci masowej dla każdego aliasu (np. „1 GB”, podzielony na bajty)"
          }
        }
      },
      "Alias": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email"
              },
              "display_name": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "email",
              "display_name",
              "id"
            ]
          },
          "domain": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "id"
            ]
          },
          "name": {
            "type": "string"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "is_enabled": {
            "type": "boolean"
          },
          "has_recipient_verification": {
            "type": "boolean"
          },
          "verified_recipients": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "pending_recipients": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "recipients": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "enum": [
              "alias"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "storage_location": {
            "type": "string"
          },
          "has_imap": {
            "type": "boolean"
          }
        },
        "required": [
          "user",
          "domain",
          "name",
          "labels",
          "is_enabled",
          "has_recipient_verification",
          "verified_recipients",
          "pending_recipients",
          "recipients",
          "id",
          "object",
          "created_at",
          "updated_at",
          "storage_location",
          "has_imap"
        ],
        "example": {
          "user": {
            "email": "test@test.com",
            "display_name": "test@test.com",
            "id": "5efabd39xxxxxxx4512890b8"
          },
          "domain": {
            "name": "mailsire.com",
            "id": "5e3c0550xxxxxxx09b7ba023"
          },
          "name": "abc123",
          "labels": [],
          "is_enabled": true,
          "has_recipient_verification": false,
          "verified_recipients": [],
          "pending_recipients": [],
          "recipients": [
            "abc@test1.com"
          ],
          "id": "62fa3dcxxxxxxx79dda83ff2",
          "object": "alias",
          "created_at": "2022-08-15T12:36:26.593Z",
          "updated_at": "2022-08-15T12:36:26.593Z",
          "storage_location": "storage_loc",
          "has_imap": false
        }
      },
      "AliasInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nazwa aliasu (jeśli nie zostanie podana lub będzie pusta, zostanie wygenerowany losowy alias)"
          },
          "recipients": {
            "oneOf": [
              {
                "type": "string",
                "description": "Ciąg prawidłowych adresów e-mail, nazw w pełni kwalifikowanych (FQDN), adresów IP lub adresów URL webhook rozdzielonych podziałem wiersza, spacją lub przecinkiem"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                },
                "description": "Tablica prawidłowych odbiorców"
              }
            ],
            "description": "Lista odbiorców. Jeśli nie zostanie podana lub będzie pusta, domyślnie zostanie wyświetlony adres e-mail wnioskodawcy."
          },
          "description": {
            "type": "string",
            "description": "Opis aliasu"
          },
          "labels": {
            "oneOf": [
              {
                "type": "string",
                "description": "Ciąg etykiet rozdzielony podziałem wiersza/spacją/przecinkiem"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Tablica etykiet"
              }
            ]
          },
          "has_recipient_verification": {
            "type": "boolean",
            "description": "Wymagaj od odbiorców kliknięcia łącza weryfikacyjnego (domyślnie ustawienie domeny)"
          },
          "is_enabled": {
            "type": "boolean",
            "description": "Czy włączyć lub wyłączyć ten alias"
          },
          "error_code_if_disabled": {
            "type": "number",
            "enum": [
              250,
              421,
              550
            ],
            "description": "Kod błędu, jeśli alias jest wyłączony. Domyślnie 250."
          },
          "has_imap": {
            "type": "boolean",
            "description": "Włącz lub wyłącz przechowywanie IMAP dla tego aliasu"
          },
          "has_pgp": {
            "type": "boolean",
            "description": "Włącz lub wyłącz szyfrowanie OpenPGP dla tego aliasu"
          },
          "public_key": {
            "type": "string",
            "description": "Klucz publiczny OpenPGP w formacie ASCII Armor"
          },
          "max_quota": {
            "type": "string",
            "description": "Maksymalna ilość miejsca na dane (np. „1 GB”)"
          },
          "vacation_responder_is_enabled": {
            "type": "boolean",
            "description": "Włączanie lub wyłączanie funkcji powiadamiania o nieobecności"
          },
          "vacation_responder_start_date": {
            "type": "string",
            "description": "Data rozpoczęcia (np. „RRRR-MM-DD”) dla wiadomości wysyłanej z informacją o nieobecności"
          },
          "vacation_responder_end_date": {
            "type": "string",
            "description": "Data zakończenia (np. „RRRR-MM-DD”) dla wiadomości wysyłanej z informacją o nieobecności"
          },
          "vacation_responder_subject": {
            "type": "string",
            "description": "Temat w tekście jawnym dla wiadomości o nieobecności"
          },
          "vacation_responder_message": {
            "type": "string",
            "description": "Wiadomość tekstowa dla osoby wysyłającej wiadomość o nieobecności"
          }
        }
      },
      "AliasUpdateInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nazwa aliasu"
          },
          "recipients": {
            "oneOf": [
              {
                "type": "string",
                "description": "Ciąg prawidłowych adresów e-mail, nazw w pełni kwalifikowanych (FQDN), adresów IP lub adresów URL webhook rozdzielonych podziałem wiersza, spacją lub przecinkiem"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                },
                "description": "Tablica prawidłowych odbiorców"
              }
            ]
          },
          "description": {
            "type": "string",
            "description": "Opis aliasu"
          },
          "labels": {
            "oneOf": [
              {
                "type": "string",
                "description": "Ciąg etykiet rozdzielony podziałem wiersza/spacją/przecinkiem"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Tablica etykiet"
              }
            ]
          },
          "has_recipient_verification": {
            "type": "boolean",
            "description": "Wymagaj od odbiorców kliknięcia łącza weryfikacyjnego (domyślnie ustawienie domeny)"
          },
          "is_enabled": {
            "type": "boolean",
            "description": "Włącz lub wyłącz alias"
          },
          "error_code_if_disabled": {
            "type": "number",
            "enum": [
              250,
              421,
              550
            ],
            "description": "Kod błędu do użycia, jeśli alias jest wyłączony (domyślnie 250)"
          },
          "has_imap": {
            "type": "boolean",
            "description": "Włączanie lub wyłączanie pamięci masowej IMAP"
          },
          "has_pgp": {
            "type": "boolean",
            "description": "Włącz lub wyłącz szyfrowanie OpenPGP"
          },
          "public_key": {
            "type": "string",
            "description": "Klucz publiczny OpenPGP w formacie ASCII Armor"
          },
          "max_quota": {
            "type": "string",
            "description": "Maksymalny limit miejsca na dane (np. „1 GB”)"
          },
          "vacation_responder_is_enabled": {
            "type": "boolean",
            "description": "Włączanie lub wyłączanie funkcji powiadamiania o nieobecności"
          },
          "vacation_responder_start_date": {
            "type": "string",
            "description": "Data rozpoczęcia wysyłania wiadomości o nieobecności (np. RRRR-MM-DD)"
          },
          "vacation_responder_end_date": {
            "type": "string",
            "description": "Data zakończenia wysyłania wiadomości o nieobecności (np. RRRR-MM-DD)"
          },
          "vacation_responder_subject": {
            "type": "string",
            "description": "Temat wiadomości o nieobecności w formie tekstu jawnego"
          },
          "vacation_responder_message": {
            "type": "string",
            "description": "Wiadomość tekstowa w formie wiadomości o nieobecności"
          }
        }
      },
      "GenerateAliasPasswordInput": {
        "type": "object",
        "properties": {
          "new_password": {
            "type": "string",
            "description": "Twoje nowe hasło niestandardowe do użycia dla aliasu"
          },
          "password": {
            "type": "string",
            "description": "Istniejące hasło aliasu, aby je zmienić bez usuwania zawartości skrzynki pocztowej"
          },
          "is_override": {
            "type": "boolean",
            "description": "Zastąp istniejące hasło i usuń pamięć masową IMAP (stosuj ostrożnie)"
          },
          "emailed_instructions": {
            "type": "string",
            "format": "email",
            "description": "Adres e-mail, na który należy wysłać hasło aliasu i instrukcje konfiguracji"
          }
        }
      },
      "EmailLimit": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Aktualna liczba wysłanych wiadomości e-mail"
          },
          "limit": {
            "type": "integer",
            "description": "Maksymalna liczba dozwolonych wiadomości e-mail"
          }
        }
      },
      "Member": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identyfikator członka"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Adres e-mail członka"
          },
          "role": {
            "type": "string",
            "description": "Rola członka"
          }
        }
      },
      "Invite": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "Zaproszony adres e-mail"
          }
        }
      }
    },
    "parameters": {
      "page": {
        "name": "page",
        "in": "query",
        "description": "Strona wyników do zwrócenia. Jeśli nie określono, wartość będzie wynosić 1. Musi to być liczba większa lub równa 1.",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "default": 1
        }
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "description": "Liczba wyników zwracanych na stronę. Domyślnie 10, jeśli nie określono inaczej. Musi to być liczba większa lub równa 1 i mniejsza lub równa 50.",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 50,
          "default": 10
        }
      },
      "pagination": {
        "name": "pagination",
        "in": "query",
        "description": "Wyraź zgodę na paginację przed 1 listopada 2024 r.",
        "schema": {
          "type": "boolean"
        }
      },
      "domainId": {
        "name": "domain_id",
        "in": "path",
        "required": true,
        "description": "Identyfikator domeny",
        "schema": {
          "type": "string"
        }
      },
      "aliasId": {
        "name": "alias_id",
        "in": "path",
        "required": true,
        "description": "Identyfikator aliasu",
        "schema": {
          "type": "string"
        }
      },
      "memberId": {
        "name": "member_id",
        "in": "path",
        "required": true,
        "description": "Identyfikator członka",
        "schema": {
          "type": "string"
        }
      },
      "emailId": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "Identyfikator e-mail",
        "schema": {
          "type": "string"
        }
      },
      "contactId": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "Identyfikator kontaktu",
        "schema": {
          "type": "string"
        }
      },
      "calendarId": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "Identyfikator kalendarza",
        "schema": {
          "type": "string"
        }
      },
      "folderId": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "Identyfikator folderu lub ścieżka",
        "schema": {
          "type": "string"
        }
      },
      "messageId": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "Identyfikator wiadomości",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "Error": {
        "description": "Error response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "BadRequest": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotFound": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Conflict": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "PreconditionFailed": {
        "description": "Precondition Failed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "TooManyRequests": {
        "description": "Too Many Requests",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotImplemented": {
        "description": "Not Implemented",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "BadGateway": {
        "description": "Bad Gateway",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "ServiceUnavailable": {
        "description": "Service Unavailable",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "GatewayTimeout": {
        "description": "Gateway Time-out",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  },
  "paths": {
    "/v1/account": {
      "get": {
        "tags": [
          "Konto"
        ],
        "summary": "Pobierz konto",
        "description": "Pobierz informacje o swoim koncie.",
        "operationId": "retrieveAccount",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Account retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Konto"
        ],
        "summary": "Zaktualizuj konto",
        "description": "Zaktualizuj dane swojego konta.",
        "operationId": "updateAccount",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "display_name": {
                    "type": "string",
                    "description": "Nazwa wyświetlana"
                  },
                  "locale": {
                    "type": "string",
                    "description": "Preferencje regionalne"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/contacts": {
      "get": {
        "tags": [
          "Łączność"
        ],
        "summary": "Lista kontaktów",
        "description": "Pobierz listę wszystkich kontaktów dla uwierzytelnionego aliasu. Ten punkt końcowy obsługuje paginację i zwraca kontakty w formacie CardDAV.",
        "operationId": "listContacts",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Contacts retrieved successfully",
            "headers": {
              "X-Page-Count": {
                "description": "Total number of pages",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Current": {
                "description": "Current page number",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Size": {
                "description": "Number of items on current page",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Item-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Contact"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Łączność"
        ],
        "summary": "Utwórz kontakt",
        "description": "Utwórz nowy kontakt. Możesz podać bezpośrednio zawartość vCard lub poszczególne pola kontaktu, które zostaną przekonwertowane na format vCard. Jeśli kontakt o tym samym identyfikatorze już istnieje, zostanie zwrócony błąd konfliktu.",
        "operationId": "createContact",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contact created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/contacts/{id}": {
      "get": {
        "tags": [
          "Łączność"
        ],
        "summary": "Pobierz kontakt",
        "description": "Pobierz konkretny kontakt według jego identyfikatora. Kontakt jest zwracany w standardowym formacie kontaktu z zawartością vCard i przetworzonymi polami.",
        "operationId": "retrieveContact",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/contactId"
          }
        ],
        "responses": {
          "200": {
            "description": "Contact retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Łączność"
        ],
        "summary": "Aktualizacja kontaktu",
        "description": "Zaktualizuj istniejący kontakt. Możesz podać zaktualizowaną zawartość vCard lub poszczególne pola do aktualizacji. Wizytówka vCard kontaktu zostanie wygenerowana ponownie, jeśli podane zostaną poszczególne pola.",
        "operationId": "updateContact",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/contactId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Łączność"
        ],
        "summary": "Usuń kontakt",
        "description": "Trwale usuń konkretny kontakt. Tej czynności nie można cofnąć.",
        "operationId": "deleteContact",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/contactId"
          }
        ],
        "responses": {
          "200": {
            "description": "Contact deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/calendars": {
      "get": {
        "tags": [
          "Kalendarze"
        ],
        "summary": "Lista kalendarzy",
        "description": "Pobierz listę wszystkich kalendarzy dla uwierzytelnionego aliasu. Ten punkt końcowy obsługuje paginację i zwraca kalendarze w formacie CalDAV.",
        "operationId": "listCalendars",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Calendars retrieved successfully",
            "headers": {
              "X-Page-Count": {
                "description": "Total number of pages",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Current": {
                "description": "Current page number",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Size": {
                "description": "Number of items on current page",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Item-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Calendar"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Kalendarze"
        ],
        "summary": "Utwórz kalendarz",
        "description": "Utwórz nowy kalendarz. Nazwa kalendarza jest wymagana, a inne właściwości, takie jak kolor, strefa czasowa i opis, są opcjonalne. Jeśli kalendarz o tej samej nazwie już istnieje, zostanie zwrócony błąd konfliktu.",
        "operationId": "createCalendar",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Calendar created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Calendar"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/calendars/{id}": {
      "get": {
        "tags": [
          "Kalendarze"
        ],
        "summary": "Pobierz kalendarz",
        "description": "Pobierz konkretny kalendarz według jego identyfikatora. Kalendarz zostanie zwrócony ze wszystkimi swoimi właściwościami, w tym nazwą, opisem, kolorem, strefą czasową i kolejnością.",
        "operationId": "retrieveCalendar",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/calendarId"
          }
        ],
        "responses": {
          "200": {
            "description": "Calendar retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Calendar"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Kalendarze"
        ],
        "summary": "Aktualizacja kalendarza",
        "description": "Zaktualizuj istniejący kalendarz. Możesz zaktualizować dowolne właściwości kalendarza, w tym nazwę, opis, kolor, strefę czasową i kolejność. Jeśli zmienisz nazwę na już istniejącą, zostanie zwrócony błąd konfliktu.",
        "operationId": "updateCalendar",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/calendarId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Calendar updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Calendar"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Kalendarze"
        ],
        "summary": "Usuń kalendarz",
        "description": "Trwale usuń konkretny kalendarz. Tej czynności nie można cofnąć, a wszystkie wydarzenia w kalendarzu zostaną usunięte.",
        "operationId": "deleteCalendar",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/calendarId"
          }
        ],
        "responses": {
          "200": {
            "description": "Calendar deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Calendar"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/folders": {
      "get": {
        "tags": [
          "Lornetka składana"
        ],
        "summary": "Wyświetlanie listy folderów",
        "description": "Pobierz listę wszystkich folderów/skrzynek pocztowych IMAP dla uwierzytelnionego aliasu. Ten punkt końcowy obsługuje paginację i filtrowanie według statusu subskrypcji.",
        "operationId": "listFolders",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "name": "subscribed",
            "in": "query",
            "description": "Filtruj foldery według statusu subskrypcji",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Folders retrieved successfully",
            "headers": {
              "X-Page-Count": {
                "description": "Total number of pages",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Current": {
                "description": "Current page number",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Size": {
                "description": "Number of items on current page",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Item-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Folder"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Lornetka składana"
        ],
        "summary": "Utwórz folder",
        "description": "Utwórz nowy folder/skrzynkę pocztową IMAP. Ścieżka do folderu jest wymagana i może zawierać foldery nadrzędne (np. „SKRZYNKA ODBIORCZA/Podfolder”). Jeśli foldery nadrzędne nie istnieją, zostaną utworzone automatycznie.",
        "operationId": "createFolder",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FolderInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Folder created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/folders/{id}": {
      "get": {
        "tags": [
          "Lornetka składana"
        ],
        "summary": "Pobierz folder",
        "description": "Pobierz konkretny folder według jego identyfikatora lub ścieżki. Jako identyfikatora możesz użyć identyfikatora obiektu folderu lub jego pełnej ścieżki (np. „SKRZYNKA ODBIORCZA/Podfolder”).",
        "operationId": "retrieveFolder",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/folderId"
          }
        ],
        "responses": {
          "200": {
            "description": "Folder retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Lornetka składana"
        ],
        "summary": "Aktualizuj folder",
        "description": "Zaktualizuj/zmień nazwę istniejącego folderu. Ta operacja zmienia nazwę folderu na nową ścieżkę określoną w treści żądania. Jako identyfikatora możesz użyć identyfikatora obiektu folderu lub jego bieżącej ścieżki.",
        "operationId": "updateFolder",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/folderId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FolderUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Folder updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Lornetka składana"
        ],
        "summary": "Usuń folder",
        "description": "Trwale usuń określony folder. Tej czynności nie można cofnąć, a wszystkie wiadomości w folderze zostaną usunięte. Jako identyfikatora możesz użyć identyfikatora obiektu folderu lub jego ścieżki.",
        "operationId": "deleteFolder",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/folderId"
          }
        ],
        "responses": {
          "200": {
            "description": "Folder deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/messages": {
      "get": {
        "tags": [
          "Wiadomości"
        ],
        "summary": "Wyświetlanie listy i wyszukiwanie wiadomości",
        "description": "Pobierz listę wiadomości z zaawansowanymi funkcjami wyszukiwania i filtrowania. Ten punkt końcowy obsługuje paginację i kompleksowe wyszukiwanie w treści wiadomości, nagłówkach, flagach i metadanych. Możesz wyszukiwać według folderu, flag, treści, nagłówków, zakresów dat, rozmiaru i innych kryteriów.",
        "operationId": "listMessages",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "name": "folder",
            "in": "query",
            "description": "Filtruj wiadomości według ścieżki folderu",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_unread",
            "in": "query",
            "description": "Filtruj według statusu odczytu",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_flagged",
            "in": "query",
            "description": "Filtruj według oznaczonego statusu",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_deleted",
            "in": "query",
            "description": "Filtruj według statusu usunięcia",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_draft",
            "in": "query",
            "description": "Filtruj według statusu roboczego",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_junk",
            "in": "query",
            "description": "Filtruj według statusu niechcianej/spamu",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_copied",
            "in": "query",
            "description": "Filtruj według skopiowanego statusu",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_searchable",
            "in": "query",
            "description": "Filtruj według wyszukiwalnego statusu",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_expired",
            "in": "query",
            "description": "Filtruj według statusu wygasłego",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "has_attachments",
            "in": "query",
            "description": "Filtruj według obecności załącznika",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "has_attachment",
            "in": "query",
            "description": "Filtruj według obecności załącznika (alias dla has_attachments)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "subject",
            "in": "query",
            "description": "Szukaj w temacie wiadomości",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "query",
            "description": "Szukaj w treści/tekście wiadomości",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "text",
            "in": "query",
            "description": "Szukaj w tekście wiadomości (alias treści)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "headers",
            "in": "query",
            "description": "Szukaj we wszystkich nagłówkach wiadomości",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "message_id",
            "in": "query",
            "description": "Wyszukaj według nagłówka Message-ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Ogólne wyszukiwanie w nagłówkach i tekście",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Wyszukiwanie ogólne (alias wyszukiwania)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "since",
            "in": "query",
            "description": "Filtruj wiadomości od tej daty (format ISO 8601)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Filtruj wiadomości sprzed tej daty (format ISO 8601)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "min_size",
            "in": "query",
            "description": "Filtruj wiadomości o minimalnym rozmiarze w bajtach",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "max_size",
            "in": "query",
            "description": "Filtruj wiadomości o maksymalnym rozmiarze w bajtach",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Szukaj według nagłówka Od",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Szukaj według Do nagłówka",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cc",
            "in": "query",
            "description": "Wyszukaj według nagłówka CC",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bcc",
            "in": "query",
            "description": "Szukaj według nagłówka UDW",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Szukaj według nagłówka daty",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reply-to",
            "in": "query",
            "description": "Szukaj według nagłówka „Odpowiedz do”",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Messages retrieved successfully",
            "headers": {
              "X-Page-Count": {
                "description": "Total number of pages",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Current": {
                "description": "Current page number",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Size": {
                "description": "Number of items on current page",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Item-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Wiadomości"
        ],
        "summary": "Utwórz wiadomość",
        "description": "Utwórz/dołącz nową wiadomość do folderu. Ten punkt końcowy akceptuje standardowy format wiadomości Nodemailer i pozwala określić folder docelowy oraz flagi początkowe. Jeśli folder docelowy nie istnieje, zostanie utworzony automatycznie.",
        "operationId": "createMessage",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Message created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/messages/{id}": {
      "get": {
        "tags": [
          "Wiadomości"
        ],
        "summary": "Pobierz wiadomość",
        "description": "Pobierz konkretną wiadomość według jej identyfikatora. Domyślnie odpowiedź zawiera sparsowany obiekt Nodemailer i nieprzetworzoną treść wiadomości. Możesz kontrolować, co zostanie uwzględnione, za pomocą parametrów zapytania.",
        "operationId": "retrieveMessage",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/messageId"
          },
          {
            "name": "eml",
            "in": "query",
            "description": "Zwróć surowy format EML zamiast JSON",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "nodemailer",
            "in": "query",
            "description": "Dołącz sparsowany obiekt Nodemailer",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "attachments",
            "in": "query",
            "description": "Dołącz załączniki do obiektu Nodemailer",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "raw",
            "in": "query",
            "description": "Dołącz surową treść wiadomości",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Message retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              },
              "message/rfc822": {
                "description": "Raw EML format (when ?eml=true)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Wiadomości"
        ],
        "summary": "Aktualizuj wiadomość",
        "description": "Zaktualizuj istniejącą wiadomość. Możesz zmodyfikować flagi wiadomości lub przenieść ją do innego folderu. Jeśli folder docelowy nie istnieje, zostanie utworzony automatycznie.",
        "operationId": "updateMessage",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/messageId"
          },
          {
            "name": "eml",
            "in": "query",
            "description": "Zwróć surowy format EML zamiast JSON",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              },
              "message/rfc822": {
                "description": "Raw EML format (when ?eml=true)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Wiadomości"
        ],
        "summary": "Usuń wiadomość",
        "description": "Trwałe usunięcie konkretnej wiadomości. Tej czynności nie można cofnąć i spowoduje ona trwałe usunięcie wiadomości z pamięci. W przeciwieństwie do klientów IMAP, które zazwyczaj przenoszą wiadomości do Kosza, ten punkt końcowy wykonuje trwałe usunięcie.",
        "operationId": "deleteMessage",
        "security": [
          {
            "AliasAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/messageId"
          }
        ],
        "responses": {
          "200": {
            "description": "Message deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/logs/download": {
      "get": {
        "summary": "Pobierz dzienniki",
        "description": "**Pobieranie logów**\n\nOpis: Nasze API programowo umożliwia pobieranie logów dla Twojego konta. Wysłanie żądania do tego punktu końcowego spowoduje przetworzenie wszystkich logów dla Twojego konta i przesłanie ich e-mailem w postaci załącznika (skompresowanego pliku arkusza kalkulacyjnego CSV w formacie Gzip) po zakończeniu.\n\nUmożliwia to tworzenie zadań w tle za pomocą zadania Cron lub za pomocą oprogramowania Bree do planowania zadań Node.js, aby otrzymywać logi w dowolnym momencie. Należy pamiętać, że ten punkt końcowy jest ograniczony do `10` żądań dziennie.\n\nZałącznik to `email-deliverability-logs-RRRR-MM-DD-h-mm-A-z.csv.gz` (pisane małymi literami), a sama wiadomość e-mail zawiera krótkie podsumowanie pobranych logów.",
        "tags": [
          "Dzienniki"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "domain",
            "in": "query",
            "description": "Filtruj logi według w pełni kwalifikowanej domeny („FQDN”). Jeśli nie zostanie podany, zostaną pobrane wszystkie logi ze wszystkich domen.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Przeszukaj logi według adresu e-mail, domeny, nazwy aliasu, adresu IP lub daty (format M/R, M/D/RR, M-D, M-D-RR lub M.D.RR).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bounce_category",
            "in": "query",
            "description": "Wyszukaj dzienniki według określonej kategorii odrzuceń (np. „lista blokowanych wiadomości”).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "response_code",
            "in": "query",
            "description": "Przeszukaj dzienniki według określonego kodu odpowiedzi na błąd (np. 421 lub 550).",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Logs will be emailed as an attachment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Logs will be emailed to you shortly"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/v1/emails": {
      "get": {
        "summary": "Wyświetl listę wiadomości e-mail SMTP wychodzących",
        "description": "**Wyświetl listę wychodzących wiadomości e-mail SMTP**\n\nNależy pamiętać, że ten punkt końcowy nie zwraca wartości właściwości „message”, „headers” ani „rejectedErrors” wiadomości e-mail.\n\nAby zwrócić te właściwości i ich wartości, należy użyć punktu końcowego [Retrieve email](https://github.com/forwardemail/forwardemail.net/blob/master/app/views/api/index.md#retrieve-email) z identyfikatorem e-mail.",
        "tags": [
          "E-maile"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Wyszukaj wiadomości e-mail według metadanych.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "domain",
            "in": "query",
            "description": "Wyszukaj wiadomości e-mail według nazwy domeny.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sortuj według konkretnego pola (prefiks z pojedynczym myślnikiem – sortowanie w odwrotnym kierunku niż w przypadku danego pola). Domyślnie created_at, jeśli nie jest ustawione.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Więcej informacji znajdziesz w sekcji Paginacja.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Więcej informacji znajdziesz w sekcji Paginacja.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of outbound SMTP emails",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Email"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "summary": "Utwórz wychodzącą pocztę e-mail SMTP",
        "description": "Nasze API do tworzenia wiadomości e-mail jest inspirowane i wykorzystuje konfigurację opcji wiadomości Nodemailer. Prosimy o zapoznanie się z [konfiguracją wiadomości Nodemailer](https://nodemailer.com/message/) dla wszystkich poniższych parametrów treści.\n\nPamiętaj, że z wyjątkiem `envelope` i `dkim` (ponieważ ustawiamy je automatycznie), obsługujemy wszystkie opcje Nodemailer. Ze względów bezpieczeństwa automatycznie ustawiamy opcje `disableFileAccess` i `disableUrlAccess` na `true`.\n\nNależy przekazać pojedynczą opcję `raw` wraz z pełną treścią wiadomości e-mail, w tym nagłówkami, lub przekazać poniższe opcje parametrów treści.\n\nTen punkt końcowy API automatycznie zakoduje emotikony, jeśli zostaną znalezione w nagłówkach (np. temat wiadomości `Subject: 🤓 Hello` zostanie automatycznie przekonwertowany na `Subject: =?UTF-8?Q?=F0=9F=A4=93?= Hello`). Naszym celem było stworzenie niezwykle przyjaznego dla programistów i odpornego na błędy interfejsu API poczty e-mail.",
        "tags": [
          "E-maile"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SMTP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email sent successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/emails/limit": {
      "get": {
        "summary": "Uzyskaj limit poczty wychodzącej SMTP",
        "description": "Jest to prosty punkt końcowy, który zwraca obiekt JSON zawierający wartości `count` i `limit` określające liczbę dziennych wiadomości wychodzących SMTP dla każdego konta.",
        "tags": [
          "E-maile"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Email limit information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailLimit"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/emails/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/emailId"
        }
      ],
      "get": {
        "summary": "Pobierz wychodzącą pocztę SMTP",
        "description": "Pobierz konkretną wiadomość e-mail SMTP.",
        "tags": [
          "E-maile"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Email retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Usuń wychodzącą pocztę SMTP",
        "description": "Usunięcie wiadomości e-mail spowoduje ustawienie statusu na „odrzucono” (i nieprzetworzenie jej w kolejce) tylko wtedy, gdy aktualny status to „oczekujący”, „w kolejce” lub „odroczony”. Możemy automatycznie usuwać wiadomości e-mail po 30 dniach od ich utworzenia i/lub wysłania – dlatego należy zachować kopię wychodzących wiadomości SMTP w kliencie, bazie danych lub aplikacji. W razie potrzeby można odwołać się do wartości identyfikatora wiadomości e-mail w bazie danych – wartość ta jest zwracana zarówno z punktów końcowych [Utwórz wiadomość e-mail](https://github.com/forwardemail/forwardemail.net/blob/master/app/views/api/index.md#create-email), jak i [Pobierz wiadomość e-mail](https://github.com/forwardemail/forwardemail.net/blob/master/app/views/api/index.md#retrieve-email).",
        "tags": [
          "E-maile"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Email deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains": {
      "get": {
        "summary": "Wyświetl domeny",
        "description": "> [!NOTE]\n>Od 1 listopada 2024 r. punkty końcowe API dla domen List i aliasów domen List będą domyślnie miały maksymalną liczbę wyników na stronę: ``1000``. Jeśli chcesz włączyć tę funkcję wcześniej, możesz przekazać `?paginate=true` jako dodatkowy parametr ciągu zapytania do adresu URL zapytania punktu końcowego. Więcej informacji znajdziesz w sekcji Paginacja.",
        "tags": [
          "Domeny"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Wyszukaj domeny według metadanych.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "domain",
            "in": "query",
            "description": "Wyszukaj domeny według nazwy domeny.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sortuj według konkretnego pola (prefiks z pojedynczym myślnikiem – sortowanie w odwrotnym kierunku niż pole). Domyślnie created_at, jeśli nie jest ustawione.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Więcej informacji znajdziesz w sekcji Paginacja.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Więcej informacji znajdziesz w sekcji Paginacja.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of domains",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "summary": "Utwórz domenę",
        "description": "Tworzy nową domenę w systemie. Ten punkt końcowy umożliwia rejestrację w pełni kwalifikowanej nazwy domeny (FQDN) lub adresu IP do użytku z platformą.\n\nOpcjonalne opcje konfiguracji obejmują przypisanie domeny do istniejącego zespołu, ustawienie typu planu (np. bezpłatny, rozszerzona ochrona lub zespół) oraz skonfigurowanie zaawansowanych zabezpieczeń, takich jak filtrowanie spamu, skanowanie antywirusowe i weryfikacja odbiorców. Można również skonfigurować, czy domyślnie ma być tworzony alias typu catch-all, ustawić niestandardowy adres URL webhooka dla błędów SMTP oraz zdefiniować limity przestrzeni dyskowej dla aliasów e-mail w tej domenie. Ten punkt końcowy przeprowadza walidację i provisioning na poziomie domeny. Jeśli opcja `ignore_mx_check` jest włączona, weryfikacja rekordów MX jest pomijana (zalecane tylko w przypadku zaawansowanych konfiguracji routingu). Odpowiedź będzie zawierała pełne informacje o utworzonym obiekcie domeny, w tym rekordy DNS potrzebne do konfiguracji.",
        "tags": [
          "Domeny"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDomainInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/v1/domains/{domain_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        }
      ],
      "get": {
        "summary": "Pobierz domenę",
        "description": "Pobierz określoną domenę",
        "tags": [
          "Domeny"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "Aktualizacja domeny",
        "description": "Zaktualizuj konkretną domenę.",
        "tags": [
          "Domeny"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDomainInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Usuń domenę",
        "description": "Usuń określoną domenę.",
        "tags": [
          "Domeny"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Domain deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/verify-records": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        }
      ],
      "get": {
        "summary": "Zweryfikuj rekordy domeny",
        "description": "Zweryfikuj rekordy DNS dla konkretnej domeny.",
        "tags": [
          "Domeny"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "DNS records successfully verified",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Domain's DNS records have been verified."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/verify-smtp": {
      "get": {
        "summary": "Zweryfikuj rekordy SMTP domeny",
        "description": "Weryfikuje rekordy DNS związane z protokołem SMTP dla określonej domeny.",
        "operationId": "verifySmtpRecords",
        "tags": [
          "Domeny"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "description": "W pełni kwalifikowana nazwa domeny (FQDN) do weryfikacji",
            "schema": {
              "type": "string",
              "format": "hostname"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "SMTP records successfully verified",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "You have successfully configured and verified DNS records for outbound SMTP."
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/catch-all-passwords": {
      "post": {
        "summary": "Utwórz hasło uniwersalne dla całej domeny",
        "description": "Tworzy hasło uniwersalne dla całej domeny. Jeśli nie zostanie podane hasło, zostanie wygenerowane bezpieczne, losowe hasło.",
        "tags": [
          "Domeny"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Nazwa domeny, dla której chcesz utworzyć hasło zbiorcze"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "new_password": {
                    "type": "string",
                    "description": "Twoje nowe, niestandardowe hasło, które będzie używane jako hasło uniwersalne dla całej domeny. Pozostaw puste, aby wygenerować silne hasło."
                  },
                  "description": {
                    "type": "string",
                    "description": "Opis ma wyłącznie charakter organizacyjny."
                  }
                }
              },
              "example": {
                "new_password": "myCustomStrongPassword123!",
                "description": "Password for team-wide access"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created a catch-all password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of the created catch-all password"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the catch-all password"
                    }
                  },
                  "required": [
                    "id",
                    "description"
                  ]
                },
                "example": {
                  "id": "6841ec462bd583c73d0632dd",
                  "username": "*@quas.com",
                  "password": "6Yq14XhAUaupdZE",
                  "description": "foo bar"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Wyświetl listę haseł uniwersalnych dla całej domeny",
        "description": "Zwraca listę haseł uniwersalnych dla danej domeny, które są aktualnie skonfigurowane dla określonej domeny.",
        "operationId": "listCatchAllPasswords",
        "tags": [
          "Domeny"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "description": "W pełni kwalifikowana nazwa domeny (FQDN), dla której mają być wyświetlane hasła uniwersalne",
            "schema": {
              "type": "string",
              "format": "hostname"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of domain-wide catch-all passwords",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier for the item",
                        "example": "6841ec442bd583c73d0632d0"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the item",
                        "example": "foo bar"
                      }
                    },
                    "required": [
                      "id",
                      "description"
                    ]
                  },
                  "example": [
                    {
                      "id": "6841ec442bd583c73d0632d0",
                      "description": ""
                    },
                    {
                      "id": "6841ec462bd583c73d0632dd",
                      "description": "foo bar"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/catch-all-passwords/{token_id}": {
      "delete": {
        "summary": "Usuń hasło uniwersalne dla całej domeny",
        "description": "Usuwa hasło uniwersalne dla całej domeny przy użyciu podanego identyfikatora tokena.",
        "tags": [
          "Domeny"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Nazwa domeny powiązana z hasłem uniwersalnym"
          },
          {
            "name": "token_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Identyfikator tokena hasła uniwersalnego dla całej domeny, które ma zostać usunięte"
          }
        ],
        "responses": {
          "200": {
            "description": "Catch-all password successfully removed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Catch-all password deleted successfully."
                    }
                  },
                  "example": {
                    "id": "6841ec442bd583c73d0632d0",
                    "description": ""
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/invites": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        }
      ],
      "get": {
        "summary": "Zaakceptuj zaproszenie do domeny",
        "description": "Zaakceptuj zaproszenie do domeny.",
        "tags": [
          "Zaproszenia"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain invite accepted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invite accepted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "post": {
        "summary": "Utwórz zaproszenie do domeny",
        "description": ">[!IMPORTANT]\n>Jeśli zapraszany użytkownik jest już zaakceptowanym członkiem jakiejkolwiek innej domeny, do której należy zapraszający go administrator, zaproszenie zostanie automatycznie zaakceptowane i wiadomość e-mail nie zostanie wysłana.",
        "tags": [
          "Zaproszenia"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Adres e-mail, na który należy wysłać zaproszenie do listy członków domeny"
                  },
                  "group": {
                    "type": "string",
                    "format": "string",
                    "description": "Grupa, do której należy dodać użytkownika, aby był członkiem domeny (może to być jedna z grup: ``admin`` lub ``user``)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain invite created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invite"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      },
      "delete": {
        "summary": "Usuń zaproszenie do domeny",
        "description": "Usuń zaproszenie do domeny.",
        "tags": [
          "Zaproszenia"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Adres e-mail do usunięcia z listy członków domeny"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain invite removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invite removed successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/members/{member_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        },
        {
          "$ref": "#/components/parameters/memberId"
        }
      ],
      "put": {
        "summary": "Aktualizacja członka domeny",
        "description": "Zaktualizuj członka domeny.",
        "tags": [
          "Członkowie"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "group": {
                    "required": true,
                    "type": "string",
                    "description": "Grupa, do której ma zostać dodany użytkownik w celu aktualizacji członkostwa w domenie (może to być jedna z grup: ``admin`` lub ``user``)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain member updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Usuń członka domeny",
        "description": "Usuń członka domeny.",
        "tags": [
          "Członkowie"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain member removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Member removed successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/aliases/{alias_id}/generate-password": {
      "post": {
        "summary": "Wygeneruj hasło aliasu",
        "description": "Wygeneruj hasło dla aliasu. Jeśli nie podano `emailed_instructions`, odpowiedź będzie zawierać wygenerowaną nazwę użytkownika i hasło.",
        "tags": [
          "Pseudonimy"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "W pełni kwalifikowana nazwa domeny (FQDN)"
          },
          {
            "name": "alias_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unikalny identyfikator aliasu"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateAliasPasswordInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Alias credentials returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string",
                      "example": "alias@yourdomain.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "some-generated-password"
                    }
                  },
                  "required": [
                    "username",
                    "password"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/aliases": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        }
      ],
      "get": {
        "summary": "Wyświetl aliasy domen",
        "description": ">[!NOTE]\n>Od 1 listopada 2024 r. punkty końcowe API dla funkcji „Lista domen” i „Lista aliasów domen” będą domyślnie miały maksymalną liczbę wyników na stronę: ``1000``. Jeśli chcesz włączyć tę funkcję wcześniej, możesz przekazać `?paginate=true` jako dodatkowy parametr ciągu zapytania do adresu URL zapytania punktu końcowego. Więcej informacji znajdziesz w sekcji Paginacja.",
        "tags": [
          "Pseudonimy"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Wyszukiwanie aliasów w domenie według nazwy, etykiety lub odbiorcy (obsługa wyrażeń regularnych)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Wyszukiwanie aliasów w domenie według nazwy (obsługa wyrażeń regularnych)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipient",
            "in": "query",
            "description": "Wyszukiwanie aliasów w domenie według odbiorcy (obsługa wyrażeń regularnych)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sortuj według konkretnego pola (prefiks z pojedynczym myślnikiem – sortowanie w odwrotnej kolejności). Domyślnie created_at.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "List of domain aliases",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Alias"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "post": {
        "summary": "Utwórz nowy alias domeny",
        "description": "Utwórz nowy alias dla określonej domeny.",
        "tags": [
          "Pseudonimy"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AliasInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain alias created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alias"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/v1/domains/{domain_id}/aliases/{alias_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/domainId"
        },
        {
          "$ref": "#/components/parameters/aliasId"
        }
      ],
      "get": {
        "summary": "Pobierz alias domeny",
        "description": "Pobierz konkretny alias dla domeny.",
        "tags": [
          "Pseudonimy"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain alias retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alias"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "Zaktualizuj alias domeny",
        "description": "Zaktualizuj konkretny alias dla domeny.",
        "tags": [
          "Pseudonimy"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AliasUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain alias updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alias"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          },
          "401": {
            "$ref": "#/components/responses/Error"
          },
          "403": {
            "$ref": "#/components/responses/Error"
          },
          "404": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "summary": "Usuń alias domeny",
        "description": "Usuń konkretny alias dla domeny.",
        "tags": [
          "Pseudonimy"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Domain alias deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Alias deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/encrypt": {
      "post": {
        "summary": "Szyfruj rekord TXT",
        "description": "Umożliwiamy szyfrowanie rekordów nawet w ramach darmowego planu, bez żadnych kosztów. Prywatność nie powinna być funkcją, lecz integralną częścią wszystkich aspektów produktu. Zgodnie z gorącymi prośbami w [dyskusji na temat przewodników po prywatności](https://discuss.privacyguides.net/t/forward-email-email-provider/13370) oraz w naszych [problemach na GitHubie](https://github.com/forwardemail/forwardemail.net/issues/254) dodaliśmy tę opcję.",
        "tags": [
          "Szyfruj"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "text"
                ],
                "properties": {
                  "input": {
                    "required": true,
                    "type": "string",
                    "description": "Dowolny prawidłowy rekord TXT w postaci zwykłego tekstu do przekazania wiadomości e-mail"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Text encrypted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "encrypted": {
                      "type": "string",
                      "description": "Encrypted text"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          },
          "401": {
            "$ref": "#/components/responses/Error"
          },
          "429": {
            "description": "Rate limit exceeded (50 requests for 'encrypt')",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Konto",
      "description": "Punkty końcowe zarządzania kontami"
    },
    {
      "name": "Dzienniki",
      "description": "Punkty końcowe zarządzania logami"
    },
    {
      "name": "E-maile",
      "description": "Punkty końcowe zarządzania pocztą e-mail"
    },
    {
      "name": "Domeny",
      "description": "> [!TIP]\n> Punkty końcowe domeny z nazwą domeny <code>/v1/domains/:domena\\_nazwa</code> jako punktem końcowym są wymienne z identyfikatorem domeny <code>:domena\\_id</code>. Oznacza to, że można odwołać się do domeny za pomocą jej wartości <code>nazwa</code> lub <code>id</code>."
    },
    {
      "name": "Zaproszenia",
      "description": "Punkty końcowe zarządzania zaproszeniami do domeny"
    },
    {
      "name": "Członkowie",
      "description": "Punkty końcowe zarządzania członkami domeny"
    },
    {
      "name": "Pseudonimy",
      "description": "Punkty końcowe zarządzania aliasami domen"
    },
    {
      "name": "Szyfruj",
      "description": "Punkty końcowe szyfrowania"
    },
    {
      "name": "Łączność",
      "description": "Punkty końcowe zarządzania kontaktami aliasów (CardDAV)\n\n>[!NOTE]\n>W przeciwieństwie do innych punktów końcowych API, te wymagają uwierzytelniania „nazwa użytkownika” równej nazwie użytkownika aliasu i „hasło” równemu hasłu wygenerowanemu przez alias jako nagłówków autoryzacji podstawowej.\n\n>[!TIP]\n>Te punkty końcowe zapewniają pełne operacje CRUD do zarządzania kontaktami z obsługą vCard, w tym tworzenie, pobieranie, aktualizowanie i usuwanie kontaktów. Można dostarczyć bezpośrednio zawartość vCard lub poszczególne pola kontaktów, które zostaną przekonwertowane do formatu vCard."
    },
    {
      "name": "Kalendarze",
      "description": "Punkty końcowe zarządzania kalendarzami aliasów (CalDAV)\n\n>[!NOTE]\n> W przeciwieństwie do innych punktów końcowych API, te wymagają [Authentication](#description/authentication) „username” równej nazwie użytkownika aliasu i „password” równemu hasłu wygenerowanemu przez alias jako nagłówków Basic Authorization.\n\n>[!TIP]\n> Te punkty końcowe zapewniają pełne zarządzanie kalendarzami z obsługą stref czasowych i kolorów, w tym tworzenie, pobieranie, aktualizowanie i usuwanie kalendarzy. Nazwy kalendarzy są wymagane, natomiast inne właściwości, takie jak kolor, strefa czasowa i opis, są opcjonalne."
    },
    {
      "name": "Wiadomości",
      "description": "Punkty końcowe zarządzania wiadomościami aliasów (IMAP/POP3)\n\n>[!NOTE]\n> W przeciwieństwie do innych punktów końcowych API, te wymagają [Uwierzytelniania](#description/authentication) „nazwy użytkownika” równej nazwie użytkownika aliasu i „hasła” równego hasłu wygenerowanemu przez alias jako nagłówków autoryzacji podstawowej.\n\n>[!TIP]\n> Te punkty końcowe zapewniają kompleksowe zarządzanie wiadomościami z zaawansowanymi funkcjami wyszukiwania. Można wyszukiwać według folderu, flag, treści, nagłówków, zakresów dat, rozmiaru i innych. Wiadomości można tworzyć w standardowym formacie Nodemailer i obsługują one przenoszenie między folderami oraz zarządzanie flagami.\n\nUpewnij się, że postępowałeś zgodnie z instrukcjami konfiguracji dla swojej domeny.\nInstrukcje te znajdziesz w sekcji FAQ [Czy obsługujesz odbieranie wiadomości e-mail za pomocą IMAP?](/faq#do-you-support-receiving-email-with-imap)."
    },
    {
      "name": "Lornetka składana",
      "description": "Punkty końcowe zarządzania folderami aliasów (IMAP/POP3)\n\n>[!TIP]\n> Punkty końcowe folderów ze ścieżką <code>/v1/folders/:path</code> jako punktem końcowym są wymienne z identyfikatorem folderu <code>:id</code>. Oznacza to, że można odwołać się do folderu za pomocą wartości <code>path</code> lub <code>id</code>.\n\n>[!NOTE]\n> W przeciwieństwie do innych punktów końcowych API, wymagają one [Authentication](#description/authentication) „username” równej nazwie użytkownika aliasu i „password” równemu hasłu wygenerowanemu przez alias jako nagłówków Basic Authorization.\n\n>[!TIP]\n> Te punkty końcowe umożliwiają pełne zarządzanie folderami, w tym tworzenie, zmianę nazwy i usuwanie. Ścieżki folderów mogą obejmować foldery nadrzędne (np. „SKRZYNKA ODBIORCZA/Podfolder”). Foldery nadrzędne zostaną utworzone automatycznie, jeśli nie istnieją."
    }
  ]
}