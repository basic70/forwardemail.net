//- add opengraph tags to your structured data pages
//- integrity=manifest(`og${ctx.path}.png`, "integrity"),
- ogImage = ogImage || meta.image || `${config.urls.web}${ctx.path}${ctx.pathWithoutLocale === "/" ? "/index" : ""}.png?v=${config.env === "test" ? 0 : Date.now()}`;
link(rel="image_src", type="image/png", href=ogImage, crossorigin="anonymous")
meta(property="og:locale", content=locale)
meta(property="og:type", content="article")
meta(property="og:title", content=striptags(convert(meta.title)))
meta(property="og:description", content=striptags(convert(meta.description)))
meta(property="og:url", content=`${config.urls.web}${ctx.path}`)
meta(property="og:site_name", content=config.appName)
if ctx.pathWithoutLocale.startsWith('/faq')
  meta(property="article:section", content=t("Frequently Asked Questions"))
else if ctx.pathWithoutLocale.startsWith('/guides')
  meta(property="article:section", content=t("Guides"))
meta(property="og:image:alt", content=striptags(convert(meta.title)))
//-.
  if gif
    meta(property="og:image:type", content="image/gif")
    meta(property="og:image", content=manifest(`img/guides/${gif}.gif`))
    meta(property="og:image:secure_url", content=manifest(`img/guides/${gif}.gif`))
    meta(property="og:image:width", content="960")
    meta(property="og:image:height", content="540")
meta(property="og:image", content=ogImage)
meta(property="og:image:secure_url", content=ogImage)
//- meta(property="og:image:type", content="image/png")
//- meta(property="og:image:width", content="1200")
//- meta(property="og:image:height", content="630")

if ['/', '/resources', '/about', '/terms', '/about', '/faq', '/private-business-email', ...Object.keys(useCases)].includes(ctx.pathWithoutLocale) || ctx.pathWithoutLocale.startsWith('/blog/docs') || ctx.pathWithoutLocale.startsWith('/guides')
  //- in order for snapshots to be consistent we need the same date to be used
  meta(
    property="og:updated_time",
    content=config.env === "test" ? "2023-01-01T00:00:00.000Z" : publishedISOString ? publishedISOString : dayjs().startOf("day").toDate().toISOString()
  )
  meta(
    property="article:published_time",
    content=config.env === "test" ? "2023-01-01T00:00:00.000Z" : publishedISOString ? publishedISOString : dayjs().startOf("month").toDate().toISOString()
  )
  meta(
    property="article:modified_time",
    content=config.env === "test" ? "2023-01-01T00:00:00.000Z" : publishedISOString ? publishedISOString : dayjs().startOf("day").toDate().toISOString()
  )

if !video
  //- og video tag
  //- if ['/', '/private-business-email', ...Object.keys(useCases)].includes(ctx.pathWithoutLocale)
  //-   - video = "https://www.youtube.com/watch?v=N6zjv40zuIY";
  if ctx.pathWithoutLocale === "/guides/send-mail-as-gmail-custom-domain"
    //- gmail specific guide
    - video = "https://www.youtube.com/watch?v=MEheS8gM4Xs";
  else if ctx.pathWithoutLocale === "/guides/send-email-with-custom-domain-smtp"
    //- custom domain
    - video = "https://www.youtube.com/watch?v=MEheS8gM4Xs";
  // else if ctx.pathWithoutLocale.startsWith('/blog/docs')
  //   //- developers
  //   - video = "https://www.youtube.com/watch?v=1e9UyIoFu4Y";
  //- else if !ctx.pathWithoutLocale.startsWith('/guides') && isNotPrivateRoute
  //-   //- fallback with what is an alias video
  //-   - video = "https://www.youtube.com/watch?v=oWEVGMPXMbA";

if video
  meta(property="og:video", content=video)

meta(property="twitter:title", content=striptags(convert(meta.title)))
meta(
  property="twitter:description",
  content=striptags(convert(meta.description))
)
meta(property="twitter:image", content=ogImage)
if ctx.pathWithoutLocale !== '/' && ctx.pathWithoutLocale !== '/private-business-email' && !Object.keys(useCases).includes(ctx.pathWithoutLocale) && isNotPrivateRoute
  meta(name="twitter:label1", content=t("Written by"))
  meta(name="twitter:data1", content=config.appName + " " + t("Team"))
  meta(name="twitter:label2", content=t("Time to read"))
  meta(name="twitter:data2", content=t("Less than 5 minutes"))
