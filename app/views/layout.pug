//- Pug makes it DOCTYPE if we do this:
//- `doctype html`
!= "<!doctype html>"
- const isNotPrivateRoute = ["/my-account", "/admin", "/verify", "/denylist", "/forgot-password", "/reset-password", "/help", "/auth", "/register", config.loginOtpRoute, config.loginRoute, config.verifyRoute, config.otpRoutePrefix].every((s) => !ctx.pathWithoutLocale.startsWith(s));
html.h-100.no-js(
  lang=locale,
  class=isBot(ctx.get("User-Agent")) ? "bot-detected" : "",
  dir=["ar", "he"].includes(locale) ? "rtl" : false
)
  head
    block meta
      include _meta
    block opengraph
      include _opengraph
    block fonts
      include _fonts
    block stylesheets
      if isBot(ctx.get('User-Agent'))
        if botCss
          style(nonce=nonce)!= botCss
        else
          link(
            rel="stylesheet",
            href=manifest("css/app-bot.css"),
            integrity=manifest("css/app-bot.css", "integrity"),
            fetchpriority="high",
            crossorigin="anonymous"
          )
      else
        if isPDF || ctx.path.endsWith(".pdf") || config.env === 'test'
          link(
            rel="stylesheet",
            href=`${config.urls.web}/css/app.css`,
            fetchpriority="high",
            crossorigin="anonymous"
          )
        else
          if appCss
            style(nonce=nonce, data-critical="true")!= appCss
          else
            link(
              rel="stylesheet",
              href=manifest("css/app.css"),
              integrity=manifest("css/app.css", "integrity"),
              fetchpriority="high",
              crossorigin="anonymous"
            )

    //-.
      script(crossorigin="anonymous", nonce=nonce).
        (function () {
          var script = document.createElement('script');
          script.src = 'https://unpkg.com/web-vitals@3/dist/web-vitals.iife.js';
          script.onload = function () {
            // When loading `web-vitals` using a classic script, all the public
            // methods can be found on the `webVitals` global namespace.
            webVitals.onCLS(console.log);
            webVitals.onFID(console.log);
            webVitals.onLCP(console.log);
          };
          document.head.appendChild(script);
        })();

  body.d-flex.flex-column.min-h-100.app(
    role="document",
    data-spy=hasSidebar ? "scroll" : false,
    data-target=hasSidebar ? "#sidebar-scrollspy" : false,
    data-offset=hasSidebar ? "80" : false,
    onload=isBot(ctx.get("User-Agent")) ? "if (typeof lazyload === 'function') { lazyload(); }" : false,
    data-ignore-hash-change=ctx.pathWithoutLocale === "/" ? true : false,
    class=(domain && domain.name && config.ubuntuTeamMapping && Object.keys(config.ubuntuTeamMapping).includes(domain.name)) || ["/ubuntu", "/kubuntu", "/lubuntu", "/edubuntu", "/ubuntu-studio"].includes(ctx.pathWithoutLocale) ? "ubuntu-font" : ""
  )
    - const isHelp = ctx.pathWithoutLocale && ctx.pathWithoutLocale === "/help";
    - const isRegisterOrLogin = ctx.pathWithoutLocale && ["/register", config.loginRoute].includes(ctx.pathWithoutLocale);

    //- spinner
    block spinner
      include spinner/spinner
    //- navigation
    block navigation
      include _nav

    //- body
    main.flex-grow-1.d-flex.flex-column.flex-grow-1(role="main")
      block body

    //- footer
    block footer
      include _footer

    //- chat
    if !isBot(ctx.get('User-Agent'))
      a.fixed-bottom.mb-2.mr-2.btn.btn-primary.rounded-lg.text-center.is-bot.no-js.d-print-none(
        href="https://matrix.to/#/#forwardemail:matrix.org",
        target="_blank",
        title=t("Chat with us"),
        aria-label=t("Chat with us"),
        rel="noopener noreferrer",
        data-toggle="tooltip",
        data-title=t("Chat with us"),
        data-placement="top",
        style="left: auto"
      )
        i.fa.fa-comment

    include _wikipedia

    //- scripts
    //- prettier-ignore
    block scripts
      if !isBot(ctx.get('User-Agent'))
        //- flash messaging (with koa-better-flash and sweetalert2)
        script(defer, nonce=nonce).
          window._types = {
            success: "#{ t('Success') }",
            error: "#{ t('Error') }",
            info: "#{ t('Info') }",
            warning: "#{ t('Warning') }",
            question: "#{ t('Question') }"
          };
        script(defer, nonce=nonce, data-ignore-hash-change)#flash-messages.
          window._messages = !{json(flash(), null, null)};

        //- set defaults for sweetalert2
        //- <https://github.com/limonte/sweetalert2/issues/763>
        script(defer, nonce=nonce).
          window._swalDefaults = {
            confirmButtonText: "#{ t('OK') }",
            cancelButtonText: "#{ t('Cancel') }",
            closeButtonAriaLabel: "#{ t('Close this dialog') }",
            reverseButtons: true,
          };

        //- set defaults for confirm prompt sweetalert2 modal
        script(defer, nonce=nonce).
          window._confirmPromptTitle = "#{ t('Are you sure?') }";
          window._confirmPromptHTML = "#{ t('Please confirm if you wish to continue.') }";

        //- set the locale to be used by front-end assets
        script(defer, nonce=nonce).
          window.LOCALE = "#{locale}";

        //- set the API endpoint to be used by front-end assets
        script(defer, nonce=nonce).
          window.API_URL = "#{config.urls.api}";

      //- set the user and API key to be used by CabinJS
      if config.env !== 'test' && !isBot(ctx.get('User-Agent'))
        //- set the user and API key to be used by CabinJS
        if user
          script(defer, nonce=nonce).
            window.USER = {
              id: "#{user.id}",
              name: "#{user[config.passport.fields.displayName]}",
              email: "#{user.email}",
            };
            window.API_TOKEN = "#{user[config.userFields.apiToken]}";
        else if ctx.sessionId
          script(defer, nonce=nonce).
            window.USER = {
              id: "#{ctx.sessionId}",
            };

      if isBot(ctx.get('User-Agent'))
        //- lazyload only support for bots
        if config.env === 'test'
          script(
            defer,
            src=`${config.urls.web}/js/lazyload.js`,
            crossorigin="anonymous"
          )
        else
          script(
            defer,
            src=manifest("js/lazyload.js"),
            integrity=manifest("js/lazyload.js", "integrity"),
            crossorigin="anonymous"
          )
      else
        //- build
        if config.env === 'test'
          script(
            defer,
            src=`${config.urls.web}/js/build.js`,
            crossorigin="anonymous",
            fetchpriority="low"
          )
        else
          script(
            defer,
            src=manifest("js/build.js"),
            integrity=manifest("js/build.js", "integrity"),
            crossorigin="anonymous",
            fetchpriority="low"
          )

        //- cloudflare turnstile (hidden from bots and admins)
        if config.turnstileEnabled && (!user || user.group !== 'admin')
          script(defer, nonce=nonce).
            window.TURNSTILE_RENDER_ERROR = "#{ t('Turnstile render error, please try again or contact us.') }";
            window.TURNSTILE_SITE_KEY = "#{ config.turnstileSiteKey }";
          script(defer, src='https://challenges.cloudflare.com/turnstile/v0/api.js?onload=onloadTurnstileCallback')
