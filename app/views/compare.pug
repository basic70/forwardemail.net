extends layout

mixin renderCard(alternative)
  .card.rounded-lg.position-relative.d-inline-block.mb-3.no-search
    .position-absolute.w-100.text-right.lead.d-none.d-xl-block
      if alternative.name === "Forward Email"
        span.badge.badge-success.mr-3.mt-3
          = emoji("star")
          = " "
          if isBot(ctx.get("User-Agent"))
            = t(_.sample(["Recommended", "Preferred", "Top Rated", "Suggested"]))
          else
            = t("Recommended")
      span.badge.mr-3.mt-3(
        class=alternative.oss === true ? "badge-success" : "badge-danger"
      )= alternative.oss === true ? t("Open-source") : t("Closed-source")
    - const str = t(`<span class="notranslate">%s</span> is <span class="notranslate">%s</span> email service.`, alternative.name, alternative.oss === true ? t("an open-source") : t("a closed-source"));
    .card-body
      h2.h5.card-title= alternative.name
      if alternative.name === "Forward Email"
        .d-block.d-xl-none.lead.mb-3
          span.badge.badge-success.mr-3
            = emoji("star")
            = " "
            if isBot(ctx.get("User-Agent"))
              = t(_.sample(["Recommended", "Preferred", "Top Rated", "Suggested"]))
            else
            = t("Recommended")
      p
        != str
        = " "
        if isBot(ctx.get("User-Agent"))
          = t(_.sample(["Its description from its website is:", "Their official description reads:", "Their website says:", "According to their website:"]))
          = " "
          = t(alternative.description)
        else
          != t('The official description from its website says, "<span class="notranslate">%s</span>".', t(alternative.description))
      .text-center
        a(
          href=manifest(alternative.img),
          target="_blank",
          data-toggle="lightbox",
          data-title=alternative.name,
          data-footer=t("Screenshot by Forward Email")
        )
          img.img-fluid.img-thumbnail.max-height-300px(
            loading="lazy",
            src=manifest(alternative.img),
            alt=striptags(str)
          )
      if alternative.screenshot
        .text-center.small.mt-3: a(
          href=alternative.screenshot,
          target="_blank",
          rel="noopener noreferrer"
        )
          if isBot(ctx.get("User-Agent"))
            = _.sample([t("Photograph by Forward Email"), t("Photo by Forward Email"), t("Screenshot by Forward Email")])
          else
            = t("Screenshot by Forward Email")
      else
        .small.text-center.mt-3
          small.text-muted
            if isBot(ctx.get("User-Agent"))
              = _.sample([t("Photograph by Forward Email"), t("Photo by Forward Email"), t("Screenshot by Forward Email")])
            else
              = t("Screenshot by Forward Email")
    .card-footer
      a.btn.btn-md.btn-dark.btn-block(
        href=alternative.website,
        target="_blank",
        rel="noopener noreferrer",
        title=striptags(t('<span class="notranslate">%s</span> <span class="notranslate">%s</span> Email Service', alternative.name))
      )
        span.text-uppercase.font-weight-bold.align-middle
          if isBot(ctx.get("User-Agent"))
            != _.sample([t("Visit Website"), t("Go to site"), t("Visit Website")])
          else
            != t("Visit Website")
        = " "
        i.fa.fa-external-link.align-middle

block append scripts
  script(
    defer,
    src=manifest("js/ekko-lightbox.js"),
    integrity=manifest("js/ekko-lightbox.js", "integrity"),
    crossorigin="anonymous"
  )
  if !isBot(ctx.get("User-Agent"))
    script(
      defer,
      src=manifest("js/bootstrap-table.js"),
      integrity=manifest("js/bootstrap-table.js", "integrity"),
      crossorigin="anonymous"
    )
    script(
      defer,
      src=manifest("js/bootstrap-table-sticky-header.js"),
      integrity=manifest("js/bootstrap-table-sticky-header.js", "integrity"),
      crossorigin="anonymous"
    )
    //-.
      //- there seems to be a bug where multiple-sort is not considering custom sort functions already existing and defined
      script(
        src="https://unpkg.com/bootstrap-table@1.22.2/dist/extensions/multiple-sort/bootstrap-table-multiple-sort.js"
      )
      //- there seems to be a bug where modal isn't hiding
      script(nonce=nonce)!= "$('table').on('multiple-sort.bs.table', function() { $('.modal').modal('hide'); });"
    script(nonce=nonce)!= "function totalCurrencySort(a, b) { a = a.substring(1).split('/')[0]; b = +b.substring(1).split('/')[0]; if (a > b) return 1; if (a < b) return -1; return 0; }"
    script(nonce=nonce)!= "function attachmentSort(a, b) { a = a.includes('MB') ? Number.parseFloat(a.split('MB')[0].trim()) : 0; b = b.includes('MB') ? Number.parseFloat(b.split('MB')[0].trim()) : 0; if (a > b) return 1; if (a < b) return -1; return 0; }"
    script(nonce=nonce)!= "function storageSort(a, b) { a = a.includes('GB') ? Number.parseInt(a.split('GB')[0].trim(), 10) : 0; b = b.includes('GB') ? Number.parseInt(b.split('GB')[0].trim(), 10) : 0; if (a > b) return 1; if (a < b) return -1; return 0; }"
    script(nonce=nonce)!= "function checkboxSort(a, b) { a = a === '❌' ? 0 : a === '✅' ? 1 : 0.5; b = b === '❌' ? 0 : b === '✅' ? 1 : 0.5; if (a > b) return 1; if (a < b) return -1; return 0; }"

block append stylesheets
  if !isBot(ctx.get("User-Agent"))
    link(
      rel="stylesheet",
      href=manifest("css/bootstrap-table.css"),
      integrity=manifest("css/bootstrap-table.css", "integrity"),
      crossorigin="anonymous"
    )
    link(
      rel="stylesheet",
      href=manifest("css/bootstrap-table-sticky-header.css"),
      integrity=manifest("css/bootstrap-table-sticky-header.css", "integrity"),
      crossorigin="anonymous"
    )
    style(nonce=nonce).
      .bootstrap-table .fixed-table-container .fixed-table-body {
        overflow: visible !important;
      }
      .bootstrap-table .fixed-table-container {
        overflow: visible !important;
      }

block body
  include _modal-storage

  - const sorted = config.alternatives ? _.sortBy(config.alternatives, "name") : [];

  if !isBot(ctx.get('User-Agent'))
    script(defer, nonce=nonce).
      window.addEventListener(
        "load",
        function load() {
          if (!window.jQuery) return setTimeout(load, 50);
          $(function () {
            $(document).on("click", '[data-toggle="lightbox"]', function (ev) {
              ev.preventDefault();
              $(this).ekkoLightbox();
            });
          });
        },
        false
      );

  if !isBot(ctx.get('User-Agent'))
    .fixed-bottom.text-center.d-print-none
      .bg-dark.p-2.border-top.border-themed
        ul.list-inline.mb-0
          li.list-inline-item
            a.btn.btn-sm.btn-light(href="#email-service-comparison")
              span.badge.badge-pill.mr-1.badge-primary
                i.fa.fa-table
              = t("Comparison")
          li.list-inline-item
            a.btn.btn-sm.btn-light(href="#email-service-screenshots")
              span.badge.badge-pill.mr-1.badge-success
                i.fa.fa-image
              = t("Screenshots")
        .mt-3.text-white.font-weight-bold.small.text-center(
          class=comparison ? "d-block d-md-none" : ""
        )
          = t("Scroll to the right to see entire table")
          = " "
          i.fa.fa-angle-double-right.align-middle

  .py-5
    .container
      .row
        .col-12
          .text-center
            h1!= meta.title
            p!= meta.description
            include _author
      .row.mt-3
        .col-12.text-center
          .alert.alert-success.small.text-center.mb-0.d-inline-block
            if alternativeTo && alternativeTo !== 'Forward Email'
              != t('We recommend <a href="%s" class="alert-link text-decoration-underline">Forward Email</a> as the best alternative to <span class="notranslate">%s</span>.', l("/"), alternativeTo)
            else if ctx.pathWithoutLocale === '/blog/best-transactional-email-service'
              != t('We recommend <a href="%s" class="alert-link text-decoration-underline">Forward Email</a> as the best transactional email service.', l("/"))
            else if ctx.pathWithoutLocale === '/blog/best-email-api-developer-service'
              != t('We recommend <a href="%s" class="alert-link text-decoration-underline">Forward Email</a> as the best email API service for developers.', l("/"))
            else if ctx.pathWithoutLocale === '/blog/best-email-spam-filtering-service'
              != t('We recommend <a href="%s" class="alert-link text-decoration-underline">Forward Email</a> as the best email spam filtering service.', l("/"))
            else if ctx.pathWithoutLocale === '/blog/best-open-source-email-service'
              != t('<a href="%s" class="alert-link text-decoration-underline">Forward Email</a> is the best and only 100% open-source email service.', l("/"))
            else if ctx.pathWithoutLocale === '/blog/best-private-email-service'
              != t('We recommend <a href="%s" class="alert-link text-decoration-underline">Forward Email</a> as the best private email service.', l("/"))
            else
              != t('We recommend <a href="%s" class="alert-link text-decoration-underline">Forward Email</a> as the best email service alternative.', l("/"))
      .row.no-search
        .col-12
          #email-service-comparison.text-center.py-3.py-md-5.mb-0
            h2
              if ctx.pathWithoutLocale === '/blog/best-transactional-email-service'
                = t("Transactional Email Comparison")
              else if ctx.pathWithoutLocale === '/blog/best-email-api-developer-service'
                = t("Email API Comparison")
              else if ctx.pathWithoutLocale === '/blog/best-email-spam-filtering-service'
                = t("Email Spam Filtering Service Comparison")
              else if ctx.pathWithoutLocale === '/blog/best-open-source-email-service'
                = t("Open-Source Email Service Comparison")
              else if ctx.pathWithoutLocale === '/blog/best-private-email-service'
                = t("Private Email Service Comparison")
              else
                = t("Email Service Comparison")
            if comparison
              small.text-uppercase.text-muted= t("20 facts in comparison")
          if comparison
            table.table.table-striped.table-hover.table-bordered.table-lg.mb-0.bg-white.bg-themed(
              data-toggle="table",
              data-sticky-header,
              data-sticky-header-offset-y="58.61"
            )
              thead.thead-dark
                tr
                  th.w-33.text-center.align-middle.font-weight-bold(
                    scope="col"
                  )= alternatives[0].name
                  th.w-33.text-center.align-middle(scope="col"): span.sr-only= t("vs.")
                  th.w-33.text-center.align-middle.font-weight-bold(
                    scope="col"
                  )= alternatives[1].name
              tbody
                tr
                  td.w-33.align-middle.text-center
                    h3.mb-1
                      a(
                        href=l(`/blog/best-${alternatives[0].slug}-alternative`),
                        target="_blank",
                        rel="noopener noreferrer",
                        title=isBot(ctx.get("User-Agent")) ? striptags(t('<span class="notranslate">%d</span> Best <span class="notranslate">%s</span> Alternatives in <span class="notranslate">%s</span>', config.alternatives.length - 1, alternatives[0].name, dayjs().format("YYYY"))) : false,
                        class=alternatives[0].name === "Forward Email" ? "text-themed font-weight-bold" : "text-themed"
                      )= alternatives[0].name
                    if alternatives[0].name === "Forward Email"
                      .lead.mb-3
                        span.badge.badge-success
                          = emoji("star")
                          = " "
                          if isBot(ctx.get("User-Agent"))
                            = t(_.sample(["Recommended", "Preferred", "Top Rated", "Suggested"]))
                          else
                            = t("Recommended")
                    .text-center.mb-3
                      a(
                        href=manifest(alternatives[0].img),
                        target="_blank",
                        data-toggle="lightbox",
                        data-title=alternatives[0].name,
                        data-footer=t("Screenshot by Forward Email")
                      )
                        img.img-fluid.img-thumbnail.max-height-300px(
                          loading="lazy",
                          src=manifest(alternatives[0].img),
                          alt=striptags(t(alternatives[0].description))
                        )
                    //- Description
                    blockquote.mb-3
                      = '"'
                      = t(alternatives[0].description)
                      = '"'
                    ul.list-inline.mb-1
                      li.list-inline-item.mb-1
                        //- Website
                        a.btn.btn-dark.btn-sm.text-nowrap(
                          href=alternatives[0].website,
                          target="_blank",
                          rel="noopener noreferrer"
                        )
                          i.fa.fa-external-link
                          = " "
                          = t("Website")
                      if !isBot(ctx.get("User-Agent")) && sorted.length > 0
                        li.list-inline-item.mb-1
                          button.btn.btn-sm.btn-dark.dropdown-toggle(
                            type="button",
                            data-toggle="dropdown",
                            data-boundary="scrollParent",
                            aria-haspopup="true",
                            aria-expanded="false"
                          )
                            i.fa.fa-balance-scale
                            = " "
                            = t("Compare with...")
                          .dropdown-menu.dropdown-menu-right.small
                            .card-columns.small
                              each a in sorted
                                if a.name !== alternatives[0].name
                                  a.dropdown-item(
                                    href=l(`/blog/${alternatives[0].slug}-vs-${a.slug}-email-service-comparison`)
                                  )= a.name
                    //- Badges
                    ul.list-unstyled
                      //- Hardenize
                      li.mb-1
                        a(
                          aria-label=t("Hardenize Test"),
                          href=alternatives[0].hardenize_href,
                          target="_blank",
                          rel="noopener noreferrer"
                        )
                          img(
                            loading="lazy",
                            alt=t("Hardenize Test"),
                            width=128,
                            height=20,
                            src=`https://img.shields.io/badge/Hardenize_Test-${alternatives[0].hardenize_pass ? "Pass" : "Fail"}-${alternatives[0].hardenize_pass ? "green" : "red"}`
                          )

                      //- Internet.nl Site
                      li.mb-1
                        a(
                          aria-label=t("Internet.nl Site Test"),
                          href=alternatives[0].internetnl_site_href,
                          target="_blank",
                          rel="noopener noreferrer"
                        )
                          - let color1a = "red";
                          if (alternatives[0].internetnl_site_value >= 90)
                            - color1a = "green";
                          else if (alternatives[0].internetnl_site_value >= 80)
                            - color1a = "orange";
                          img(
                            loading="lazy",
                            alt=t("Internet.nl Site Test"),
                            width=170,
                            height=20,
                            src=`https://img.shields.io/badge/Internet.nl_Site_Test-${alternatives[0].internetnl_site_value}/100-${color1a}`
                          )

                      //- Internet.nl Mail
                      li.mb-1
                        a(
                          aria-label=t("Internet.nl Mail Test"),
                          href=alternatives[0].internetnl_mail_href,
                          target="_blank",
                          rel="noopener noreferrer"
                        )
                          - let color2a = "red";
                          if (alternatives[0].internetnl_mail_value >= 90)
                            - color2a = "green";
                          else if (alternatives[0].internetnl_mail_value >= 80)
                            - color2a = "orange";
                          img(
                            loading="lazy",
                            alt=t("Internet.nl Mail Test"),
                            width=172,
                            height=20,
                            src=`https://img.shields.io/badge/Internet.nl_Mail_Test-${alternatives[0].internetnl_mail_value}/100-${color2a}`
                          )

                      //- Mozilla Observatory
                      li.mb-1
                        a(
                          href=`https://observatory.mozilla.org/analyze/${alternatives[0].root_domain}`,
                          aria-label=t("Mozilla HTTP Observatory Grade"),
                          target="_blank",
                          rel="noopener noreferrer"
                        )
                          img(
                            loading="lazy",
                            alt=t("Mozilla HTTP Observatory Grade"),
                            src=`https://img.shields.io/mozilla-observatory/grade-score/${alternatives[0].root_domain}`,
                            width=162,
                            height=20
                          )
                      //- Qualys SSL Labs
                      li
                        a(
                          aria-label=t("Qualys SSL Labs SSL Server Test"),
                          href=`https://www.ssllabs.com/ssltest/analyze.html?d=${alternatives[0].root_domain}&latest`,
                          target="_blank",
                          rel="noopener noreferrer"
                        )
                          - let colora = "red";
                          if alternatives[0].ssl_labs === 'A+'
                            - colora = "green";
                          else if alternatives[0].ssl_labs.startsWith('A')
                            - colora = "blue";
                          else if alternatives[0].ssl_labs.startsWith('B')
                            - colora = "orange";
                          img(
                            loading="lazy",
                            alt=t("Qualys SSL Labs SSL Server Test"),
                            src=`https://img.shields.io/badge/Qualys_SSL_Labs-${alternatives[0].ssl_labs}_Grade-${colora}`,
                            width=164,
                            height=20
                          )
                  th.align-middle.text-center.h2(scope="row")= t("vs.")
                  td.w-33.align-middle.text-center
                    h3.mb-1
                      a(
                        href=l(`/blog/best-${alternatives[1].slug}-alternative`),
                        target="_blank",
                        rel="noopener noreferrer",
                        title=isBot(ctx.get("User-Agent")) ? striptags(t('<span class="notranslate">%d</span> Best <span class="notranslate">%s</span> Alternatives in <span class="notranslate">%s</span>', config.alternatives.length - 1, alternatives[1].name, dayjs().format("YYYY"))) : false,
                        class=alternatives[1].name === "Forward Email" ? "text-themed font-weight-bold" : "text-themed"
                      )= alternatives[1].name
                    if alternatives[1].name === "Forward Email"
                      .lead.mb-3
                        span.badge.badge-success
                          = emoji("star")
                          = " "
                          if isBot(ctx.get("User-Agent"))
                            = t(_.sample(["Recommended", "Preferred", "Top Rated", "Suggested"]))
                          else
                            = t("Recommended")
                    .text-center.mb-3
                      a(
                        href=manifest(alternatives[1].img),
                        target="_blank",
                        data-toggle="lightbox",
                        data-title=alternatives[1].name,
                        data-footer=t("Screenshot by Forward Email")
                      )
                        img.img-fluid.img-thumbnail.max-height-300px(
                          loading="lazy",
                          src=manifest(alternatives[1].img),
                          alt=striptags(t(alternatives[1].description))
                        )
                    //- Description
                    blockquote.mb-3
                      = '"'
                      = t(alternatives[1].description)
                      = '"'
                    ul.list-inline.mb-1
                      li.list-inline-item.mb-1
                        //- Website
                        a.btn.btn-dark.btn-sm.text-nowrap(
                          href=alternatives[1].website,
                          target="_blank",
                          rel="noopener noreferrer"
                        )
                          i.fa.fa-external-link
                          = " "
                          = t("Website")
                      if !isBot(ctx.get("User-Agent")) && sorted.length > 0
                        li.list-inline-item.mb-1
                          button.btn.btn-sm.btn-dark.dropdown-toggle(
                            type="button",
                            data-toggle="dropdown",
                            data-boundary="scrollParent",
                            aria-haspopup="true",
                            aria-expanded="false"
                          )
                            i.fa.fa-balance-scale
                            = " "
                            = t("Compare with...")
                          .dropdown-menu.dropdown-menu-right.small
                            .card-columns.small
                              each a in sorted
                                if a.name !== alternatives[1].name
                                  a.dropdown-item(
                                    href=l(`/blog/${alternatives[1].slug}-vs-${a.slug}-email-service-comparison`)
                                  )= a.name
                    //- Badges
                    ul.list-unstyled
                      //- Hardenize
                      li.mb-1
                        a(
                          aria-label=t("Hardenize Test"),
                          href=alternatives[1].hardenize_href,
                          target="_blank",
                          rel="noopener noreferrer"
                        )
                          img(
                            loading="lazy",
                            alt=t("Hardenize Test"),
                            width=128,
                            height=20,
                            src=`https://img.shields.io/badge/Hardenize_Test-${alternatives[1].hardenize_pass ? "Pass" : "Fail"}-${alternatives[1].hardenize_pass ? "green" : "red"}`
                          )

                      //- Internet.nl Site
                      li.mb-1
                        a(
                          aria-label=t("Internet.nl Site Test"),
                          href=alternatives[1].internetnl_site_href,
                          target="_blank",
                          rel="noopener noreferrer"
                        )
                          - let color1 = "red";
                          if (alternatives[1].internetnl_site_value >= 90)
                            - color1 = "green";
                          else if (alternatives[1].internetnl_site_value >= 80)
                            - color1 = "orange";
                          img(
                            loading="lazy",
                            alt=t("Internet.nl Site Test"),
                            width=170,
                            height=20,
                            src=`https://img.shields.io/badge/Internet.nl_Site_Test-${alternatives[1].internetnl_site_value}/100-${color1}`
                          )

                      //- Internet.nl Mail
                      li.mb-1
                        a(
                          aria-label=t("Internet.nl Mail Test"),
                          href=alternatives[1].internetnl_mail_href,
                          target="_blank",
                          rel="noopener noreferrer"
                        )
                          - let color2 = "red";
                          if (alternatives[1].internetnl_mail_value >= 90)
                            - color2 = "green";
                          else if (alternatives[1].internetnl_mail_value >= 80)
                            - color2 = "orange";
                          img(
                            loading="lazy",
                            alt=t("Internet.nl Mail Test"),
                            width=172,
                            height=20,
                            src=`https://img.shields.io/badge/Internet.nl_Mail_Test-${alternatives[1].internetnl_mail_value}/100-${color2}`
                          )

                      //- Mozilla Observatory
                      li.mb-1
                        a(
                          href=`https://observatory.mozilla.org/analyze/${alternatives[1].root_domain}`,
                          aria-label=t("Mozilla HTTP Observatory Grade"),
                          target="_blank",
                          rel="noopener noreferrer"
                        )
                          img(
                            loading="lazy",
                            alt=t("Mozilla HTTP Observatory Grade"),
                            src=`https://img.shields.io/mozilla-observatory/grade-score/${alternatives[1].root_domain}`,
                            width=162,
                            height=20
                          )
                      //- Qualys SSL Labs
                      li
                        a(
                          aria-label=t("Qualys SSL Labs SSL Server Test"),
                          href=`https://www.ssllabs.com/ssltest/analyze.html?d=${alternatives[1].root_domain}&latest`,
                          target="_blank",
                          rel="noopener noreferrer"
                        )
                          - let color = "red";
                          if alternatives[1].ssl_labs === 'A+'
                            - color = "green";
                          else if alternatives[1].ssl_labs.startsWith('A')
                            - color = "blue";
                          else if alternatives[1].ssl_labs.startsWith('B')
                            - color = "orange";
                          img(
                            loading="lazy",
                            alt=t("Qualys SSL Labs SSL Server Test"),
                            src=`https://img.shields.io/badge/Qualys_SSL_Labs-${alternatives[1].ssl_labs}_Grade-${color}`,
                            width=164,
                            height=20
                          )
                tr
                  td.w-33.align-middle.text-center!= alternatives[0].pricing
                  th.align-middle.text-center(scope="row")= t("Pricing")
                  td.w-33.align-middle.text-center!= alternatives[1].pricing
                tr
                  td.w-33.align-middle.text-center
                    if alternatives[0].storage === false
                      if isBot(ctx.get("User-Agent"))
                        = t("No")
                      else
                        = emoji("x")
                      = " "
                      != t('<span class="notranslate">%s</span> does not support storage', alternatives[0].name)
                    else
                      != alternatives[0].storage
                  th.align-middle.text-center(scope="row")= t("Storage")
                  td.w-33.align-middle.text-center
                    if alternatives[1].storage === false
                      if isBot(ctx.get("User-Agent"))
                        = t("No")
                      else
                        = emoji("x")
                      = " "
                      != t('<span class="notranslate">%s</span> does not support storage', alternatives[1].name)
                    else
                      != alternatives[1].storage
                tr
                  td.w-33.align-middle.text-center
                    if alternatives[0].attachment_limit === false
                      if isBot(ctx.get("User-Agent"))
                        = t("No")
                      else
                        = emoji("x")
                      = " "
                      != t('<span class="notranslate">%s</span> does not support attachments', alternatives[0].name)
                    else
                      != alternatives[0].attachment_limit
                  th.align-middle.text-center(scope="row")= t("Attachments")
                  td.w-33.align-middle.text-center
                    if alternatives[1].attachment_limit === false
                      if isBot(ctx.get("User-Agent"))
                        = t("No")
                      else
                        = emoji("x")
                      = " "
                      != t('<span class="notranslate">%s</span> does not support attachments', alternatives[1].name)
                    else
                      != alternatives[1].attachment_limit
                //- OSS
                //- Sandboxed
                //- Unlimited Domains
                //- Unlimited Aliases
                //- Time to Inbox
                //- SMTP
                //- IMAP
                //- POP3
                //- API
                //- E2EE
                //- OpenPGP
                //- WKD
                each key in ['oss', 'sandboxed', 'unlimited_domains', 'unlimited_aliases', 'tti', 'smtp', 'imap', 'pop3', 'api', 'e2ee', 'openpgp', 'wkd' ]
                  tr
                    td.w-33.align-middle.text-center
                      if typeof alternatives[0][key] === 'string'
                        if isURL(alternatives[0][key])
                          a.btn.btn-dark.btn-sm.text-nowrap(
                            href=alternatives[0][key],
                            target="_blank",
                            rel="noopener noreferrer"
                          )
                            = t("TTI")
                            = " "
                            i.fa.fa-external-link
                        else
                          if ['e2ee', 'openpgp', 'wkd'].includes(key)
                            = emoji("warning")
                          else
                            = emoji("x")
                          = " "
                          != alternatives[0][key]
                      else
                        if isBot(ctx.get("User-Agent"))
                          = alternatives[0][key] ? t("Yes") : t("No")
                        else
                          = alternatives[0][key] ? emoji("white_check_mark") : emoji("x")
                    th.align-middle.text-center(scope="row")
                      case key
                        when 'oss'
                          = t("Open-Source")
                        when 'sandboxed'
                          != t("Sandboxed Encryption")
                          = " "
                          button.confirm-prompt.btn.btn-link.text-themed.p-0.no-js(
                            type="button",
                            aria-label=t("Sandboxed Encryption"),
                            data-confirm-type="info",
                            data-confirm-show-cancel-button="false",
                            data-confirm-prompt-title=t("Sandboxed Encryption"),
                            data-confirm-prompt-html=t('Unlike other email services, Forward Email does not store your email in a shared relational database with other users\' emails. Instead it uses individually encrypted SQLite mailboxes with your email. This means that your emails are sandboxed from everyone else, and therefore bad actors (or even rogue employees) cannot access your mailbox. You can learn more about our approach to email encryption by <a href="%s" target="_blank">clicking here</a>.', l("/blog/docs/best-quantum-safe-encrypted-email-service"))
                          )
                            i.fa.fa-info-circle
                        when 'unlimited_domains'
                          = t("Unlimited Domains")
                        when 'unlimited_aliases'
                          = t("Unlimited Aliases")
                        when 'tti'
                          = "TTI"
                          = " "
                          button.confirm-prompt.btn.btn-link.text-themed.p-0.no-js(
                            type="button",
                            aria-label=t("Time to Inbox"),
                            data-confirm-type="info",
                            data-confirm-show-cancel-button="false",
                            data-confirm-prompt-title=t("Time to Inbox"),
                            data-confirm-prompt-html=t("Forward Email is the only email service that publicly shares its email delivery times (in seconds) to popular email services such as Gmail, Outlook, and Apple (and the source code behind this monitoring metric too!).")
                          )
                            i.fa.fa-info-circle
                        when 'smtp'
                          = "SMTP"
                        when 'imap'
                          = "IMAP"
                        when 'pop3'
                          = "POP3"
                        when 'api'
                          = "API"
                        when 'e2ee'
                          = "E2EE"
                          = " "
                          button.confirm-prompt.btn.btn-link.text-themed.p-0.no-js(
                            type="button",
                            aria-label=t("End-to-end Encryption"),
                            data-confirm-type="info",
                            data-confirm-show-cancel-button="false",
                            data-confirm-prompt-title=t("End-to-end Encryption"),
                            data-confirm-prompt-html=t('The email standard for end-to-end encryption (E2EE) is to use OpenPGP and Web Key Directory (WKD).  <a href="https://www.privacyguides.org/en/basics/email-security/" target="_blank" rel="noreferrer noopener">Learn more about E2EE on Privacy Guides</a>.')
                          )
                            i.fa.fa-info-circle
                        when 'openpgp'
                          = "OpenPGP"
                          = " "
                          button.confirm-prompt.btn.btn-link.text-themed.p-0.no-js(
                            type="button",
                            aria-label=t("OpenPGP Encryption"),
                            data-confirm-type="info",
                            data-confirm-show-cancel-button="false",
                            data-confirm-prompt-title=t("OpenPGP Encryption"),
                            data-confirm-prompt-html=t('OpenPGP is the open-source standard of Pretty Good Privacy (PGP). Learn more about OpenPGP on <a href="https://en.wikipedia.org/wiki/Pretty_Good_Privacy" target="_blank" rel="noreferrer noopener">Wikipedia</a> or <a href="https://www.privacyguides.org/en/basics/email-security/" target="_blank" rel="noreferrer noopener">Privacy Guides</a>.')
                          )
                            i.fa.fa-info-circle
                        when 'wkd'
                          = "WKD"
                          = " "
                          button.confirm-prompt.btn.btn-link.text-themed.p-0.no-js(
                            type="button",
                            aria-label=t("Web Key Directory"),
                            data-confirm-type="info",
                            data-confirm-show-cancel-button="false",
                            data-confirm-prompt-title=t("Web Key Directory"),
                            data-confirm-prompt-html=t('Web Key Directory (WKD) is the open-source standard for email clients and servers to discover the OpenPGP key for specific email addresses. <a href="https://www.privacyguides.org/en/basics/email-security/#what-is-the-web-key-directory-standard" target="_blank" rel="noreferrer noopener">Learn more about Web Key Directory on Privacy Guides</a>.')
                          )
                            i.fa.fa-info-circle
                    td.w-33.align-middle.text-center
                      if typeof alternatives[1][key] === 'string'
                        if isURL(alternatives[1][key])
                          a.btn.btn-dark.btn-sm.text-nowrap(
                            href=alternatives[1][key],
                            target="_blank",
                            rel="noopener noreferrer"
                          )
                            = t("TTI")
                            = " "
                            i.fa.fa-external-link
                        else
                          if ['e2ee', 'openpgp', 'wkd'].includes(key)
                            = emoji("warning")
                          else
                            = emoji("x")
                          = " "
                          != alternatives[1][key]
                      else
                        if isBot(ctx.get("User-Agent"))
                          = alternatives[1][key] ? t("Yes") : t("No")
                        else
                          = alternatives[1][key] ? emoji("white_check_mark") : emoji("x")
    if !comparison
      table.table.table-hover.table-bordered.mb-0.bg-white.bg-themed.no-search(
        data-toggle="table",
        data-sticky-header,
        data-sticky-header-offset-y="58.61"
      )
        thead.thead-dark
          tr
            th.align-middle(data-sortable, scope="col")= t("Email Service")
            th.align-middle.text-center(
              data-sortable,
              data-sorter="totalCurrencySort",
              scope="col"
            )= t("Pricing")
            th.align-middle.text-center(
              data-sortable,
              data-sorter="storageSort",
              scope="col"
            )= t("Storage")
            th.align-middle.text-center(
              data-sortable,
              data-sorter="attachmentSort",
              scope="col"
            )= t("Attachments")
            th.align-middle.text-center.text-nowrap(
              data-sortable,
              data-sorter="checkboxSort",
              scope="col"
            )= t("Open-Source")
            th.align-middle.text-center.text-nowrap(scope="col")
              != t("Sandboxed Encryption")
              = " "
              button.confirm-prompt.btn.btn-link.text-themed.p-0.no-js(
                type="button",
                aria-label=t("Sandboxed Encryption"),
                data-confirm-type="info",
                data-confirm-show-cancel-button="false",
                data-confirm-prompt-title=t("Sandboxed Encryption"),
                data-confirm-prompt-html=t('Unlike other email services, Forward Email does not store your email in a shared relational database with other users\' emails. Instead it uses individually encrypted SQLite mailboxes with your email. This means that your emails are sandboxed from everyone else, and therefore bad actors (or even rogue employees) cannot access your mailbox. You can learn more about our approach to email encryption by <a href="%s" target="_blank">clicking here</a>.', l("/blog/docs/best-quantum-safe-encrypted-email-service"))
              )
                i.fa.fa-info-circle
            th.align-middle.text-center(
              data-sortable,
              data-sorter="checkboxSort",
              scope="col"
            )= t("Unlimited Domains")
            th.align-middle.text-center(
              data-sortable,
              data-sorter="checkboxSort",
              scope="col"
            )= t("Unlimited Aliases")
            th.align-middle.text-center.text-nowrap(scope="col")
              = "TTI"
              = " "
              button.confirm-prompt.btn.btn-link.text-themed.p-0.no-js(
                type="button",
                aria-label=t("Time to Inbox"),
                data-confirm-type="info",
                data-confirm-show-cancel-button="false",
                data-confirm-prompt-title=t("Time to Inbox"),
                data-confirm-prompt-html=t("Forward Email is the only email service that publicly shares its email delivery times (in seconds) to popular email services such as Gmail, Outlook, and Apple (and the source code behind this monitoring metric too!).")
              )
                i.fa.fa-info-circle
            th.align-middle.text-center(
              data-sortable,
              data-sorter="checkboxSort",
              scope="col"
            )= "SMTP"
            th.align-middle.text-center(
              data-sortable,
              data-sorter="checkboxSort",
              scope="col"
            )= "IMAP"
            th.align-middle.text-center(
              data-sortable,
              data-sorter="checkboxSort",
              scope="col"
            )= "POP3"
            th.align-middle.text-center(
              data-sortable,
              data-sorter="checkboxSort",
              scope="col"
            )= "API"
            th.align-middle.text-center.text-nowrap(scope="col")
              = "E2EE"
              = " "
              button.confirm-prompt.btn.btn-link.text-themed.p-0.no-js(
                type="button",
                aria-label=t("End-to-end Encryption"),
                data-confirm-type="info",
                data-confirm-show-cancel-button="false",
                data-confirm-prompt-title=t("End-to-end Encryption"),
                data-confirm-prompt-html=t('The email standard for end-to-end encryption (E2EE) is to use OpenPGP and Web Key Directory (WKD).  <a href="https://www.privacyguides.org/en/basics/email-security/" target="_blank" rel="noreferrer noopener">Learn more about E2EE on Privacy Guides</a>.')
              )
                i.fa.fa-info-circle
            th.align-middle.text-center.text-nowrap(scope="col")
              = "OpenPGP"
              = " "
              button.confirm-prompt.btn.btn-link.text-themed.p-0.no-js(
                type="button",
                aria-label=t("OpenPGP Encryption"),
                data-confirm-type="info",
                data-confirm-show-cancel-button="false",
                data-confirm-prompt-title=t("OpenPGP Encryption"),
                data-confirm-prompt-html=t('OpenPGP is the open-source standard of Pretty Good Privacy (PGP). Learn more about OpenPGP on <a href="https://en.wikipedia.org/wiki/Pretty_Good_Privacy" target="_blank" rel="noreferrer noopener">Wikipedia</a> or <a href="https://www.privacyguides.org/en/basics/email-security/" target="_blank" rel="noreferrer noopener">Privacy Guides</a>.')
              )
                i.fa.fa-info-circle
            th.align-middle.text-center.text-nowrap(scope="col")
              = "WKD"
              = " "
              button.confirm-prompt.btn.btn-link.text-themed.p-0.no-js(
                type="button",
                aria-label=t("Web Key Directory"),
                data-confirm-type="info",
                data-confirm-show-cancel-button="false",
                data-confirm-prompt-title=t("Web Key Directory"),
                data-confirm-prompt-html=t('Web Key Directory (WKD) is the open-source standard for email clients and servers to discover the OpenPGP key for specific email addresses. <a href="https://www.privacyguides.org/en/basics/email-security/#what-is-the-web-key-directory-standard" target="_blank" rel="noreferrer noopener">Learn more about Web Key Directory on Privacy Guides</a>.')
              )
                i.fa.fa-info-circle
        tbody
          each alternative in alternatives
            tr(
              class=alternative.name === "Forward Email" ? "table-success" : alternative.comparison ? "table-primary" : ""
            )
              //- Name
              td.align-middle
                h3.h5.mb-1
                  a(
                    href=l(`/blog/best-${alternative.slug}-alternative`),
                    target="_blank",
                    rel="noopener noreferrer",
                    title=isBot(ctx.get("User-Agent")) ? striptags(t('<span class="notranslate">%d</span> Best <span class="notranslate">%s</span> Alternatives in <span class="notranslate">%s</span>', config.alternatives.length - 1, alternative.name, dayjs().format("YYYY"))) : false,
                    class=alternative.name === "Forward Email" ? "text-dark font-weight-bold" : alternative.comparison ? "text-dark" : "text-themed"
                  )= alternative.name
                if alternative.name === "Forward Email"
                  = " "
                  span.lead
                    span.badge.badge-success
                      = emoji("star")
                      = " "
                      if isBot(ctx.get("User-Agent"))
                        = t(_.sample(["Recommended", "Preferred", "Top Rated", "Suggested"]))
                      else
                        = t("Recommended")
                //- Description
                blockquote.mb-1= t(alternative.description)
                ul.list-inline.mb-1
                  li.list-inline-item.mb-1
                    //- Screenshot
                    a.btn.btn-primary.btn-sm.text-nowrap(
                      href=manifest(alternative.img),
                      target="_blank",
                      data-toggle="lightbox",
                      data-title=alternative.name,
                      data-footer=t("Screenshot by Forward Email")
                    )
                      i.fa.fa-image
                      = " "
                      = t("Screenshot")
                  li.list-inline-item.mb-1
                    //- Website
                    a.btn.btn-dark.btn-sm.text-nowrap(
                      href=alternative.website,
                      target="_blank",
                      rel="noopener noreferrer"
                    )
                      i.fa.fa-external-link
                      = " "
                      = t("Website")
                  if !isBot(ctx.get("User-Agent")) && sorted.length > 0
                    li.list-inline-item.mb-1
                      button.btn.btn-sm.btn-dark.dropdown-toggle(
                        type="button",
                        data-toggle="dropdown",
                        data-boundary="scrollParent",
                        aria-haspopup="true",
                        aria-expanded="false"
                      )
                        i.fa.fa-balance-scale
                        = " "
                        = t("Compare with...")
                      .dropdown-menu.dropdown-menu-right.small
                        .card-columns.small
                          each a in sorted
                            if a.name !== alternative.name
                              a.dropdown-item(
                                href=l(`/blog/${alternative.slug}-vs-${a.slug}-email-service-comparison`)
                              )= a.name
                //- Badges
                ul.list-unstyled
                  //- Hardenize
                  li.mb-1
                    a(
                      aria-label=t("Hardenize Test"),
                      href=alternative.hardenize_href,
                      target="_blank",
                      rel="noopener noreferrer"
                    )
                      img(
                        loading="lazy",
                        alt=t("Hardenize Test"),
                        width=128,
                        height=20,
                        src=`https://img.shields.io/badge/Hardenize_Test-${alternative.hardenize_pass ? "Pass" : "Fail"}-${alternative.hardenize_pass ? "green" : "red"}`
                      )

                  //- Internet.nl Site
                  li.mb-1
                    a(
                      aria-label=t("Internet.nl Site Test"),
                      href=alternative.internetnl_site_href,
                      target="_blank",
                      rel="noopener noreferrer"
                    )
                      - let color1 = "red";
                      if (alternative.internetnl_site_value >= 90)
                        - color1 = "green";
                      else if (alternative.internetnl_site_value >= 80)
                        - color1 = "orange";
                      img(
                        loading="lazy",
                        alt=t("Internet.nl Site Test"),
                        width=170,
                        height=20,
                        src=`https://img.shields.io/badge/Internet.nl_Site_Test-${alternative.internetnl_site_value}/100-${color1}`
                      )

                  //- Internet.nl Mail
                  li.mb-1
                    a(
                      aria-label=t("Internet.nl Mail Test"),
                      href=alternative.internetnl_mail_href,
                      target="_blank",
                      rel="noopener noreferrer"
                    )
                      - let color2 = "red";
                      if (alternative.internetnl_mail_value >= 90)
                        - color2 = "green";
                      else if (alternative.internetnl_mail_value >= 80)
                        - color2 = "orange";
                      img(
                        loading="lazy",
                        alt=t("Internet.nl Mail Test"),
                        width=172,
                        height=20,
                        src=`https://img.shields.io/badge/Internet.nl_Mail_Test-${alternative.internetnl_mail_value}/100-${color2}`
                      )

                  //- Mozilla Observatory
                  li.mb-1
                    a(
                      href=`https://observatory.mozilla.org/analyze/${alternative.root_domain}`,
                      aria-label=t("Mozilla HTTP Observatory Grade"),
                      target="_blank",
                      rel="noopener noreferrer"
                    )
                      img(
                        loading="lazy",
                        alt=t("Mozilla HTTP Observatory Grade"),
                        src=`https://img.shields.io/mozilla-observatory/grade-score/${alternative.root_domain}`,
                        width=162,
                        height=20
                      )
                  //- Qualys SSL Labs
                  li
                    a(
                      aria-label=t("Qualys SSL Labs SSL Server Test"),
                      href=`https://www.ssllabs.com/ssltest/analyze.html?d=${alternative.root_domain}&latest`,
                      target="_blank",
                      rel="noopener noreferrer"
                    )
                      - let color = "red";
                      if alternative.ssl_labs === 'A+'
                        - color = "green";
                      else if alternative.ssl_labs.startsWith('A')
                        - color = "blue";
                      else if alternative.ssl_labs.startsWith('B')
                        - color = "orange";
                      img(
                        loading="lazy",
                        alt=t("Qualys SSL Labs SSL Server Test"),
                        src=`https://img.shields.io/badge/Qualys_SSL_Labs-${alternative.ssl_labs}_Grade-${color}`,
                        width=164,
                        height=20
                      )
              //- Pricing
              td.align-middle.text-center
                != alternative.pricing
              //- Storage
              td.align-middle.text-center
                if alternative.storage === false
                  if isBot(ctx.get("User-Agent"))
                    = t("No")
                  else
                    = emoji("x")
                  = " "
                  != t('<span class="notranslate">%s</span> does not support storage', alternative.name)
                else
                  != alternative.storage
              //- Attachment Limit
              td.align-middle.text-center
                if alternative.attachment_limit === false
                  if isBot(ctx.get("User-Agent"))
                    = t("No")
                  else
                    = emoji("x")
                  = " "
                  != t('<span class="notranslate">%s</span> does not support attachments', alternative.name)
                else
                  != alternative.attachment_limit
              //- OSS
              //- Sandboxed
              //- Unlimited Domains
              //- Unlimited Aliases
              //- Time to Inbox
              //- SMTP
              //- IMAP
              //- POP3
              //- API
              //- E2EE
              //- OpenPGP
              //- WKD
              each key in ['oss', 'sandboxed', 'unlimited_domains', 'unlimited_aliases', 'tti', 'smtp', 'imap', 'pop3', 'api', 'e2ee', 'openpgp', 'wkd' ]
                td.align-middle.text-center
                  if typeof alternative[key] === 'string'
                    if isURL(alternative[key])
                      a.btn.btn-dark.btn-sm.text-nowrap(
                        href=alternative[key],
                        target="_blank",
                        rel="noopener noreferrer"
                      )
                        = t("TTI")
                        = " "
                        i.fa.fa-external-link
                    else
                      if ['e2ee', 'openpgp', 'wkd'].includes(key)
                        = emoji("warning")
                      else
                        = emoji("x")
                      = " "
                      != alternative[key]
                  else
                    if isBot(ctx.get("User-Agent"))
                      = alternative[key] ? t("Yes") : t("No")
                    else
                      = alternative[key] ? emoji("white_check_mark") : emoji("x")
    .container.no-search
      .row
        .col
          h2#email-service-screenshots.text-center.py-3.py-md-5.mb-0
            if ctx.pathWithoutLocale === '/blog/best-transactional-email-service'
              = t("Transactional Email Service Screenshots")
            else if ctx.pathWithoutLocale === '/blog/best-email-api-developer-service'
              = t("Email API Screenshots")
            else if ctx.pathWithoutLocale === '/blog/best-email-spam-filtering-service'
              = t("Email Spam Filtering Service Screenshots")
            else if ctx.pathWithoutLocale === '/blog/best-open-source-email-service'
              = t("Open-Source Email Service Screenshots")
            else if ctx.pathWithoutLocale === '/blog/best-private-email-service'
              = t("Private Email Service Screenshots")
            else
              = t("Email Service Screenshots")
      .row
        if alternatives.length <= 2
          each alternative in alternatives
            .d-flex.col-md-6.mb-3.align-items-stretch
              +renderCard(alternative)
        else
          .card-columns-2
            each alternative in alternatives
              +renderCard(alternative)
      .row.mt-3
        .col.text-center
          ul.list-unstyled
            each str in ['best-email-service', 'best-private-email-service', 'best-open-source-email-service', 'best-transactional-email-service', 'best-email-api-developer-service', 'best-email-spam-filtering-service']
              if ctx.pathWithoutLocale !== `/blog/${str}`
                li.mb-3
                  a.btn.btn-dark.btn-lg.btn-block(href=l(`/blog/${str}`))
                    - let title = config.meta[`/blog/${str}`][0];
                    if !isBot(ctx.get("User-Agent"))
                      - title = title.split("Best ")[1].split(" in")[0];
                    != striptags(t(title))
                    = " "
                    i.fa.fa-angle-double-right.align-middle

      if config.alternatives && sorted.length > 0 && (comparison || alternativeTo) && isBot(ctx.get("User-Agent"))
        - const match = alternatives.find((a) => a.name === alternativeTo);
        .row.mt-3
          .col.text-center
            h2!= t('Compare <span class="notranslate">%s</span> with <span class="notranslate">%d</span> email services', match.name, config.alternatives.length - 1)
            ul.list-unstyled
              each a in sorted
                if a.name !== alternativeTo
                  li
                    - const strippedTitle = striptags(t(`<span class="notranslate">%s</span> vs <span class="notranslate">%s</span> Comparison (<span class="notranslate">%s</span>)`, match.name, a.name, dayjs().format("YYYY")));
                    a(
                      href=l(`/blog/${match.slug}-vs-${a.slug}-email-service-comparison`)
                    )= strippedTitle

      //- Disclaimer
      if !isBot(ctx.get('User-Agent'))
        - const externalalternatives = alternatives.filter((p) => p.name !== "Forward Email");
        if externalalternatives.length > 0
          .row.mt-3
            .col-12
              .alert.alert-secondary.small
                strong= t("Data inaccurate?")
                = " "
                = t("All of our data used to curate these pages is open-source and maintained in our GitHub repository.  Please submit a pull request if you see outdated or inaccurate data.  Note that the Hardenize test is only considered passing if all checkboxes are green (and not greyed out).")
              .alert.alert-secondary.small.mb-0
                strong= t("Notice of Non-Affiliation and Disclaimer:")
                = " "
                != t('We are not affiliated, associated, authorized, endorsed by, or in any way officially connected with <span class="notranslate">%s</span>, or any of its subsidiaries or its affiliates. The name <span class="notranslate">%s</span> as well as related names, marks, emblems, and images are registered trademarks of their respective owners.', arrayJoinConjunction(externalalternatives.map((p) => p.name)), arrayJoinConjunction(externalalternatives.map((p) => p.name)))
  if !isBot(ctx.get('User-Agent'))
    .d-block.overflow-hidden.no-search(data-ignore-hash-change)
      include _marketing
    .container.text-center
      .row.mb-3
        .col-12
          a.text-decoration-none.pt-1.pb-4.pt-lg-4.text-uppercase.mx-auto.text-white(
            href="#testimonials"
          )
            i.fa.fa-angle-double-down
            = " "
            = t("Testimonials")
            = " "
            i.fa.fa-angle-double-down
    include _testimonials
