if breadcrumbs.length > 1
  nav.d-none.d-md-block(aria-label="breadcrumb")
    ol.breadcrumb.justify-content-center.justify-content-md-start.mb-3.py-1.small
      each breadcrumb, i in breadcrumbs
        if i === breadcrumbs.length - 1
          li.breadcrumb-item.active(aria-current="page")
            if _.isObject(breadcrumb) && breadcrumb.href
              a.text-themed(
                href=_.isObject(breadcrumb) ? breadcrumb.href : `/${breadcrumbs.slice(0, i + 1).join("/")}/`
              )
                = _.isObject(breadcrumb) ? breadcrumb.name : t(titleize(humanize(breadcrumb)))
            else
              = _.isObject(breadcrumb) ? breadcrumb.name : t(titleize(humanize(breadcrumb)))
        else
          li.breadcrumb-item
            a.text-themed(
              href=_.isObject(breadcrumb) ? breadcrumb.href : `/${breadcrumbs.slice(0, i + 1).join("/")}/`
            )
              = _.isObject(breadcrumb) ? breadcrumb.name : t(titleize(humanize(breadcrumb)))
  .text-center.text-md-left.d-md-flex.my-3
    h1.mb-0(class=breadcrumbHeaderCentered ? "flex-grow-1 text-center" : "")
      if breadcrumbs.length > 0
        = _.isObject(breadcrumbs[breadcrumbs.length - 1]) ? breadcrumbs[breadcrumbs.length - 1].header || breadcrumbs[breadcrumbs.length - 1].name : t(titleize(humanize(breadcrumbs[breadcrumbs.length - 1])))
      else
        = _.isObject(breadcrumbs[0]) ? breadcrumbs[0].header || breadcrumbs[0].name : t(titleize(humanize(breadcrumbs[0])))
    if !breadcrumbHeaderCentered
      .flex-grow-1.ml-md-5.d-md-flex.align-items-center.justify-content-md-end.justify-content-center.mt-3.mt-md-0
        if domain && ((domain.has_mx_record && domain.has_txt_record) || domain.plan !== 'free') && (ctx.pathWithoutLocale === `/my-account/domains/${domain.id}` || ctx.pathWithoutLocale === `/my-account/domains/${punycode.toASCII(domain.name)}`)
          ul.list-inline.mb-0
            li.list-inline-item.mb-1
              a.btn.btn-sm.btn-outline-dark(
                href=domain.plan === "free" ? "#" : l(`/my-account/domains/${punycode.toASCII(domain.name)}/aliases`),
                role=domain.plan === "free" ? "button" : false,
                data-target=domain.plan === "free" ? "#modal-upgrade" : false,
                data-toggle=domain.plan === "free" ? "modal" : false
              )
                i.fa.fa-fw.fa-users
                = " "
                = t("Aliases")
            if domain.group === 'admin'
              li.list-inline-item.mb-1
                a.btn.btn-sm.btn-outline-dark(
                  href=domain.plan === "free" ? "#" : l(`/my-account/analytics?domains=${domain.name}`),
                  role=domain.plan === "free" ? "button" : false,
                  data-target=domain.plan === "free" ? "#modal-upgrade-analytics" : false,
                  data-toggle=domain.plan === "free" ? "modal" : false
                )
                  i.fa.fa-fw.fas.fa-chart-area
                  = " "
                  = t("Analytics")
              li.list-inline-item.mb-1
                a.btn.btn-sm.btn-outline-dark(
                  href=domain.plan === "free" ? "#" : l(`/my-account/logs?domains=${domain.name}`),
                  role=domain.plan === "free" ? "button" : false,
                  data-target=domain.plan === "free" ? "#modal-upgrade-logs" : false,
                  data-toggle=domain.plan === "free" ? "modal" : false
                )
                  i.fa.fa-fw.fa-stream
                  = " "
                  = t("Logs")
              li.list-inline-item.mb-1
                a.btn.btn-sm.btn-outline-dark(
                  href=l(`/my-account/domains/${punycode.toASCII(domain.name)}/advanced-settings`)
                )
                  i.fa.fa-fw.fa-tools
                  = " "
                  = t("Settings")
              li.list-inline-item.mb-1
                .btn-group.btn-group-sm
                  button.btn.btn-sm.btn-outline-dark.dropdown-toggle(
                    type="button",
                    data-toggle="dropdown",
                    data-boundary="window",
                    aria-haspopup="true",
                    aria-expanded="false"
                  )
                    span.d-none.d-md-inline-block= t("Plan")
                    span.d-md-none= t("Plan")
                  .dropdown-menu.dropdown-menu-right
                    h6.dropdown-header= t("Change Plan")
                    each plan in [ 'free', 'enhanced_protection', 'team' ]
                      a.dropdown-item(
                        href=l(`/my-account/domains/${punycode.toASCII(domain.name)}/billing?plan=${plan}`),
                        disabled=plan === domain.plan,
                        class=plan === domain.plan ? "disabled" : ""
                      )
                        case plan
                          when 'enhanced_protection'
                            i.fa.fa-fw.fa-shield
                            = " "
                            = t("Enhanced Protection")
                          when 'team'
                            i.fa.fa-fw.fa-users
                            = " "
                            = t("Team")
                          default
                            = t("Free")
                            = " ("
                            = t("DNS-based")
                            = ")"
                        if plan === domain.plan
                          = " ("
                          = t("Current")
                          = ")"
                    .dropdown-divider
                    a.dropdown-item.small.text-muted(
                      href=l(`/private-business-email?domain=${domain.name}`)
                    )= t("See all plan features")
        else if domain && (ctx.pathWithoutLocale === `/my-account/domains/${domain.id}/aliases` || ctx.pathWithoutLocale === `/my-account/domains/${punycode.toASCII(domain.name)}/aliases`)
          ul.list-inline.mb-0
            if !domain.is_global && domain.group === 'admin'
              li.list-inline-item.mb-1
                form.ajax-form.confirm-prompt.d-inline-block(
                  action=l(`/my-account/domains/${punycode.toASCII(domain.name)}/aliases/import`),
                  method="POST"
                )
                  button.btn.btn-dark(type="submit")
                    != t('Import <span class="notranslate">TXT</span> Records')
                    = " "
                    i.fa.fa-cloud-download-alt
            if domain.group === 'admin' || (config.ubuntuTeamMapping && !Object.keys(config.ubuntuTeamMapping).includes(domain.name))
              li.list-inline-item.mb-1
                a.btn.btn-dark(
                  href=l(`/my-account/domains/${punycode.toASCII(domain.name)}/aliases/new`),
                  role="button",
                  data-toggle="modal-anchor",
                  data-target="#modal-alias"
                )
                  = t("Alias")
                  = " "
                  i.fa.fas.fa-plus-circle
        else
          case ctx.pathWithoutLocale
            when '/my-account/logs'
              ul.list-inline.mb-0
                if !_.isEmpty(ctx.query)
                  li.list-inline-item.mb-1
                    a.btn.btn-dark(href=l("/my-account/logs"))
                      i.fa.fa-filter
                      = " "
                      = t("Clear filters")
                if responseCodes && responseCodes.length > 0
                  li.list-inline-item.mb-1
                    .btn-group
                      button.btn.btn-dark.dropdown-toggle(
                        type="button",
                        data-toggle="dropdown",
                        data-boundary="window",
                        aria-haspopup="true",
                        aria-expanded="false"
                      )
                        = t("Filter by code")
                      .dropdown-menu
                        h6.dropdown-header= t("Filter by code:")
                        each code in responseCodes
                          a.dropdown-item(
                            href=l(`/my-account/logs?response_code=${code}${ctx.query.domains ? `&domains=${ctx.query.domains}` : ""}`)
                          )
                            = code
                if bounceCategories && bounceCategories.length > 0
                  li.list-inline-item.mb-1
                    .btn-group
                      button.btn.btn-dark.dropdown-toggle(
                        type="button",
                        data-toggle="dropdown",
                        data-boundary="window",
                        aria-haspopup="true",
                        aria-expanded="false"
                      )
                        = t("Filter by category")
                      .dropdown-menu
                        h6.dropdown-header= t("Filter by category:")
                        each category in bounceCategories
                          a.dropdown-item(
                            href=l(`/my-account/logs?bounce_category=${category}${ctx.query.domains ? `&domains=${ctx.query.domains}` : ""}`)
                          )
                            = category === "dmarc" ? "DMARC" : titleize(humanize(category))
                li.list-inline-item.mb-1
                  a.btn.btn-dark(
                    href=l("/email-api#tag/logs"),
                    target="_blank"
                  )
                    i.fa.fa-fw.fa-code.text-themed
                    = " "
                    = t("Retrieve via API")
                if logs && logs.length > 0 && itemCount && itemCount > 0
                  li.list-inline-item.mb-1
                    form.ajax-form.confirm-prompt(
                      action=l("/my-account/logs/download"),
                      method="GET",
                      data-confirm-prompt-title=t("Download Log Report"),
                      data-confirm-prompt-html=t('We will send an email to <span class="font-weight-bold text-monospace notranslate">%s</span> when your CSV spreadsheet is ready with <span class="font-weight-bold notranslate">%d</span> log rows.', user.email, itemCount)
                    )
                      if ctx.query && Object.keys(ctx.query).length > 0
                        each key in Object.keys(ctx.query)
                          if key !== 'limit' && key !== 'page'
                            input(
                              type="hidden",
                              name=key,
                              value=ctx.query[key]
                            )
                      button.btn.btn-primary(type="submit")
                        i.fa.fa-file-csv
                        = " "
                        = t("Download Log Report")
            when '/my-account/analytics'
              ul.list-inline.mb-0
                li.list-inline-item.mb-1
                  if user.plan === 'free'
                    button.btn.btn-dark(
                      type="button",
                      data-target="#modal-upgrade-logs",
                      data-toggle="modal"
                    )
                      i.fa.fa-fw.fa-stream
                      = " "
                      = t("Logs")
                  else
                    a.btn.btn-dark(
                      href=l(`/my-account/logs${ctx.query.domains ? `?domains=${ctx.query.domains}` : ""}`)
                    )
                      i.fa.fa-fw.fa-stream
                      = " "
                      = t("Logs")
            when '/my-account/domains'
              ul.list-inline.mb-0
                li.list-inline-item.mb-1
                  a.btn.btn-dark(
                    href=l("/my-account/domains/new"),
                    role="button",
                    data-toggle="modal-anchor",
                    data-target="#modal-domain"
                  )
                    = t("Domain")
                    = " "
                    i.fa.fas.fa-plus-circle
                if domains.length > 0 || isSANB(ctx.query.q)
                  li.list-inline-item.mb-1
                    a.btn.btn-dark(
                      href=l("/my-account/domains/aliases/new"),
                      role="button",
                      data-toggle="modal-anchor",
                      data-target="#modal-alias"
                    )
                      = t("Alias")
                      = " "
                      i.fa.fas.fa-plus-circle
                if domains.length > 0 || isSANB(ctx.query.q)
                  li.list-inline-item.mb-1
                    if user.plan === 'free'
                      button.btn.btn-dark(
                        type="button",
                        data-target="#modal-upgrade-analytics",
                        data-toggle="modal"
                      )
                        i.fa.fa-fw.fas.fa-chart-area
                        = " "
                        = t("Analytics")
                    else
                      a.btn.btn-dark(href=l("/my-account/analytics"))
                        i.fa.fa-fw.fas.fa-chart-area
                        = " "
                        = t("Analytics")
                  li.list-inline-item.mb-1
                    if user.plan === 'free'
                      button.btn.btn-dark(
                        type="button",
                        data-target="#modal-upgrade-logs",
                        data-toggle="modal"
                      )
                        i.fa.fa-fw.fa-stream
                        = " "
                        = t("Logs")
                    else
                      a.btn.btn-dark(href=l("/my-account/logs"))
                        i.fa.fa-fw.fa-stream
                        = " "
                        = t("Logs")
            default
              = " "
